// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
#include "Properties.hxx"

//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "CircuitConfigurationData.hxx"

#include "ScalarFlowResistanceData.hxx"

#include "ScalarElectricResistanceData.hxx"

#include "ScalarHeatResistanceData.hxx"

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        // CircuitConfigurationData
        // 

        const CircuitConfigurationData::CardiovascularOpenResistance_optional& CircuitConfigurationData::
        CardiovascularOpenResistance () const
        {
          return this->CardiovascularOpenResistance_;
        }

        CircuitConfigurationData::CardiovascularOpenResistance_optional& CircuitConfigurationData::
        CardiovascularOpenResistance ()
        {
          return this->CardiovascularOpenResistance_;
        }

        void CircuitConfigurationData::
        CardiovascularOpenResistance (const CardiovascularOpenResistance_type& x)
        {
          this->CardiovascularOpenResistance_.set (x);
        }

        void CircuitConfigurationData::
        CardiovascularOpenResistance (const CardiovascularOpenResistance_optional& x)
        {
          this->CardiovascularOpenResistance_ = x;
        }

        void CircuitConfigurationData::
        CardiovascularOpenResistance (::std::unique_ptr< CardiovascularOpenResistance_type > x)
        {
          this->CardiovascularOpenResistance_.set (std::move (x));
        }

        const CircuitConfigurationData::DefaultClosedElectricResistance_optional& CircuitConfigurationData::
        DefaultClosedElectricResistance () const
        {
          return this->DefaultClosedElectricResistance_;
        }

        CircuitConfigurationData::DefaultClosedElectricResistance_optional& CircuitConfigurationData::
        DefaultClosedElectricResistance ()
        {
          return this->DefaultClosedElectricResistance_;
        }

        void CircuitConfigurationData::
        DefaultClosedElectricResistance (const DefaultClosedElectricResistance_type& x)
        {
          this->DefaultClosedElectricResistance_.set (x);
        }

        void CircuitConfigurationData::
        DefaultClosedElectricResistance (const DefaultClosedElectricResistance_optional& x)
        {
          this->DefaultClosedElectricResistance_ = x;
        }

        void CircuitConfigurationData::
        DefaultClosedElectricResistance (::std::unique_ptr< DefaultClosedElectricResistance_type > x)
        {
          this->DefaultClosedElectricResistance_.set (std::move (x));
        }

        const CircuitConfigurationData::DefaultOpenElectricResistance_optional& CircuitConfigurationData::
        DefaultOpenElectricResistance () const
        {
          return this->DefaultOpenElectricResistance_;
        }

        CircuitConfigurationData::DefaultOpenElectricResistance_optional& CircuitConfigurationData::
        DefaultOpenElectricResistance ()
        {
          return this->DefaultOpenElectricResistance_;
        }

        void CircuitConfigurationData::
        DefaultOpenElectricResistance (const DefaultOpenElectricResistance_type& x)
        {
          this->DefaultOpenElectricResistance_.set (x);
        }

        void CircuitConfigurationData::
        DefaultOpenElectricResistance (const DefaultOpenElectricResistance_optional& x)
        {
          this->DefaultOpenElectricResistance_ = x;
        }

        void CircuitConfigurationData::
        DefaultOpenElectricResistance (::std::unique_ptr< DefaultOpenElectricResistance_type > x)
        {
          this->DefaultOpenElectricResistance_.set (std::move (x));
        }

        const CircuitConfigurationData::DefaultClosedFlowResistance_optional& CircuitConfigurationData::
        DefaultClosedFlowResistance () const
        {
          return this->DefaultClosedFlowResistance_;
        }

        CircuitConfigurationData::DefaultClosedFlowResistance_optional& CircuitConfigurationData::
        DefaultClosedFlowResistance ()
        {
          return this->DefaultClosedFlowResistance_;
        }

        void CircuitConfigurationData::
        DefaultClosedFlowResistance (const DefaultClosedFlowResistance_type& x)
        {
          this->DefaultClosedFlowResistance_.set (x);
        }

        void CircuitConfigurationData::
        DefaultClosedFlowResistance (const DefaultClosedFlowResistance_optional& x)
        {
          this->DefaultClosedFlowResistance_ = x;
        }

        void CircuitConfigurationData::
        DefaultClosedFlowResistance (::std::unique_ptr< DefaultClosedFlowResistance_type > x)
        {
          this->DefaultClosedFlowResistance_.set (std::move (x));
        }

        const CircuitConfigurationData::DefaultOpenFlowResistance_optional& CircuitConfigurationData::
        DefaultOpenFlowResistance () const
        {
          return this->DefaultOpenFlowResistance_;
        }

        CircuitConfigurationData::DefaultOpenFlowResistance_optional& CircuitConfigurationData::
        DefaultOpenFlowResistance ()
        {
          return this->DefaultOpenFlowResistance_;
        }

        void CircuitConfigurationData::
        DefaultOpenFlowResistance (const DefaultOpenFlowResistance_type& x)
        {
          this->DefaultOpenFlowResistance_.set (x);
        }

        void CircuitConfigurationData::
        DefaultOpenFlowResistance (const DefaultOpenFlowResistance_optional& x)
        {
          this->DefaultOpenFlowResistance_ = x;
        }

        void CircuitConfigurationData::
        DefaultOpenFlowResistance (::std::unique_ptr< DefaultOpenFlowResistance_type > x)
        {
          this->DefaultOpenFlowResistance_.set (std::move (x));
        }

        const CircuitConfigurationData::DefaultClosedHeatResistance_optional& CircuitConfigurationData::
        DefaultClosedHeatResistance () const
        {
          return this->DefaultClosedHeatResistance_;
        }

        CircuitConfigurationData::DefaultClosedHeatResistance_optional& CircuitConfigurationData::
        DefaultClosedHeatResistance ()
        {
          return this->DefaultClosedHeatResistance_;
        }

        void CircuitConfigurationData::
        DefaultClosedHeatResistance (const DefaultClosedHeatResistance_type& x)
        {
          this->DefaultClosedHeatResistance_.set (x);
        }

        void CircuitConfigurationData::
        DefaultClosedHeatResistance (const DefaultClosedHeatResistance_optional& x)
        {
          this->DefaultClosedHeatResistance_ = x;
        }

        void CircuitConfigurationData::
        DefaultClosedHeatResistance (::std::unique_ptr< DefaultClosedHeatResistance_type > x)
        {
          this->DefaultClosedHeatResistance_.set (std::move (x));
        }

        const CircuitConfigurationData::DefaultOpenHeatResistance_optional& CircuitConfigurationData::
        DefaultOpenHeatResistance () const
        {
          return this->DefaultOpenHeatResistance_;
        }

        CircuitConfigurationData::DefaultOpenHeatResistance_optional& CircuitConfigurationData::
        DefaultOpenHeatResistance ()
        {
          return this->DefaultOpenHeatResistance_;
        }

        void CircuitConfigurationData::
        DefaultOpenHeatResistance (const DefaultOpenHeatResistance_type& x)
        {
          this->DefaultOpenHeatResistance_.set (x);
        }

        void CircuitConfigurationData::
        DefaultOpenHeatResistance (const DefaultOpenHeatResistance_optional& x)
        {
          this->DefaultOpenHeatResistance_ = x;
        }

        void CircuitConfigurationData::
        DefaultOpenHeatResistance (::std::unique_ptr< DefaultOpenHeatResistance_type > x)
        {
          this->DefaultOpenHeatResistance_.set (std::move (x));
        }

        const CircuitConfigurationData::MachineClosedResistance_optional& CircuitConfigurationData::
        MachineClosedResistance () const
        {
          return this->MachineClosedResistance_;
        }

        CircuitConfigurationData::MachineClosedResistance_optional& CircuitConfigurationData::
        MachineClosedResistance ()
        {
          return this->MachineClosedResistance_;
        }

        void CircuitConfigurationData::
        MachineClosedResistance (const MachineClosedResistance_type& x)
        {
          this->MachineClosedResistance_.set (x);
        }

        void CircuitConfigurationData::
        MachineClosedResistance (const MachineClosedResistance_optional& x)
        {
          this->MachineClosedResistance_ = x;
        }

        void CircuitConfigurationData::
        MachineClosedResistance (::std::unique_ptr< MachineClosedResistance_type > x)
        {
          this->MachineClosedResistance_.set (std::move (x));
        }

        const CircuitConfigurationData::MachineOpenResistance_optional& CircuitConfigurationData::
        MachineOpenResistance () const
        {
          return this->MachineOpenResistance_;
        }

        CircuitConfigurationData::MachineOpenResistance_optional& CircuitConfigurationData::
        MachineOpenResistance ()
        {
          return this->MachineOpenResistance_;
        }

        void CircuitConfigurationData::
        MachineOpenResistance (const MachineOpenResistance_type& x)
        {
          this->MachineOpenResistance_.set (x);
        }

        void CircuitConfigurationData::
        MachineOpenResistance (const MachineOpenResistance_optional& x)
        {
          this->MachineOpenResistance_ = x;
        }

        void CircuitConfigurationData::
        MachineOpenResistance (::std::unique_ptr< MachineOpenResistance_type > x)
        {
          this->MachineOpenResistance_.set (std::move (x));
        }

        const CircuitConfigurationData::RespiratoryClosedResistance_optional& CircuitConfigurationData::
        RespiratoryClosedResistance () const
        {
          return this->RespiratoryClosedResistance_;
        }

        CircuitConfigurationData::RespiratoryClosedResistance_optional& CircuitConfigurationData::
        RespiratoryClosedResistance ()
        {
          return this->RespiratoryClosedResistance_;
        }

        void CircuitConfigurationData::
        RespiratoryClosedResistance (const RespiratoryClosedResistance_type& x)
        {
          this->RespiratoryClosedResistance_.set (x);
        }

        void CircuitConfigurationData::
        RespiratoryClosedResistance (const RespiratoryClosedResistance_optional& x)
        {
          this->RespiratoryClosedResistance_ = x;
        }

        void CircuitConfigurationData::
        RespiratoryClosedResistance (::std::unique_ptr< RespiratoryClosedResistance_type > x)
        {
          this->RespiratoryClosedResistance_.set (std::move (x));
        }

        const CircuitConfigurationData::RespiratoryOpenResistance_optional& CircuitConfigurationData::
        RespiratoryOpenResistance () const
        {
          return this->RespiratoryOpenResistance_;
        }

        CircuitConfigurationData::RespiratoryOpenResistance_optional& CircuitConfigurationData::
        RespiratoryOpenResistance ()
        {
          return this->RespiratoryOpenResistance_;
        }

        void CircuitConfigurationData::
        RespiratoryOpenResistance (const RespiratoryOpenResistance_type& x)
        {
          this->RespiratoryOpenResistance_.set (x);
        }

        void CircuitConfigurationData::
        RespiratoryOpenResistance (const RespiratoryOpenResistance_optional& x)
        {
          this->RespiratoryOpenResistance_ = x;
        }

        void CircuitConfigurationData::
        RespiratoryOpenResistance (::std::unique_ptr< RespiratoryOpenResistance_type > x)
        {
          this->RespiratoryOpenResistance_.set (std::move (x));
        }
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        // CircuitConfigurationData
        //

        CircuitConfigurationData::
        CircuitConfigurationData ()
        : ::mil::tatrc::physiology::datamodel::ObjectData (),
          CardiovascularOpenResistance_ (this),
          DefaultClosedElectricResistance_ (this),
          DefaultOpenElectricResistance_ (this),
          DefaultClosedFlowResistance_ (this),
          DefaultOpenFlowResistance_ (this),
          DefaultClosedHeatResistance_ (this),
          DefaultOpenHeatResistance_ (this),
          MachineClosedResistance_ (this),
          MachineOpenResistance_ (this),
          RespiratoryClosedResistance_ (this),
          RespiratoryOpenResistance_ (this)
        {
        }

        CircuitConfigurationData::
        CircuitConfigurationData (const CircuitConfigurationData& x,
                                  ::xml_schema::flags f,
                                  ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ObjectData (x, f, c),
          CardiovascularOpenResistance_ (x.CardiovascularOpenResistance_, f, this),
          DefaultClosedElectricResistance_ (x.DefaultClosedElectricResistance_, f, this),
          DefaultOpenElectricResistance_ (x.DefaultOpenElectricResistance_, f, this),
          DefaultClosedFlowResistance_ (x.DefaultClosedFlowResistance_, f, this),
          DefaultOpenFlowResistance_ (x.DefaultOpenFlowResistance_, f, this),
          DefaultClosedHeatResistance_ (x.DefaultClosedHeatResistance_, f, this),
          DefaultOpenHeatResistance_ (x.DefaultOpenHeatResistance_, f, this),
          MachineClosedResistance_ (x.MachineClosedResistance_, f, this),
          MachineOpenResistance_ (x.MachineOpenResistance_, f, this),
          RespiratoryClosedResistance_ (x.RespiratoryClosedResistance_, f, this),
          RespiratoryOpenResistance_ (x.RespiratoryOpenResistance_, f, this)
        {
        }

        CircuitConfigurationData::
        CircuitConfigurationData (const ::xercesc::DOMElement& e,
                                  ::xml_schema::flags f,
                                  ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ObjectData (e, f | ::xml_schema::flags::base, c),
          CardiovascularOpenResistance_ (this),
          DefaultClosedElectricResistance_ (this),
          DefaultOpenElectricResistance_ (this),
          DefaultClosedFlowResistance_ (this),
          DefaultOpenFlowResistance_ (this),
          DefaultClosedHeatResistance_ (this),
          DefaultOpenHeatResistance_ (this),
          MachineClosedResistance_ (this),
          MachineOpenResistance_ (this),
          RespiratoryClosedResistance_ (this),
          RespiratoryOpenResistance_ (this)
        {
          if ((f & ::xml_schema::flags::base) == 0)
          {
            ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
            this->parse (p, f);
          }
        }

        void CircuitConfigurationData::
        parse (::xsd::cxx::xml::dom::parser< char >& p,
               ::xml_schema::flags f)
        {
          this->::mil::tatrc::physiology::datamodel::ObjectData::parse (p, f);

          for (; p.more_content (); p.next_content (false))
          {
            const ::xercesc::DOMElement& i (p.cur_element ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            // CardiovascularOpenResistance
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "CardiovascularOpenResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< CardiovascularOpenResistance_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->CardiovascularOpenResistance_)
                {
                  ::std::unique_ptr< CardiovascularOpenResistance_type > r (
                    dynamic_cast< CardiovascularOpenResistance_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->CardiovascularOpenResistance_.set (::std::move (r));
                  continue;
                }
              }
            }

            // DefaultClosedElectricResistance
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "DefaultClosedElectricResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< DefaultClosedElectricResistance_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->DefaultClosedElectricResistance_)
                {
                  ::std::unique_ptr< DefaultClosedElectricResistance_type > r (
                    dynamic_cast< DefaultClosedElectricResistance_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->DefaultClosedElectricResistance_.set (::std::move (r));
                  continue;
                }
              }
            }

            // DefaultOpenElectricResistance
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "DefaultOpenElectricResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< DefaultOpenElectricResistance_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->DefaultOpenElectricResistance_)
                {
                  ::std::unique_ptr< DefaultOpenElectricResistance_type > r (
                    dynamic_cast< DefaultOpenElectricResistance_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->DefaultOpenElectricResistance_.set (::std::move (r));
                  continue;
                }
              }
            }

            // DefaultClosedFlowResistance
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "DefaultClosedFlowResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< DefaultClosedFlowResistance_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->DefaultClosedFlowResistance_)
                {
                  ::std::unique_ptr< DefaultClosedFlowResistance_type > r (
                    dynamic_cast< DefaultClosedFlowResistance_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->DefaultClosedFlowResistance_.set (::std::move (r));
                  continue;
                }
              }
            }

            // DefaultOpenFlowResistance
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "DefaultOpenFlowResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< DefaultOpenFlowResistance_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->DefaultOpenFlowResistance_)
                {
                  ::std::unique_ptr< DefaultOpenFlowResistance_type > r (
                    dynamic_cast< DefaultOpenFlowResistance_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->DefaultOpenFlowResistance_.set (::std::move (r));
                  continue;
                }
              }
            }

            // DefaultClosedHeatResistance
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "DefaultClosedHeatResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< DefaultClosedHeatResistance_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->DefaultClosedHeatResistance_)
                {
                  ::std::unique_ptr< DefaultClosedHeatResistance_type > r (
                    dynamic_cast< DefaultClosedHeatResistance_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->DefaultClosedHeatResistance_.set (::std::move (r));
                  continue;
                }
              }
            }

            // DefaultOpenHeatResistance
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "DefaultOpenHeatResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< DefaultOpenHeatResistance_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->DefaultOpenHeatResistance_)
                {
                  ::std::unique_ptr< DefaultOpenHeatResistance_type > r (
                    dynamic_cast< DefaultOpenHeatResistance_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->DefaultOpenHeatResistance_.set (::std::move (r));
                  continue;
                }
              }
            }

            // MachineClosedResistance
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "MachineClosedResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< MachineClosedResistance_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->MachineClosedResistance_)
                {
                  ::std::unique_ptr< MachineClosedResistance_type > r (
                    dynamic_cast< MachineClosedResistance_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->MachineClosedResistance_.set (::std::move (r));
                  continue;
                }
              }
            }

            // MachineOpenResistance
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "MachineOpenResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< MachineOpenResistance_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->MachineOpenResistance_)
                {
                  ::std::unique_ptr< MachineOpenResistance_type > r (
                    dynamic_cast< MachineOpenResistance_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->MachineOpenResistance_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RespiratoryClosedResistance
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RespiratoryClosedResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RespiratoryClosedResistance_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RespiratoryClosedResistance_)
                {
                  ::std::unique_ptr< RespiratoryClosedResistance_type > r (
                    dynamic_cast< RespiratoryClosedResistance_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RespiratoryClosedResistance_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RespiratoryOpenResistance
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RespiratoryOpenResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RespiratoryOpenResistance_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RespiratoryOpenResistance_)
                {
                  ::std::unique_ptr< RespiratoryOpenResistance_type > r (
                    dynamic_cast< RespiratoryOpenResistance_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RespiratoryOpenResistance_.set (::std::move (r));
                  continue;
                }
              }
            }

            break;
          }
        }

        CircuitConfigurationData* CircuitConfigurationData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class CircuitConfigurationData (*this, f, c);
        }

        CircuitConfigurationData& CircuitConfigurationData::
        operator= (const CircuitConfigurationData& x)
        {
          if (this != &x)
          {
            static_cast< ::mil::tatrc::physiology::datamodel::ObjectData& > (*this) = x;
            this->CardiovascularOpenResistance_ = x.CardiovascularOpenResistance_;
            this->DefaultClosedElectricResistance_ = x.DefaultClosedElectricResistance_;
            this->DefaultOpenElectricResistance_ = x.DefaultOpenElectricResistance_;
            this->DefaultClosedFlowResistance_ = x.DefaultClosedFlowResistance_;
            this->DefaultOpenFlowResistance_ = x.DefaultOpenFlowResistance_;
            this->DefaultClosedHeatResistance_ = x.DefaultClosedHeatResistance_;
            this->DefaultOpenHeatResistance_ = x.DefaultOpenHeatResistance_;
            this->MachineClosedResistance_ = x.MachineClosedResistance_;
            this->MachineOpenResistance_ = x.MachineOpenResistance_;
            this->RespiratoryClosedResistance_ = x.RespiratoryClosedResistance_;
            this->RespiratoryOpenResistance_ = x.RespiratoryOpenResistance_;
          }

          return *this;
        }

        CircuitConfigurationData::
        ~CircuitConfigurationData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, CircuitConfigurationData >
        _xsd_CircuitConfigurationData_type_factory_init (
          "CircuitConfigurationData",
          "uri:/mil/tatrc/physiology/datamodel");
      }
    }
  }
}

#include <ostream>

#include <xsd/cxx/tree/std-ostream-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::std_ostream_plate< 0, char >
  std_ostream_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        ::std::ostream&
        operator<< (::std::ostream& o, const CircuitConfigurationData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ObjectData& > (i);

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.CardiovascularOpenResistance ())
            {
              o << ::std::endl << "CardiovascularOpenResistance: ";
              om.insert (o, *i.CardiovascularOpenResistance ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.DefaultClosedElectricResistance ())
            {
              o << ::std::endl << "DefaultClosedElectricResistance: ";
              om.insert (o, *i.DefaultClosedElectricResistance ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.DefaultOpenElectricResistance ())
            {
              o << ::std::endl << "DefaultOpenElectricResistance: ";
              om.insert (o, *i.DefaultOpenElectricResistance ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.DefaultClosedFlowResistance ())
            {
              o << ::std::endl << "DefaultClosedFlowResistance: ";
              om.insert (o, *i.DefaultClosedFlowResistance ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.DefaultOpenFlowResistance ())
            {
              o << ::std::endl << "DefaultOpenFlowResistance: ";
              om.insert (o, *i.DefaultOpenFlowResistance ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.DefaultClosedHeatResistance ())
            {
              o << ::std::endl << "DefaultClosedHeatResistance: ";
              om.insert (o, *i.DefaultClosedHeatResistance ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.DefaultOpenHeatResistance ())
            {
              o << ::std::endl << "DefaultOpenHeatResistance: ";
              om.insert (o, *i.DefaultOpenHeatResistance ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.MachineClosedResistance ())
            {
              o << ::std::endl << "MachineClosedResistance: ";
              om.insert (o, *i.MachineClosedResistance ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.MachineOpenResistance ())
            {
              o << ::std::endl << "MachineOpenResistance: ";
              om.insert (o, *i.MachineOpenResistance ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RespiratoryClosedResistance ())
            {
              o << ::std::endl << "RespiratoryClosedResistance: ";
              om.insert (o, *i.RespiratoryClosedResistance ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RespiratoryOpenResistance ())
            {
              o << ::std::endl << "RespiratoryOpenResistance: ";
              om.insert (o, *i.RespiratoryOpenResistance ());
            }
          }

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, CircuitConfigurationData >
        _xsd_CircuitConfigurationData_std_ostream_init;
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
      }
    }
  }
}

#include <ostream>
#include <xsd/cxx/tree/error-handler.hxx>
#include <xsd/cxx/xml/dom/serialization-source.hxx>

#include <xsd/cxx/tree/type-serializer-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_serializer_plate< 0, char >
  type_serializer_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        void
        operator<< (::xercesc::DOMElement& e, const CircuitConfigurationData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ObjectData& > (i);

          // CardiovascularOpenResistance
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.CardiovascularOpenResistance ())
            {
              const CircuitConfigurationData::CardiovascularOpenResistance_type& x (*i.CardiovascularOpenResistance ());
              if (typeid (CircuitConfigurationData::CardiovascularOpenResistance_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "CardiovascularOpenResistance",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "CardiovascularOpenResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // DefaultClosedElectricResistance
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.DefaultClosedElectricResistance ())
            {
              const CircuitConfigurationData::DefaultClosedElectricResistance_type& x (*i.DefaultClosedElectricResistance ());
              if (typeid (CircuitConfigurationData::DefaultClosedElectricResistance_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "DefaultClosedElectricResistance",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "DefaultClosedElectricResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // DefaultOpenElectricResistance
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.DefaultOpenElectricResistance ())
            {
              const CircuitConfigurationData::DefaultOpenElectricResistance_type& x (*i.DefaultOpenElectricResistance ());
              if (typeid (CircuitConfigurationData::DefaultOpenElectricResistance_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "DefaultOpenElectricResistance",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "DefaultOpenElectricResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // DefaultClosedFlowResistance
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.DefaultClosedFlowResistance ())
            {
              const CircuitConfigurationData::DefaultClosedFlowResistance_type& x (*i.DefaultClosedFlowResistance ());
              if (typeid (CircuitConfigurationData::DefaultClosedFlowResistance_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "DefaultClosedFlowResistance",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "DefaultClosedFlowResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // DefaultOpenFlowResistance
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.DefaultOpenFlowResistance ())
            {
              const CircuitConfigurationData::DefaultOpenFlowResistance_type& x (*i.DefaultOpenFlowResistance ());
              if (typeid (CircuitConfigurationData::DefaultOpenFlowResistance_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "DefaultOpenFlowResistance",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "DefaultOpenFlowResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // DefaultClosedHeatResistance
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.DefaultClosedHeatResistance ())
            {
              const CircuitConfigurationData::DefaultClosedHeatResistance_type& x (*i.DefaultClosedHeatResistance ());
              if (typeid (CircuitConfigurationData::DefaultClosedHeatResistance_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "DefaultClosedHeatResistance",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "DefaultClosedHeatResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // DefaultOpenHeatResistance
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.DefaultOpenHeatResistance ())
            {
              const CircuitConfigurationData::DefaultOpenHeatResistance_type& x (*i.DefaultOpenHeatResistance ());
              if (typeid (CircuitConfigurationData::DefaultOpenHeatResistance_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "DefaultOpenHeatResistance",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "DefaultOpenHeatResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // MachineClosedResistance
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.MachineClosedResistance ())
            {
              const CircuitConfigurationData::MachineClosedResistance_type& x (*i.MachineClosedResistance ());
              if (typeid (CircuitConfigurationData::MachineClosedResistance_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "MachineClosedResistance",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "MachineClosedResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // MachineOpenResistance
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.MachineOpenResistance ())
            {
              const CircuitConfigurationData::MachineOpenResistance_type& x (*i.MachineOpenResistance ());
              if (typeid (CircuitConfigurationData::MachineOpenResistance_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "MachineOpenResistance",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "MachineOpenResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RespiratoryClosedResistance
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RespiratoryClosedResistance ())
            {
              const CircuitConfigurationData::RespiratoryClosedResistance_type& x (*i.RespiratoryClosedResistance ());
              if (typeid (CircuitConfigurationData::RespiratoryClosedResistance_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RespiratoryClosedResistance",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RespiratoryClosedResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RespiratoryOpenResistance
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RespiratoryOpenResistance ())
            {
              const CircuitConfigurationData::RespiratoryOpenResistance_type& x (*i.RespiratoryOpenResistance ());
              if (typeid (CircuitConfigurationData::RespiratoryOpenResistance_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RespiratoryOpenResistance",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RespiratoryOpenResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, CircuitConfigurationData >
        _xsd_CircuitConfigurationData_type_serializer_init (
          "CircuitConfigurationData",
          "uri:/mil/tatrc/physiology/datamodel");
      }
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

