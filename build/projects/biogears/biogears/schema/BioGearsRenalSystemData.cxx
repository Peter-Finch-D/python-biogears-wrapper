// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
#include "Properties.hxx"

//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "BioGearsRenalSystemData.hxx"

#include "RunningAverageData.hxx"

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        // BioGearsRenalSystemData
        // 

        const BioGearsRenalSystemData::Urinating_type& BioGearsRenalSystemData::
        Urinating () const
        {
          return this->Urinating_.get ();
        }

        BioGearsRenalSystemData::Urinating_type& BioGearsRenalSystemData::
        Urinating ()
        {
          return this->Urinating_.get ();
        }

        void BioGearsRenalSystemData::
        Urinating (const Urinating_type& x)
        {
          this->Urinating_.set (x);
        }

        const BioGearsRenalSystemData::LeftAfferentResistance_mmHg_s_Per_mL_type& BioGearsRenalSystemData::
        LeftAfferentResistance_mmHg_s_Per_mL () const
        {
          return this->LeftAfferentResistance_mmHg_s_Per_mL_.get ();
        }

        BioGearsRenalSystemData::LeftAfferentResistance_mmHg_s_Per_mL_type& BioGearsRenalSystemData::
        LeftAfferentResistance_mmHg_s_Per_mL ()
        {
          return this->LeftAfferentResistance_mmHg_s_Per_mL_.get ();
        }

        void BioGearsRenalSystemData::
        LeftAfferentResistance_mmHg_s_Per_mL (const LeftAfferentResistance_mmHg_s_Per_mL_type& x)
        {
          this->LeftAfferentResistance_mmHg_s_Per_mL_.set (x);
        }

        const BioGearsRenalSystemData::RightAfferentResistance_mmHg_s_Per_mL_type& BioGearsRenalSystemData::
        RightAfferentResistance_mmHg_s_Per_mL () const
        {
          return this->RightAfferentResistance_mmHg_s_Per_mL_.get ();
        }

        BioGearsRenalSystemData::RightAfferentResistance_mmHg_s_Per_mL_type& BioGearsRenalSystemData::
        RightAfferentResistance_mmHg_s_Per_mL ()
        {
          return this->RightAfferentResistance_mmHg_s_Per_mL_.get ();
        }

        void BioGearsRenalSystemData::
        RightAfferentResistance_mmHg_s_Per_mL (const RightAfferentResistance_mmHg_s_Per_mL_type& x)
        {
          this->RightAfferentResistance_mmHg_s_Per_mL_.set (x);
        }

        const BioGearsRenalSystemData::LeftSodiumFlowSetPoint_mg_Per_s_type& BioGearsRenalSystemData::
        LeftSodiumFlowSetPoint_mg_Per_s () const
        {
          return this->LeftSodiumFlowSetPoint_mg_Per_s_.get ();
        }

        BioGearsRenalSystemData::LeftSodiumFlowSetPoint_mg_Per_s_type& BioGearsRenalSystemData::
        LeftSodiumFlowSetPoint_mg_Per_s ()
        {
          return this->LeftSodiumFlowSetPoint_mg_Per_s_.get ();
        }

        void BioGearsRenalSystemData::
        LeftSodiumFlowSetPoint_mg_Per_s (const LeftSodiumFlowSetPoint_mg_Per_s_type& x)
        {
          this->LeftSodiumFlowSetPoint_mg_Per_s_.set (x);
        }

        const BioGearsRenalSystemData::RightSodiumFlowSetPoint_mg_Per_s_type& BioGearsRenalSystemData::
        RightSodiumFlowSetPoint_mg_Per_s () const
        {
          return this->RightSodiumFlowSetPoint_mg_Per_s_.get ();
        }

        BioGearsRenalSystemData::RightSodiumFlowSetPoint_mg_Per_s_type& BioGearsRenalSystemData::
        RightSodiumFlowSetPoint_mg_Per_s ()
        {
          return this->RightSodiumFlowSetPoint_mg_Per_s_.get ();
        }

        void BioGearsRenalSystemData::
        RightSodiumFlowSetPoint_mg_Per_s (const RightSodiumFlowSetPoint_mg_Per_s_type& x)
        {
          this->RightSodiumFlowSetPoint_mg_Per_s_.set (x);
        }

        const BioGearsRenalSystemData::UrineProductionRate_mL_Per_min_type& BioGearsRenalSystemData::
        UrineProductionRate_mL_Per_min () const
        {
          return this->UrineProductionRate_mL_Per_min_.get ();
        }

        BioGearsRenalSystemData::UrineProductionRate_mL_Per_min_type& BioGearsRenalSystemData::
        UrineProductionRate_mL_Per_min ()
        {
          return this->UrineProductionRate_mL_Per_min_.get ();
        }

        void BioGearsRenalSystemData::
        UrineProductionRate_mL_Per_min (const UrineProductionRate_mL_Per_min_type& x)
        {
          this->UrineProductionRate_mL_Per_min_.set (x);
        }

        void BioGearsRenalSystemData::
        UrineProductionRate_mL_Per_min (::std::unique_ptr< UrineProductionRate_mL_Per_min_type > x)
        {
          this->UrineProductionRate_mL_Per_min_.set (std::move (x));
        }

        const BioGearsRenalSystemData::UrineOsmolarity_mOsm_Per_L_type& BioGearsRenalSystemData::
        UrineOsmolarity_mOsm_Per_L () const
        {
          return this->UrineOsmolarity_mOsm_Per_L_.get ();
        }

        BioGearsRenalSystemData::UrineOsmolarity_mOsm_Per_L_type& BioGearsRenalSystemData::
        UrineOsmolarity_mOsm_Per_L ()
        {
          return this->UrineOsmolarity_mOsm_Per_L_.get ();
        }

        void BioGearsRenalSystemData::
        UrineOsmolarity_mOsm_Per_L (const UrineOsmolarity_mOsm_Per_L_type& x)
        {
          this->UrineOsmolarity_mOsm_Per_L_.set (x);
        }

        void BioGearsRenalSystemData::
        UrineOsmolarity_mOsm_Per_L (::std::unique_ptr< UrineOsmolarity_mOsm_Per_L_type > x)
        {
          this->UrineOsmolarity_mOsm_Per_L_.set (std::move (x));
        }

        const BioGearsRenalSystemData::SodiumConcentration_mg_Per_mL_type& BioGearsRenalSystemData::
        SodiumConcentration_mg_Per_mL () const
        {
          return this->SodiumConcentration_mg_Per_mL_.get ();
        }

        BioGearsRenalSystemData::SodiumConcentration_mg_Per_mL_type& BioGearsRenalSystemData::
        SodiumConcentration_mg_Per_mL ()
        {
          return this->SodiumConcentration_mg_Per_mL_.get ();
        }

        void BioGearsRenalSystemData::
        SodiumConcentration_mg_Per_mL (const SodiumConcentration_mg_Per_mL_type& x)
        {
          this->SodiumConcentration_mg_Per_mL_.set (x);
        }

        void BioGearsRenalSystemData::
        SodiumConcentration_mg_Per_mL (::std::unique_ptr< SodiumConcentration_mg_Per_mL_type > x)
        {
          this->SodiumConcentration_mg_Per_mL_.set (std::move (x));
        }

        const BioGearsRenalSystemData::SodiumExcretionRate_mg_Per_min_type& BioGearsRenalSystemData::
        SodiumExcretionRate_mg_Per_min () const
        {
          return this->SodiumExcretionRate_mg_Per_min_.get ();
        }

        BioGearsRenalSystemData::SodiumExcretionRate_mg_Per_min_type& BioGearsRenalSystemData::
        SodiumExcretionRate_mg_Per_min ()
        {
          return this->SodiumExcretionRate_mg_Per_min_.get ();
        }

        void BioGearsRenalSystemData::
        SodiumExcretionRate_mg_Per_min (const SodiumExcretionRate_mg_Per_min_type& x)
        {
          this->SodiumExcretionRate_mg_Per_min_.set (x);
        }

        void BioGearsRenalSystemData::
        SodiumExcretionRate_mg_Per_min (::std::unique_ptr< SodiumExcretionRate_mg_Per_min_type > x)
        {
          this->SodiumExcretionRate_mg_Per_min_.set (std::move (x));
        }

        const BioGearsRenalSystemData::LeftSodiumFlow_mg_Per_s_type& BioGearsRenalSystemData::
        LeftSodiumFlow_mg_Per_s () const
        {
          return this->LeftSodiumFlow_mg_Per_s_.get ();
        }

        BioGearsRenalSystemData::LeftSodiumFlow_mg_Per_s_type& BioGearsRenalSystemData::
        LeftSodiumFlow_mg_Per_s ()
        {
          return this->LeftSodiumFlow_mg_Per_s_.get ();
        }

        void BioGearsRenalSystemData::
        LeftSodiumFlow_mg_Per_s (const LeftSodiumFlow_mg_Per_s_type& x)
        {
          this->LeftSodiumFlow_mg_Per_s_.set (x);
        }

        void BioGearsRenalSystemData::
        LeftSodiumFlow_mg_Per_s (::std::unique_ptr< LeftSodiumFlow_mg_Per_s_type > x)
        {
          this->LeftSodiumFlow_mg_Per_s_.set (std::move (x));
        }

        const BioGearsRenalSystemData::RightSodiumFlow_mg_Per_s_type& BioGearsRenalSystemData::
        RightSodiumFlow_mg_Per_s () const
        {
          return this->RightSodiumFlow_mg_Per_s_.get ();
        }

        BioGearsRenalSystemData::RightSodiumFlow_mg_Per_s_type& BioGearsRenalSystemData::
        RightSodiumFlow_mg_Per_s ()
        {
          return this->RightSodiumFlow_mg_Per_s_.get ();
        }

        void BioGearsRenalSystemData::
        RightSodiumFlow_mg_Per_s (const RightSodiumFlow_mg_Per_s_type& x)
        {
          this->RightSodiumFlow_mg_Per_s_.set (x);
        }

        void BioGearsRenalSystemData::
        RightSodiumFlow_mg_Per_s (::std::unique_ptr< RightSodiumFlow_mg_Per_s_type > x)
        {
          this->RightSodiumFlow_mg_Per_s_.set (std::move (x));
        }

        const BioGearsRenalSystemData::LeftRenalArterialPressure_mmHg_type& BioGearsRenalSystemData::
        LeftRenalArterialPressure_mmHg () const
        {
          return this->LeftRenalArterialPressure_mmHg_.get ();
        }

        BioGearsRenalSystemData::LeftRenalArterialPressure_mmHg_type& BioGearsRenalSystemData::
        LeftRenalArterialPressure_mmHg ()
        {
          return this->LeftRenalArterialPressure_mmHg_.get ();
        }

        void BioGearsRenalSystemData::
        LeftRenalArterialPressure_mmHg (const LeftRenalArterialPressure_mmHg_type& x)
        {
          this->LeftRenalArterialPressure_mmHg_.set (x);
        }

        void BioGearsRenalSystemData::
        LeftRenalArterialPressure_mmHg (::std::unique_ptr< LeftRenalArterialPressure_mmHg_type > x)
        {
          this->LeftRenalArterialPressure_mmHg_.set (std::move (x));
        }

        const BioGearsRenalSystemData::RightRenalArterialPressure_mmHg_type& BioGearsRenalSystemData::
        RightRenalArterialPressure_mmHg () const
        {
          return this->RightRenalArterialPressure_mmHg_.get ();
        }

        BioGearsRenalSystemData::RightRenalArterialPressure_mmHg_type& BioGearsRenalSystemData::
        RightRenalArterialPressure_mmHg ()
        {
          return this->RightRenalArterialPressure_mmHg_.get ();
        }

        void BioGearsRenalSystemData::
        RightRenalArterialPressure_mmHg (const RightRenalArterialPressure_mmHg_type& x)
        {
          this->RightRenalArterialPressure_mmHg_.set (x);
        }

        void BioGearsRenalSystemData::
        RightRenalArterialPressure_mmHg (::std::unique_ptr< RightRenalArterialPressure_mmHg_type > x)
        {
          this->RightRenalArterialPressure_mmHg_.set (std::move (x));
        }
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        // BioGearsRenalSystemData
        //

        BioGearsRenalSystemData::
        BioGearsRenalSystemData ()
        : ::mil::tatrc::physiology::datamodel::RenalSystemData (),
          Urinating_ (this),
          LeftAfferentResistance_mmHg_s_Per_mL_ (this),
          RightAfferentResistance_mmHg_s_Per_mL_ (this),
          LeftSodiumFlowSetPoint_mg_Per_s_ (this),
          RightSodiumFlowSetPoint_mg_Per_s_ (this),
          UrineProductionRate_mL_Per_min_ (this),
          UrineOsmolarity_mOsm_Per_L_ (this),
          SodiumConcentration_mg_Per_mL_ (this),
          SodiumExcretionRate_mg_Per_min_ (this),
          LeftSodiumFlow_mg_Per_s_ (this),
          RightSodiumFlow_mg_Per_s_ (this),
          LeftRenalArterialPressure_mmHg_ (this),
          RightRenalArterialPressure_mmHg_ (this)
        {
        }

        BioGearsRenalSystemData::
        BioGearsRenalSystemData (const Urinating_type& Urinating,
                                 const LeftAfferentResistance_mmHg_s_Per_mL_type& LeftAfferentResistance_mmHg_s_Per_mL,
                                 const RightAfferentResistance_mmHg_s_Per_mL_type& RightAfferentResistance_mmHg_s_Per_mL,
                                 const LeftSodiumFlowSetPoint_mg_Per_s_type& LeftSodiumFlowSetPoint_mg_Per_s,
                                 const RightSodiumFlowSetPoint_mg_Per_s_type& RightSodiumFlowSetPoint_mg_Per_s,
                                 const UrineProductionRate_mL_Per_min_type& UrineProductionRate_mL_Per_min,
                                 const UrineOsmolarity_mOsm_Per_L_type& UrineOsmolarity_mOsm_Per_L,
                                 const SodiumConcentration_mg_Per_mL_type& SodiumConcentration_mg_Per_mL,
                                 const SodiumExcretionRate_mg_Per_min_type& SodiumExcretionRate_mg_Per_min,
                                 const LeftSodiumFlow_mg_Per_s_type& LeftSodiumFlow_mg_Per_s,
                                 const RightSodiumFlow_mg_Per_s_type& RightSodiumFlow_mg_Per_s,
                                 const LeftRenalArterialPressure_mmHg_type& LeftRenalArterialPressure_mmHg,
                                 const RightRenalArterialPressure_mmHg_type& RightRenalArterialPressure_mmHg)
        : ::mil::tatrc::physiology::datamodel::RenalSystemData (),
          Urinating_ (Urinating, this),
          LeftAfferentResistance_mmHg_s_Per_mL_ (LeftAfferentResistance_mmHg_s_Per_mL, this),
          RightAfferentResistance_mmHg_s_Per_mL_ (RightAfferentResistance_mmHg_s_Per_mL, this),
          LeftSodiumFlowSetPoint_mg_Per_s_ (LeftSodiumFlowSetPoint_mg_Per_s, this),
          RightSodiumFlowSetPoint_mg_Per_s_ (RightSodiumFlowSetPoint_mg_Per_s, this),
          UrineProductionRate_mL_Per_min_ (UrineProductionRate_mL_Per_min, this),
          UrineOsmolarity_mOsm_Per_L_ (UrineOsmolarity_mOsm_Per_L, this),
          SodiumConcentration_mg_Per_mL_ (SodiumConcentration_mg_Per_mL, this),
          SodiumExcretionRate_mg_Per_min_ (SodiumExcretionRate_mg_Per_min, this),
          LeftSodiumFlow_mg_Per_s_ (LeftSodiumFlow_mg_Per_s, this),
          RightSodiumFlow_mg_Per_s_ (RightSodiumFlow_mg_Per_s, this),
          LeftRenalArterialPressure_mmHg_ (LeftRenalArterialPressure_mmHg, this),
          RightRenalArterialPressure_mmHg_ (RightRenalArterialPressure_mmHg, this)
        {
        }

        BioGearsRenalSystemData::
        BioGearsRenalSystemData (const Urinating_type& Urinating,
                                 const LeftAfferentResistance_mmHg_s_Per_mL_type& LeftAfferentResistance_mmHg_s_Per_mL,
                                 const RightAfferentResistance_mmHg_s_Per_mL_type& RightAfferentResistance_mmHg_s_Per_mL,
                                 const LeftSodiumFlowSetPoint_mg_Per_s_type& LeftSodiumFlowSetPoint_mg_Per_s,
                                 const RightSodiumFlowSetPoint_mg_Per_s_type& RightSodiumFlowSetPoint_mg_Per_s,
                                 ::std::unique_ptr< UrineProductionRate_mL_Per_min_type > UrineProductionRate_mL_Per_min,
                                 ::std::unique_ptr< UrineOsmolarity_mOsm_Per_L_type > UrineOsmolarity_mOsm_Per_L,
                                 ::std::unique_ptr< SodiumConcentration_mg_Per_mL_type > SodiumConcentration_mg_Per_mL,
                                 ::std::unique_ptr< SodiumExcretionRate_mg_Per_min_type > SodiumExcretionRate_mg_Per_min,
                                 ::std::unique_ptr< LeftSodiumFlow_mg_Per_s_type > LeftSodiumFlow_mg_Per_s,
                                 ::std::unique_ptr< RightSodiumFlow_mg_Per_s_type > RightSodiumFlow_mg_Per_s,
                                 ::std::unique_ptr< LeftRenalArterialPressure_mmHg_type > LeftRenalArterialPressure_mmHg,
                                 ::std::unique_ptr< RightRenalArterialPressure_mmHg_type > RightRenalArterialPressure_mmHg)
        : ::mil::tatrc::physiology::datamodel::RenalSystemData (),
          Urinating_ (Urinating, this),
          LeftAfferentResistance_mmHg_s_Per_mL_ (LeftAfferentResistance_mmHg_s_Per_mL, this),
          RightAfferentResistance_mmHg_s_Per_mL_ (RightAfferentResistance_mmHg_s_Per_mL, this),
          LeftSodiumFlowSetPoint_mg_Per_s_ (LeftSodiumFlowSetPoint_mg_Per_s, this),
          RightSodiumFlowSetPoint_mg_Per_s_ (RightSodiumFlowSetPoint_mg_Per_s, this),
          UrineProductionRate_mL_Per_min_ (std::move (UrineProductionRate_mL_Per_min), this),
          UrineOsmolarity_mOsm_Per_L_ (std::move (UrineOsmolarity_mOsm_Per_L), this),
          SodiumConcentration_mg_Per_mL_ (std::move (SodiumConcentration_mg_Per_mL), this),
          SodiumExcretionRate_mg_Per_min_ (std::move (SodiumExcretionRate_mg_Per_min), this),
          LeftSodiumFlow_mg_Per_s_ (std::move (LeftSodiumFlow_mg_Per_s), this),
          RightSodiumFlow_mg_Per_s_ (std::move (RightSodiumFlow_mg_Per_s), this),
          LeftRenalArterialPressure_mmHg_ (std::move (LeftRenalArterialPressure_mmHg), this),
          RightRenalArterialPressure_mmHg_ (std::move (RightRenalArterialPressure_mmHg), this)
        {
        }

        BioGearsRenalSystemData::
        BioGearsRenalSystemData (const BioGearsRenalSystemData& x,
                                 ::xml_schema::flags f,
                                 ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::RenalSystemData (x, f, c),
          Urinating_ (x.Urinating_, f, this),
          LeftAfferentResistance_mmHg_s_Per_mL_ (x.LeftAfferentResistance_mmHg_s_Per_mL_, f, this),
          RightAfferentResistance_mmHg_s_Per_mL_ (x.RightAfferentResistance_mmHg_s_Per_mL_, f, this),
          LeftSodiumFlowSetPoint_mg_Per_s_ (x.LeftSodiumFlowSetPoint_mg_Per_s_, f, this),
          RightSodiumFlowSetPoint_mg_Per_s_ (x.RightSodiumFlowSetPoint_mg_Per_s_, f, this),
          UrineProductionRate_mL_Per_min_ (x.UrineProductionRate_mL_Per_min_, f, this),
          UrineOsmolarity_mOsm_Per_L_ (x.UrineOsmolarity_mOsm_Per_L_, f, this),
          SodiumConcentration_mg_Per_mL_ (x.SodiumConcentration_mg_Per_mL_, f, this),
          SodiumExcretionRate_mg_Per_min_ (x.SodiumExcretionRate_mg_Per_min_, f, this),
          LeftSodiumFlow_mg_Per_s_ (x.LeftSodiumFlow_mg_Per_s_, f, this),
          RightSodiumFlow_mg_Per_s_ (x.RightSodiumFlow_mg_Per_s_, f, this),
          LeftRenalArterialPressure_mmHg_ (x.LeftRenalArterialPressure_mmHg_, f, this),
          RightRenalArterialPressure_mmHg_ (x.RightRenalArterialPressure_mmHg_, f, this)
        {
        }

        BioGearsRenalSystemData::
        BioGearsRenalSystemData (const ::xercesc::DOMElement& e,
                                 ::xml_schema::flags f,
                                 ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::RenalSystemData (e, f | ::xml_schema::flags::base, c),
          Urinating_ (this),
          LeftAfferentResistance_mmHg_s_Per_mL_ (this),
          RightAfferentResistance_mmHg_s_Per_mL_ (this),
          LeftSodiumFlowSetPoint_mg_Per_s_ (this),
          RightSodiumFlowSetPoint_mg_Per_s_ (this),
          UrineProductionRate_mL_Per_min_ (this),
          UrineOsmolarity_mOsm_Per_L_ (this),
          SodiumConcentration_mg_Per_mL_ (this),
          SodiumExcretionRate_mg_Per_min_ (this),
          LeftSodiumFlow_mg_Per_s_ (this),
          RightSodiumFlow_mg_Per_s_ (this),
          LeftRenalArterialPressure_mmHg_ (this),
          RightRenalArterialPressure_mmHg_ (this)
        {
          if ((f & ::xml_schema::flags::base) == 0)
          {
            ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
            this->parse (p, f);
          }
        }

        void BioGearsRenalSystemData::
        parse (::xsd::cxx::xml::dom::parser< char >& p,
               ::xml_schema::flags f)
        {
          this->::mil::tatrc::physiology::datamodel::RenalSystemData::parse (p, f);

          for (; p.more_content (); p.next_content (false))
          {
            const ::xercesc::DOMElement& i (p.cur_element ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            // Urinating
            //
            if (n.name () == "Urinating" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              if (!Urinating_.present ())
              {
                this->Urinating_.set (Urinating_traits::create (i, f, this));
                continue;
              }
            }

            // LeftAfferentResistance_mmHg_s_Per_mL
            //
            if (n.name () == "LeftAfferentResistance_mmHg_s_Per_mL" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              if (!LeftAfferentResistance_mmHg_s_Per_mL_.present ())
              {
                this->LeftAfferentResistance_mmHg_s_Per_mL_.set (LeftAfferentResistance_mmHg_s_Per_mL_traits::create (i, f, this));
                continue;
              }
            }

            // RightAfferentResistance_mmHg_s_Per_mL
            //
            if (n.name () == "RightAfferentResistance_mmHg_s_Per_mL" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              if (!RightAfferentResistance_mmHg_s_Per_mL_.present ())
              {
                this->RightAfferentResistance_mmHg_s_Per_mL_.set (RightAfferentResistance_mmHg_s_Per_mL_traits::create (i, f, this));
                continue;
              }
            }

            // LeftSodiumFlowSetPoint_mg_Per_s
            //
            if (n.name () == "LeftSodiumFlowSetPoint_mg_Per_s" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              if (!LeftSodiumFlowSetPoint_mg_Per_s_.present ())
              {
                this->LeftSodiumFlowSetPoint_mg_Per_s_.set (LeftSodiumFlowSetPoint_mg_Per_s_traits::create (i, f, this));
                continue;
              }
            }

            // RightSodiumFlowSetPoint_mg_Per_s
            //
            if (n.name () == "RightSodiumFlowSetPoint_mg_Per_s" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              if (!RightSodiumFlowSetPoint_mg_Per_s_.present ())
              {
                this->RightSodiumFlowSetPoint_mg_Per_s_.set (RightSodiumFlowSetPoint_mg_Per_s_traits::create (i, f, this));
                continue;
              }
            }

            // UrineProductionRate_mL_Per_min
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "UrineProductionRate_mL_Per_min",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< UrineProductionRate_mL_Per_min_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!UrineProductionRate_mL_Per_min_.present ())
                {
                  ::std::unique_ptr< UrineProductionRate_mL_Per_min_type > r (
                    dynamic_cast< UrineProductionRate_mL_Per_min_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->UrineProductionRate_mL_Per_min_.set (::std::move (r));
                  continue;
                }
              }
            }

            // UrineOsmolarity_mOsm_Per_L
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "UrineOsmolarity_mOsm_Per_L",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< UrineOsmolarity_mOsm_Per_L_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!UrineOsmolarity_mOsm_Per_L_.present ())
                {
                  ::std::unique_ptr< UrineOsmolarity_mOsm_Per_L_type > r (
                    dynamic_cast< UrineOsmolarity_mOsm_Per_L_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->UrineOsmolarity_mOsm_Per_L_.set (::std::move (r));
                  continue;
                }
              }
            }

            // SodiumConcentration_mg_Per_mL
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "SodiumConcentration_mg_Per_mL",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< SodiumConcentration_mg_Per_mL_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!SodiumConcentration_mg_Per_mL_.present ())
                {
                  ::std::unique_ptr< SodiumConcentration_mg_Per_mL_type > r (
                    dynamic_cast< SodiumConcentration_mg_Per_mL_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->SodiumConcentration_mg_Per_mL_.set (::std::move (r));
                  continue;
                }
              }
            }

            // SodiumExcretionRate_mg_Per_min
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "SodiumExcretionRate_mg_Per_min",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< SodiumExcretionRate_mg_Per_min_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!SodiumExcretionRate_mg_Per_min_.present ())
                {
                  ::std::unique_ptr< SodiumExcretionRate_mg_Per_min_type > r (
                    dynamic_cast< SodiumExcretionRate_mg_Per_min_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->SodiumExcretionRate_mg_Per_min_.set (::std::move (r));
                  continue;
                }
              }
            }

            // LeftSodiumFlow_mg_Per_s
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "LeftSodiumFlow_mg_Per_s",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< LeftSodiumFlow_mg_Per_s_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!LeftSodiumFlow_mg_Per_s_.present ())
                {
                  ::std::unique_ptr< LeftSodiumFlow_mg_Per_s_type > r (
                    dynamic_cast< LeftSodiumFlow_mg_Per_s_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->LeftSodiumFlow_mg_Per_s_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RightSodiumFlow_mg_Per_s
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RightSodiumFlow_mg_Per_s",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RightSodiumFlow_mg_Per_s_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!RightSodiumFlow_mg_Per_s_.present ())
                {
                  ::std::unique_ptr< RightSodiumFlow_mg_Per_s_type > r (
                    dynamic_cast< RightSodiumFlow_mg_Per_s_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RightSodiumFlow_mg_Per_s_.set (::std::move (r));
                  continue;
                }
              }
            }

            // LeftRenalArterialPressure_mmHg
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "LeftRenalArterialPressure_mmHg",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< LeftRenalArterialPressure_mmHg_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!LeftRenalArterialPressure_mmHg_.present ())
                {
                  ::std::unique_ptr< LeftRenalArterialPressure_mmHg_type > r (
                    dynamic_cast< LeftRenalArterialPressure_mmHg_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->LeftRenalArterialPressure_mmHg_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RightRenalArterialPressure_mmHg
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RightRenalArterialPressure_mmHg",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RightRenalArterialPressure_mmHg_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!RightRenalArterialPressure_mmHg_.present ())
                {
                  ::std::unique_ptr< RightRenalArterialPressure_mmHg_type > r (
                    dynamic_cast< RightRenalArterialPressure_mmHg_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RightRenalArterialPressure_mmHg_.set (::std::move (r));
                  continue;
                }
              }
            }

            break;
          }

          if (!Urinating_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "Urinating",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!LeftAfferentResistance_mmHg_s_Per_mL_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "LeftAfferentResistance_mmHg_s_Per_mL",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!RightAfferentResistance_mmHg_s_Per_mL_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "RightAfferentResistance_mmHg_s_Per_mL",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!LeftSodiumFlowSetPoint_mg_Per_s_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "LeftSodiumFlowSetPoint_mg_Per_s",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!RightSodiumFlowSetPoint_mg_Per_s_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "RightSodiumFlowSetPoint_mg_Per_s",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!UrineProductionRate_mL_Per_min_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "UrineProductionRate_mL_Per_min",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!UrineOsmolarity_mOsm_Per_L_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "UrineOsmolarity_mOsm_Per_L",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!SodiumConcentration_mg_Per_mL_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "SodiumConcentration_mg_Per_mL",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!SodiumExcretionRate_mg_Per_min_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "SodiumExcretionRate_mg_Per_min",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!LeftSodiumFlow_mg_Per_s_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "LeftSodiumFlow_mg_Per_s",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!RightSodiumFlow_mg_Per_s_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "RightSodiumFlow_mg_Per_s",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!LeftRenalArterialPressure_mmHg_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "LeftRenalArterialPressure_mmHg",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!RightRenalArterialPressure_mmHg_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "RightRenalArterialPressure_mmHg",
              "uri:/mil/tatrc/physiology/datamodel");
          }
        }

        BioGearsRenalSystemData* BioGearsRenalSystemData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class BioGearsRenalSystemData (*this, f, c);
        }

        BioGearsRenalSystemData& BioGearsRenalSystemData::
        operator= (const BioGearsRenalSystemData& x)
        {
          if (this != &x)
          {
            static_cast< ::mil::tatrc::physiology::datamodel::RenalSystemData& > (*this) = x;
            this->Urinating_ = x.Urinating_;
            this->LeftAfferentResistance_mmHg_s_Per_mL_ = x.LeftAfferentResistance_mmHg_s_Per_mL_;
            this->RightAfferentResistance_mmHg_s_Per_mL_ = x.RightAfferentResistance_mmHg_s_Per_mL_;
            this->LeftSodiumFlowSetPoint_mg_Per_s_ = x.LeftSodiumFlowSetPoint_mg_Per_s_;
            this->RightSodiumFlowSetPoint_mg_Per_s_ = x.RightSodiumFlowSetPoint_mg_Per_s_;
            this->UrineProductionRate_mL_Per_min_ = x.UrineProductionRate_mL_Per_min_;
            this->UrineOsmolarity_mOsm_Per_L_ = x.UrineOsmolarity_mOsm_Per_L_;
            this->SodiumConcentration_mg_Per_mL_ = x.SodiumConcentration_mg_Per_mL_;
            this->SodiumExcretionRate_mg_Per_min_ = x.SodiumExcretionRate_mg_Per_min_;
            this->LeftSodiumFlow_mg_Per_s_ = x.LeftSodiumFlow_mg_Per_s_;
            this->RightSodiumFlow_mg_Per_s_ = x.RightSodiumFlow_mg_Per_s_;
            this->LeftRenalArterialPressure_mmHg_ = x.LeftRenalArterialPressure_mmHg_;
            this->RightRenalArterialPressure_mmHg_ = x.RightRenalArterialPressure_mmHg_;
          }

          return *this;
        }

        BioGearsRenalSystemData::
        ~BioGearsRenalSystemData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, BioGearsRenalSystemData >
        _xsd_BioGearsRenalSystemData_type_factory_init (
          "BioGearsRenalSystemData",
          "uri:/mil/tatrc/physiology/datamodel");
      }
    }
  }
}

#include <ostream>

#include <xsd/cxx/tree/std-ostream-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::std_ostream_plate< 0, char >
  std_ostream_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        ::std::ostream&
        operator<< (::std::ostream& o, const BioGearsRenalSystemData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::RenalSystemData& > (i);

          o << ::std::endl << "Urinating: " << i.Urinating ();
          o << ::std::endl << "LeftAfferentResistance_mmHg_s_Per_mL: " << i.LeftAfferentResistance_mmHg_s_Per_mL ();
          o << ::std::endl << "RightAfferentResistance_mmHg_s_Per_mL: " << i.RightAfferentResistance_mmHg_s_Per_mL ();
          o << ::std::endl << "LeftSodiumFlowSetPoint_mg_Per_s: " << i.LeftSodiumFlowSetPoint_mg_Per_s ();
          o << ::std::endl << "RightSodiumFlowSetPoint_mg_Per_s: " << i.RightSodiumFlowSetPoint_mg_Per_s ();
          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "UrineProductionRate_mL_Per_min: ";
            om.insert (o, i.UrineProductionRate_mL_Per_min ());
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "UrineOsmolarity_mOsm_Per_L: ";
            om.insert (o, i.UrineOsmolarity_mOsm_Per_L ());
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "SodiumConcentration_mg_Per_mL: ";
            om.insert (o, i.SodiumConcentration_mg_Per_mL ());
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "SodiumExcretionRate_mg_Per_min: ";
            om.insert (o, i.SodiumExcretionRate_mg_Per_min ());
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "LeftSodiumFlow_mg_Per_s: ";
            om.insert (o, i.LeftSodiumFlow_mg_Per_s ());
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "RightSodiumFlow_mg_Per_s: ";
            om.insert (o, i.RightSodiumFlow_mg_Per_s ());
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "LeftRenalArterialPressure_mmHg: ";
            om.insert (o, i.LeftRenalArterialPressure_mmHg ());
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "RightRenalArterialPressure_mmHg: ";
            om.insert (o, i.RightRenalArterialPressure_mmHg ());
          }

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, BioGearsRenalSystemData >
        _xsd_BioGearsRenalSystemData_std_ostream_init;
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
      }
    }
  }
}

#include <ostream>
#include <xsd/cxx/tree/error-handler.hxx>
#include <xsd/cxx/xml/dom/serialization-source.hxx>

#include <xsd/cxx/tree/type-serializer-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_serializer_plate< 0, char >
  type_serializer_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        void
        operator<< (::xercesc::DOMElement& e, const BioGearsRenalSystemData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::RenalSystemData& > (i);

          // Urinating
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "Urinating",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << i.Urinating ();
          }

          // LeftAfferentResistance_mmHg_s_Per_mL
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "LeftAfferentResistance_mmHg_s_Per_mL",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << ::xml_schema::as_double(i.LeftAfferentResistance_mmHg_s_Per_mL ());
          }

          // RightAfferentResistance_mmHg_s_Per_mL
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "RightAfferentResistance_mmHg_s_Per_mL",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << ::xml_schema::as_double(i.RightAfferentResistance_mmHg_s_Per_mL ());
          }

          // LeftSodiumFlowSetPoint_mg_Per_s
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "LeftSodiumFlowSetPoint_mg_Per_s",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << ::xml_schema::as_double(i.LeftSodiumFlowSetPoint_mg_Per_s ());
          }

          // RightSodiumFlowSetPoint_mg_Per_s
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "RightSodiumFlowSetPoint_mg_Per_s",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << ::xml_schema::as_double(i.RightSodiumFlowSetPoint_mg_Per_s ());
          }

          // UrineProductionRate_mL_Per_min
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const BioGearsRenalSystemData::UrineProductionRate_mL_Per_min_type& x (i.UrineProductionRate_mL_Per_min ());
            if (typeid (BioGearsRenalSystemData::UrineProductionRate_mL_Per_min_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "UrineProductionRate_mL_Per_min",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "UrineProductionRate_mL_Per_min",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }

          // UrineOsmolarity_mOsm_Per_L
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const BioGearsRenalSystemData::UrineOsmolarity_mOsm_Per_L_type& x (i.UrineOsmolarity_mOsm_Per_L ());
            if (typeid (BioGearsRenalSystemData::UrineOsmolarity_mOsm_Per_L_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "UrineOsmolarity_mOsm_Per_L",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "UrineOsmolarity_mOsm_Per_L",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }

          // SodiumConcentration_mg_Per_mL
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const BioGearsRenalSystemData::SodiumConcentration_mg_Per_mL_type& x (i.SodiumConcentration_mg_Per_mL ());
            if (typeid (BioGearsRenalSystemData::SodiumConcentration_mg_Per_mL_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "SodiumConcentration_mg_Per_mL",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "SodiumConcentration_mg_Per_mL",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }

          // SodiumExcretionRate_mg_Per_min
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const BioGearsRenalSystemData::SodiumExcretionRate_mg_Per_min_type& x (i.SodiumExcretionRate_mg_Per_min ());
            if (typeid (BioGearsRenalSystemData::SodiumExcretionRate_mg_Per_min_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "SodiumExcretionRate_mg_Per_min",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "SodiumExcretionRate_mg_Per_min",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }

          // LeftSodiumFlow_mg_Per_s
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const BioGearsRenalSystemData::LeftSodiumFlow_mg_Per_s_type& x (i.LeftSodiumFlow_mg_Per_s ());
            if (typeid (BioGearsRenalSystemData::LeftSodiumFlow_mg_Per_s_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "LeftSodiumFlow_mg_Per_s",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "LeftSodiumFlow_mg_Per_s",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }

          // RightSodiumFlow_mg_Per_s
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const BioGearsRenalSystemData::RightSodiumFlow_mg_Per_s_type& x (i.RightSodiumFlow_mg_Per_s ());
            if (typeid (BioGearsRenalSystemData::RightSodiumFlow_mg_Per_s_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "RightSodiumFlow_mg_Per_s",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "RightSodiumFlow_mg_Per_s",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }

          // LeftRenalArterialPressure_mmHg
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const BioGearsRenalSystemData::LeftRenalArterialPressure_mmHg_type& x (i.LeftRenalArterialPressure_mmHg ());
            if (typeid (BioGearsRenalSystemData::LeftRenalArterialPressure_mmHg_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "LeftRenalArterialPressure_mmHg",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "LeftRenalArterialPressure_mmHg",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }

          // RightRenalArterialPressure_mmHg
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const BioGearsRenalSystemData::RightRenalArterialPressure_mmHg_type& x (i.RightRenalArterialPressure_mmHg ());
            if (typeid (BioGearsRenalSystemData::RightRenalArterialPressure_mmHg_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "RightRenalArterialPressure_mmHg",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "RightRenalArterialPressure_mmHg",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, BioGearsRenalSystemData >
        _xsd_BioGearsRenalSystemData_type_serializer_init (
          "BioGearsRenalSystemData",
          "uri:/mil/tatrc/physiology/datamodel");
      }
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

