// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
#include "Properties.hxx"

//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SubstanceAerosolizationData.hxx"

#include "ScalarNeg1To1Data.hxx"

#include "Scalar0To1Data.hxx"

#include "HistogramFractionVsLengthData.hxx"

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        // SubstanceAerosolizationData
        // 

        const SubstanceAerosolizationData::BronchioleModifier_type& SubstanceAerosolizationData::
        BronchioleModifier () const
        {
          return this->BronchioleModifier_.get ();
        }

        SubstanceAerosolizationData::BronchioleModifier_type& SubstanceAerosolizationData::
        BronchioleModifier ()
        {
          return this->BronchioleModifier_.get ();
        }

        void SubstanceAerosolizationData::
        BronchioleModifier (const BronchioleModifier_type& x)
        {
          this->BronchioleModifier_.set (x);
        }

        void SubstanceAerosolizationData::
        BronchioleModifier (::std::unique_ptr< BronchioleModifier_type > x)
        {
          this->BronchioleModifier_.set (std::move (x));
        }

        const SubstanceAerosolizationData::InflammationCoefficient_type& SubstanceAerosolizationData::
        InflammationCoefficient () const
        {
          return this->InflammationCoefficient_.get ();
        }

        SubstanceAerosolizationData::InflammationCoefficient_type& SubstanceAerosolizationData::
        InflammationCoefficient ()
        {
          return this->InflammationCoefficient_.get ();
        }

        void SubstanceAerosolizationData::
        InflammationCoefficient (const InflammationCoefficient_type& x)
        {
          this->InflammationCoefficient_.set (x);
        }

        void SubstanceAerosolizationData::
        InflammationCoefficient (::std::unique_ptr< InflammationCoefficient_type > x)
        {
          this->InflammationCoefficient_.set (std::move (x));
        }

        const SubstanceAerosolizationData::ParticulateSizeDistribution_type& SubstanceAerosolizationData::
        ParticulateSizeDistribution () const
        {
          return this->ParticulateSizeDistribution_.get ();
        }

        SubstanceAerosolizationData::ParticulateSizeDistribution_type& SubstanceAerosolizationData::
        ParticulateSizeDistribution ()
        {
          return this->ParticulateSizeDistribution_.get ();
        }

        void SubstanceAerosolizationData::
        ParticulateSizeDistribution (const ParticulateSizeDistribution_type& x)
        {
          this->ParticulateSizeDistribution_.set (x);
        }

        void SubstanceAerosolizationData::
        ParticulateSizeDistribution (::std::unique_ptr< ParticulateSizeDistribution_type > x)
        {
          this->ParticulateSizeDistribution_.set (std::move (x));
        }
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        // SubstanceAerosolizationData
        //

        SubstanceAerosolizationData::
        SubstanceAerosolizationData ()
        : ::mil::tatrc::physiology::datamodel::ObjectData (),
          BronchioleModifier_ (this),
          InflammationCoefficient_ (this),
          ParticulateSizeDistribution_ (this)
        {
        }

        SubstanceAerosolizationData::
        SubstanceAerosolizationData (const BronchioleModifier_type& BronchioleModifier,
                                     const InflammationCoefficient_type& InflammationCoefficient,
                                     const ParticulateSizeDistribution_type& ParticulateSizeDistribution)
        : ::mil::tatrc::physiology::datamodel::ObjectData (),
          BronchioleModifier_ (BronchioleModifier, this),
          InflammationCoefficient_ (InflammationCoefficient, this),
          ParticulateSizeDistribution_ (ParticulateSizeDistribution, this)
        {
        }

        SubstanceAerosolizationData::
        SubstanceAerosolizationData (::std::unique_ptr< BronchioleModifier_type > BronchioleModifier,
                                     ::std::unique_ptr< InflammationCoefficient_type > InflammationCoefficient,
                                     ::std::unique_ptr< ParticulateSizeDistribution_type > ParticulateSizeDistribution)
        : ::mil::tatrc::physiology::datamodel::ObjectData (),
          BronchioleModifier_ (std::move (BronchioleModifier), this),
          InflammationCoefficient_ (std::move (InflammationCoefficient), this),
          ParticulateSizeDistribution_ (std::move (ParticulateSizeDistribution), this)
        {
        }

        SubstanceAerosolizationData::
        SubstanceAerosolizationData (const SubstanceAerosolizationData& x,
                                     ::xml_schema::flags f,
                                     ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ObjectData (x, f, c),
          BronchioleModifier_ (x.BronchioleModifier_, f, this),
          InflammationCoefficient_ (x.InflammationCoefficient_, f, this),
          ParticulateSizeDistribution_ (x.ParticulateSizeDistribution_, f, this)
        {
        }

        SubstanceAerosolizationData::
        SubstanceAerosolizationData (const ::xercesc::DOMElement& e,
                                     ::xml_schema::flags f,
                                     ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ObjectData (e, f | ::xml_schema::flags::base, c),
          BronchioleModifier_ (this),
          InflammationCoefficient_ (this),
          ParticulateSizeDistribution_ (this)
        {
          if ((f & ::xml_schema::flags::base) == 0)
          {
            ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
            this->parse (p, f);
          }
        }

        void SubstanceAerosolizationData::
        parse (::xsd::cxx::xml::dom::parser< char >& p,
               ::xml_schema::flags f)
        {
          this->::mil::tatrc::physiology::datamodel::ObjectData::parse (p, f);

          for (; p.more_content (); p.next_content (false))
          {
            const ::xercesc::DOMElement& i (p.cur_element ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            // BronchioleModifier
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "BronchioleModifier",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< BronchioleModifier_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!BronchioleModifier_.present ())
                {
                  ::std::unique_ptr< BronchioleModifier_type > r (
                    dynamic_cast< BronchioleModifier_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->BronchioleModifier_.set (::std::move (r));
                  continue;
                }
              }
            }

            // InflammationCoefficient
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "InflammationCoefficient",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< InflammationCoefficient_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!InflammationCoefficient_.present ())
                {
                  ::std::unique_ptr< InflammationCoefficient_type > r (
                    dynamic_cast< InflammationCoefficient_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->InflammationCoefficient_.set (::std::move (r));
                  continue;
                }
              }
            }

            // ParticulateSizeDistribution
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "ParticulateSizeDistribution",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< ParticulateSizeDistribution_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!ParticulateSizeDistribution_.present ())
                {
                  ::std::unique_ptr< ParticulateSizeDistribution_type > r (
                    dynamic_cast< ParticulateSizeDistribution_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->ParticulateSizeDistribution_.set (::std::move (r));
                  continue;
                }
              }
            }

            break;
          }

          if (!BronchioleModifier_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "BronchioleModifier",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!InflammationCoefficient_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "InflammationCoefficient",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!ParticulateSizeDistribution_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "ParticulateSizeDistribution",
              "uri:/mil/tatrc/physiology/datamodel");
          }
        }

        SubstanceAerosolizationData* SubstanceAerosolizationData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class SubstanceAerosolizationData (*this, f, c);
        }

        SubstanceAerosolizationData& SubstanceAerosolizationData::
        operator= (const SubstanceAerosolizationData& x)
        {
          if (this != &x)
          {
            static_cast< ::mil::tatrc::physiology::datamodel::ObjectData& > (*this) = x;
            this->BronchioleModifier_ = x.BronchioleModifier_;
            this->InflammationCoefficient_ = x.InflammationCoefficient_;
            this->ParticulateSizeDistribution_ = x.ParticulateSizeDistribution_;
          }

          return *this;
        }

        SubstanceAerosolizationData::
        ~SubstanceAerosolizationData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, SubstanceAerosolizationData >
        _xsd_SubstanceAerosolizationData_type_factory_init (
          "SubstanceAerosolizationData",
          "uri:/mil/tatrc/physiology/datamodel");
      }
    }
  }
}

#include <ostream>

#include <xsd/cxx/tree/std-ostream-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::std_ostream_plate< 0, char >
  std_ostream_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        ::std::ostream&
        operator<< (::std::ostream& o, const SubstanceAerosolizationData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ObjectData& > (i);

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "BronchioleModifier: ";
            om.insert (o, i.BronchioleModifier ());
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "InflammationCoefficient: ";
            om.insert (o, i.InflammationCoefficient ());
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "ParticulateSizeDistribution: ";
            om.insert (o, i.ParticulateSizeDistribution ());
          }

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, SubstanceAerosolizationData >
        _xsd_SubstanceAerosolizationData_std_ostream_init;
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
      }
    }
  }
}

#include <ostream>
#include <xsd/cxx/tree/error-handler.hxx>
#include <xsd/cxx/xml/dom/serialization-source.hxx>

#include <xsd/cxx/tree/type-serializer-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_serializer_plate< 0, char >
  type_serializer_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        void
        operator<< (::xercesc::DOMElement& e, const SubstanceAerosolizationData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ObjectData& > (i);

          // BronchioleModifier
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const SubstanceAerosolizationData::BronchioleModifier_type& x (i.BronchioleModifier ());
            if (typeid (SubstanceAerosolizationData::BronchioleModifier_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "BronchioleModifier",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "BronchioleModifier",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }

          // InflammationCoefficient
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const SubstanceAerosolizationData::InflammationCoefficient_type& x (i.InflammationCoefficient ());
            if (typeid (SubstanceAerosolizationData::InflammationCoefficient_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "InflammationCoefficient",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "InflammationCoefficient",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }

          // ParticulateSizeDistribution
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const SubstanceAerosolizationData::ParticulateSizeDistribution_type& x (i.ParticulateSizeDistribution ());
            if (typeid (SubstanceAerosolizationData::ParticulateSizeDistribution_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "ParticulateSizeDistribution",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "ParticulateSizeDistribution",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, SubstanceAerosolizationData >
        _xsd_SubstanceAerosolizationData_type_serializer_init (
          "SubstanceAerosolizationData",
          "uri:/mil/tatrc/physiology/datamodel");
      }
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

