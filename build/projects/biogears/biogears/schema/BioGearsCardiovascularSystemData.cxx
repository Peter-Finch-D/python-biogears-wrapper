// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
#include "Properties.hxx"

//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "BioGearsCardiovascularSystemData.hxx"

#include "RunningAverageData.hxx"

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        // BioGearsCardiovascularSystemData
        // 

        const BioGearsCardiovascularSystemData::StartSystole_type& BioGearsCardiovascularSystemData::
        StartSystole () const
        {
          return this->StartSystole_.get ();
        }

        BioGearsCardiovascularSystemData::StartSystole_type& BioGearsCardiovascularSystemData::
        StartSystole ()
        {
          return this->StartSystole_.get ();
        }

        void BioGearsCardiovascularSystemData::
        StartSystole (const StartSystole_type& x)
        {
          this->StartSystole_.set (x);
        }

        const BioGearsCardiovascularSystemData::HeartFlowDetected_type& BioGearsCardiovascularSystemData::
        HeartFlowDetected () const
        {
          return this->HeartFlowDetected_.get ();
        }

        BioGearsCardiovascularSystemData::HeartFlowDetected_type& BioGearsCardiovascularSystemData::
        HeartFlowDetected ()
        {
          return this->HeartFlowDetected_.get ();
        }

        void BioGearsCardiovascularSystemData::
        HeartFlowDetected (const HeartFlowDetected_type& x)
        {
          this->HeartFlowDetected_.set (x);
        }

        const BioGearsCardiovascularSystemData::EnterCardiacArrest_type& BioGearsCardiovascularSystemData::
        EnterCardiacArrest () const
        {
          return this->EnterCardiacArrest_.get ();
        }

        BioGearsCardiovascularSystemData::EnterCardiacArrest_type& BioGearsCardiovascularSystemData::
        EnterCardiacArrest ()
        {
          return this->EnterCardiacArrest_.get ();
        }

        void BioGearsCardiovascularSystemData::
        EnterCardiacArrest (const EnterCardiacArrest_type& x)
        {
          this->EnterCardiacArrest_.set (x);
        }

        const BioGearsCardiovascularSystemData::CardiacCyclePeriod_s_type& BioGearsCardiovascularSystemData::
        CardiacCyclePeriod_s () const
        {
          return this->CardiacCyclePeriod_s_.get ();
        }

        BioGearsCardiovascularSystemData::CardiacCyclePeriod_s_type& BioGearsCardiovascularSystemData::
        CardiacCyclePeriod_s ()
        {
          return this->CardiacCyclePeriod_s_.get ();
        }

        void BioGearsCardiovascularSystemData::
        CardiacCyclePeriod_s (const CardiacCyclePeriod_s_type& x)
        {
          this->CardiacCyclePeriod_s_.set (x);
        }

        const BioGearsCardiovascularSystemData::CurrentCardiacCycleDuration_s_type& BioGearsCardiovascularSystemData::
        CurrentCardiacCycleDuration_s () const
        {
          return this->CurrentCardiacCycleDuration_s_.get ();
        }

        BioGearsCardiovascularSystemData::CurrentCardiacCycleDuration_s_type& BioGearsCardiovascularSystemData::
        CurrentCardiacCycleDuration_s ()
        {
          return this->CurrentCardiacCycleDuration_s_.get ();
        }

        void BioGearsCardiovascularSystemData::
        CurrentCardiacCycleDuration_s (const CurrentCardiacCycleDuration_s_type& x)
        {
          this->CurrentCardiacCycleDuration_s_.set (x);
        }

        const BioGearsCardiovascularSystemData::LeftHeartElastanceModifier_type& BioGearsCardiovascularSystemData::
        LeftHeartElastanceModifier () const
        {
          return this->LeftHeartElastanceModifier_.get ();
        }

        BioGearsCardiovascularSystemData::LeftHeartElastanceModifier_type& BioGearsCardiovascularSystemData::
        LeftHeartElastanceModifier ()
        {
          return this->LeftHeartElastanceModifier_.get ();
        }

        void BioGearsCardiovascularSystemData::
        LeftHeartElastanceModifier (const LeftHeartElastanceModifier_type& x)
        {
          this->LeftHeartElastanceModifier_.set (x);
        }

        const BioGearsCardiovascularSystemData::LeftHeartElastance_mmHg_Per_mL_type& BioGearsCardiovascularSystemData::
        LeftHeartElastance_mmHg_Per_mL () const
        {
          return this->LeftHeartElastance_mmHg_Per_mL_.get ();
        }

        BioGearsCardiovascularSystemData::LeftHeartElastance_mmHg_Per_mL_type& BioGearsCardiovascularSystemData::
        LeftHeartElastance_mmHg_Per_mL ()
        {
          return this->LeftHeartElastance_mmHg_Per_mL_.get ();
        }

        void BioGearsCardiovascularSystemData::
        LeftHeartElastance_mmHg_Per_mL (const LeftHeartElastance_mmHg_Per_mL_type& x)
        {
          this->LeftHeartElastance_mmHg_Per_mL_.set (x);
        }

        const BioGearsCardiovascularSystemData::LeftHeartElastanceMax_mmHg_Per_mL_type& BioGearsCardiovascularSystemData::
        LeftHeartElastanceMax_mmHg_Per_mL () const
        {
          return this->LeftHeartElastanceMax_mmHg_Per_mL_.get ();
        }

        BioGearsCardiovascularSystemData::LeftHeartElastanceMax_mmHg_Per_mL_type& BioGearsCardiovascularSystemData::
        LeftHeartElastanceMax_mmHg_Per_mL ()
        {
          return this->LeftHeartElastanceMax_mmHg_Per_mL_.get ();
        }

        void BioGearsCardiovascularSystemData::
        LeftHeartElastanceMax_mmHg_Per_mL (const LeftHeartElastanceMax_mmHg_Per_mL_type& x)
        {
          this->LeftHeartElastanceMax_mmHg_Per_mL_.set (x);
        }

        const BioGearsCardiovascularSystemData::LeftHeartElastanceMin_mmHg_Per_mL_type& BioGearsCardiovascularSystemData::
        LeftHeartElastanceMin_mmHg_Per_mL () const
        {
          return this->LeftHeartElastanceMin_mmHg_Per_mL_.get ();
        }

        BioGearsCardiovascularSystemData::LeftHeartElastanceMin_mmHg_Per_mL_type& BioGearsCardiovascularSystemData::
        LeftHeartElastanceMin_mmHg_Per_mL ()
        {
          return this->LeftHeartElastanceMin_mmHg_Per_mL_.get ();
        }

        void BioGearsCardiovascularSystemData::
        LeftHeartElastanceMin_mmHg_Per_mL (const LeftHeartElastanceMin_mmHg_Per_mL_type& x)
        {
          this->LeftHeartElastanceMin_mmHg_Per_mL_.set (x);
        }

        const BioGearsCardiovascularSystemData::RightHeartElastance_mmHg_Per_mL_type& BioGearsCardiovascularSystemData::
        RightHeartElastance_mmHg_Per_mL () const
        {
          return this->RightHeartElastance_mmHg_Per_mL_.get ();
        }

        BioGearsCardiovascularSystemData::RightHeartElastance_mmHg_Per_mL_type& BioGearsCardiovascularSystemData::
        RightHeartElastance_mmHg_Per_mL ()
        {
          return this->RightHeartElastance_mmHg_Per_mL_.get ();
        }

        void BioGearsCardiovascularSystemData::
        RightHeartElastance_mmHg_Per_mL (const RightHeartElastance_mmHg_Per_mL_type& x)
        {
          this->RightHeartElastance_mmHg_Per_mL_.set (x);
        }

        const BioGearsCardiovascularSystemData::RightHeartElastanceMax_mmHg_Per_mL_type& BioGearsCardiovascularSystemData::
        RightHeartElastanceMax_mmHg_Per_mL () const
        {
          return this->RightHeartElastanceMax_mmHg_Per_mL_.get ();
        }

        BioGearsCardiovascularSystemData::RightHeartElastanceMax_mmHg_Per_mL_type& BioGearsCardiovascularSystemData::
        RightHeartElastanceMax_mmHg_Per_mL ()
        {
          return this->RightHeartElastanceMax_mmHg_Per_mL_.get ();
        }

        void BioGearsCardiovascularSystemData::
        RightHeartElastanceMax_mmHg_Per_mL (const RightHeartElastanceMax_mmHg_Per_mL_type& x)
        {
          this->RightHeartElastanceMax_mmHg_Per_mL_.set (x);
        }

        const BioGearsCardiovascularSystemData::RightHeartElastanceMin_mmHg_Per_mL_type& BioGearsCardiovascularSystemData::
        RightHeartElastanceMin_mmHg_Per_mL () const
        {
          return this->RightHeartElastanceMin_mmHg_Per_mL_.get ();
        }

        BioGearsCardiovascularSystemData::RightHeartElastanceMin_mmHg_Per_mL_type& BioGearsCardiovascularSystemData::
        RightHeartElastanceMin_mmHg_Per_mL ()
        {
          return this->RightHeartElastanceMin_mmHg_Per_mL_.get ();
        }

        void BioGearsCardiovascularSystemData::
        RightHeartElastanceMin_mmHg_Per_mL (const RightHeartElastanceMin_mmHg_Per_mL_type& x)
        {
          this->RightHeartElastanceMin_mmHg_Per_mL_.set (x);
        }

        const BioGearsCardiovascularSystemData::CompressionTime_s_type& BioGearsCardiovascularSystemData::
        CompressionTime_s () const
        {
          return this->CompressionTime_s_.get ();
        }

        BioGearsCardiovascularSystemData::CompressionTime_s_type& BioGearsCardiovascularSystemData::
        CompressionTime_s ()
        {
          return this->CompressionTime_s_.get ();
        }

        void BioGearsCardiovascularSystemData::
        CompressionTime_s (const CompressionTime_s_type& x)
        {
          this->CompressionTime_s_.set (x);
        }

        const BioGearsCardiovascularSystemData::CompressionRatio_type& BioGearsCardiovascularSystemData::
        CompressionRatio () const
        {
          return this->CompressionRatio_.get ();
        }

        BioGearsCardiovascularSystemData::CompressionRatio_type& BioGearsCardiovascularSystemData::
        CompressionRatio ()
        {
          return this->CompressionRatio_.get ();
        }

        void BioGearsCardiovascularSystemData::
        CompressionRatio (const CompressionRatio_type& x)
        {
          this->CompressionRatio_.set (x);
        }

        const BioGearsCardiovascularSystemData::CompressionPeriod_s_type& BioGearsCardiovascularSystemData::
        CompressionPeriod_s () const
        {
          return this->CompressionPeriod_s_.get ();
        }

        BioGearsCardiovascularSystemData::CompressionPeriod_s_type& BioGearsCardiovascularSystemData::
        CompressionPeriod_s ()
        {
          return this->CompressionPeriod_s_.get ();
        }

        void BioGearsCardiovascularSystemData::
        CompressionPeriod_s (const CompressionPeriod_s_type& x)
        {
          this->CompressionPeriod_s_.set (x);
        }

        const BioGearsCardiovascularSystemData::CurrentCardiacCycleTime_s_type& BioGearsCardiovascularSystemData::
        CurrentCardiacCycleTime_s () const
        {
          return this->CurrentCardiacCycleTime_s_.get ();
        }

        BioGearsCardiovascularSystemData::CurrentCardiacCycleTime_s_type& BioGearsCardiovascularSystemData::
        CurrentCardiacCycleTime_s ()
        {
          return this->CurrentCardiacCycleTime_s_.get ();
        }

        void BioGearsCardiovascularSystemData::
        CurrentCardiacCycleTime_s (const CurrentCardiacCycleTime_s_type& x)
        {
          this->CurrentCardiacCycleTime_s_.set (x);
        }

        const BioGearsCardiovascularSystemData::CardiacCycleDiastolicVolume_mL_type& BioGearsCardiovascularSystemData::
        CardiacCycleDiastolicVolume_mL () const
        {
          return this->CardiacCycleDiastolicVolume_mL_.get ();
        }

        BioGearsCardiovascularSystemData::CardiacCycleDiastolicVolume_mL_type& BioGearsCardiovascularSystemData::
        CardiacCycleDiastolicVolume_mL ()
        {
          return this->CardiacCycleDiastolicVolume_mL_.get ();
        }

        void BioGearsCardiovascularSystemData::
        CardiacCycleDiastolicVolume_mL (const CardiacCycleDiastolicVolume_mL_type& x)
        {
          this->CardiacCycleDiastolicVolume_mL_.set (x);
        }

        const BioGearsCardiovascularSystemData::CardiacCycleAortaPressureLow_mmHg_type& BioGearsCardiovascularSystemData::
        CardiacCycleAortaPressureLow_mmHg () const
        {
          return this->CardiacCycleAortaPressureLow_mmHg_.get ();
        }

        BioGearsCardiovascularSystemData::CardiacCycleAortaPressureLow_mmHg_type& BioGearsCardiovascularSystemData::
        CardiacCycleAortaPressureLow_mmHg ()
        {
          return this->CardiacCycleAortaPressureLow_mmHg_.get ();
        }

        void BioGearsCardiovascularSystemData::
        CardiacCycleAortaPressureLow_mmHg (const CardiacCycleAortaPressureLow_mmHg_type& x)
        {
          this->CardiacCycleAortaPressureLow_mmHg_.set (x);
        }

        const BioGearsCardiovascularSystemData::CardiacCycleAortaPressureHigh_mmHg_type& BioGearsCardiovascularSystemData::
        CardiacCycleAortaPressureHigh_mmHg () const
        {
          return this->CardiacCycleAortaPressureHigh_mmHg_.get ();
        }

        BioGearsCardiovascularSystemData::CardiacCycleAortaPressureHigh_mmHg_type& BioGearsCardiovascularSystemData::
        CardiacCycleAortaPressureHigh_mmHg ()
        {
          return this->CardiacCycleAortaPressureHigh_mmHg_.get ();
        }

        void BioGearsCardiovascularSystemData::
        CardiacCycleAortaPressureHigh_mmHg (const CardiacCycleAortaPressureHigh_mmHg_type& x)
        {
          this->CardiacCycleAortaPressureHigh_mmHg_.set (x);
        }

        const BioGearsCardiovascularSystemData::CardiacCyclePulmonaryArteryPressureLow_mmHg_type& BioGearsCardiovascularSystemData::
        CardiacCyclePulmonaryArteryPressureLow_mmHg () const
        {
          return this->CardiacCyclePulmonaryArteryPressureLow_mmHg_.get ();
        }

        BioGearsCardiovascularSystemData::CardiacCyclePulmonaryArteryPressureLow_mmHg_type& BioGearsCardiovascularSystemData::
        CardiacCyclePulmonaryArteryPressureLow_mmHg ()
        {
          return this->CardiacCyclePulmonaryArteryPressureLow_mmHg_.get ();
        }

        void BioGearsCardiovascularSystemData::
        CardiacCyclePulmonaryArteryPressureLow_mmHg (const CardiacCyclePulmonaryArteryPressureLow_mmHg_type& x)
        {
          this->CardiacCyclePulmonaryArteryPressureLow_mmHg_.set (x);
        }

        const BioGearsCardiovascularSystemData::CardiacCyclePulmonaryArteryPressureHigh_mmHg_type& BioGearsCardiovascularSystemData::
        CardiacCyclePulmonaryArteryPressureHigh_mmHg () const
        {
          return this->CardiacCyclePulmonaryArteryPressureHigh_mmHg_.get ();
        }

        BioGearsCardiovascularSystemData::CardiacCyclePulmonaryArteryPressureHigh_mmHg_type& BioGearsCardiovascularSystemData::
        CardiacCyclePulmonaryArteryPressureHigh_mmHg ()
        {
          return this->CardiacCyclePulmonaryArteryPressureHigh_mmHg_.get ();
        }

        void BioGearsCardiovascularSystemData::
        CardiacCyclePulmonaryArteryPressureHigh_mmHg (const CardiacCyclePulmonaryArteryPressureHigh_mmHg_type& x)
        {
          this->CardiacCyclePulmonaryArteryPressureHigh_mmHg_.set (x);
        }

        const BioGearsCardiovascularSystemData::LastCardiacCycleMeanArterialCO2PartialPressure_mmHg_type& BioGearsCardiovascularSystemData::
        LastCardiacCycleMeanArterialCO2PartialPressure_mmHg () const
        {
          return this->LastCardiacCycleMeanArterialCO2PartialPressure_mmHg_.get ();
        }

        BioGearsCardiovascularSystemData::LastCardiacCycleMeanArterialCO2PartialPressure_mmHg_type& BioGearsCardiovascularSystemData::
        LastCardiacCycleMeanArterialCO2PartialPressure_mmHg ()
        {
          return this->LastCardiacCycleMeanArterialCO2PartialPressure_mmHg_.get ();
        }

        void BioGearsCardiovascularSystemData::
        LastCardiacCycleMeanArterialCO2PartialPressure_mmHg (const LastCardiacCycleMeanArterialCO2PartialPressure_mmHg_type& x)
        {
          this->LastCardiacCycleMeanArterialCO2PartialPressure_mmHg_.set (x);
        }

        const BioGearsCardiovascularSystemData::CardiacCycleStrokeVolume_mL_type& BioGearsCardiovascularSystemData::
        CardiacCycleStrokeVolume_mL () const
        {
          return this->CardiacCycleStrokeVolume_mL_.get ();
        }

        BioGearsCardiovascularSystemData::CardiacCycleStrokeVolume_mL_type& BioGearsCardiovascularSystemData::
        CardiacCycleStrokeVolume_mL ()
        {
          return this->CardiacCycleStrokeVolume_mL_.get ();
        }

        void BioGearsCardiovascularSystemData::
        CardiacCycleStrokeVolume_mL (const CardiacCycleStrokeVolume_mL_type& x)
        {
          this->CardiacCycleStrokeVolume_mL_.set (x);
        }

        const BioGearsCardiovascularSystemData::CardiacCycleArterialPressure_mmHg_type& BioGearsCardiovascularSystemData::
        CardiacCycleArterialPressure_mmHg () const
        {
          return this->CardiacCycleArterialPressure_mmHg_.get ();
        }

        BioGearsCardiovascularSystemData::CardiacCycleArterialPressure_mmHg_type& BioGearsCardiovascularSystemData::
        CardiacCycleArterialPressure_mmHg ()
        {
          return this->CardiacCycleArterialPressure_mmHg_.get ();
        }

        void BioGearsCardiovascularSystemData::
        CardiacCycleArterialPressure_mmHg (const CardiacCycleArterialPressure_mmHg_type& x)
        {
          this->CardiacCycleArterialPressure_mmHg_.set (x);
        }

        void BioGearsCardiovascularSystemData::
        CardiacCycleArterialPressure_mmHg (::std::unique_ptr< CardiacCycleArterialPressure_mmHg_type > x)
        {
          this->CardiacCycleArterialPressure_mmHg_.set (std::move (x));
        }

        const BioGearsCardiovascularSystemData::CardiacCycleArterialCO2PartialPressure_mmHg_type& BioGearsCardiovascularSystemData::
        CardiacCycleArterialCO2PartialPressure_mmHg () const
        {
          return this->CardiacCycleArterialCO2PartialPressure_mmHg_.get ();
        }

        BioGearsCardiovascularSystemData::CardiacCycleArterialCO2PartialPressure_mmHg_type& BioGearsCardiovascularSystemData::
        CardiacCycleArterialCO2PartialPressure_mmHg ()
        {
          return this->CardiacCycleArterialCO2PartialPressure_mmHg_.get ();
        }

        void BioGearsCardiovascularSystemData::
        CardiacCycleArterialCO2PartialPressure_mmHg (const CardiacCycleArterialCO2PartialPressure_mmHg_type& x)
        {
          this->CardiacCycleArterialCO2PartialPressure_mmHg_.set (x);
        }

        void BioGearsCardiovascularSystemData::
        CardiacCycleArterialCO2PartialPressure_mmHg (::std::unique_ptr< CardiacCycleArterialCO2PartialPressure_mmHg_type > x)
        {
          this->CardiacCycleArterialCO2PartialPressure_mmHg_.set (std::move (x));
        }

        const BioGearsCardiovascularSystemData::CardiacCyclePulmonaryCapillariesWedgePressure_mmHg_type& BioGearsCardiovascularSystemData::
        CardiacCyclePulmonaryCapillariesWedgePressure_mmHg () const
        {
          return this->CardiacCyclePulmonaryCapillariesWedgePressure_mmHg_.get ();
        }

        BioGearsCardiovascularSystemData::CardiacCyclePulmonaryCapillariesWedgePressure_mmHg_type& BioGearsCardiovascularSystemData::
        CardiacCyclePulmonaryCapillariesWedgePressure_mmHg ()
        {
          return this->CardiacCyclePulmonaryCapillariesWedgePressure_mmHg_.get ();
        }

        void BioGearsCardiovascularSystemData::
        CardiacCyclePulmonaryCapillariesWedgePressure_mmHg (const CardiacCyclePulmonaryCapillariesWedgePressure_mmHg_type& x)
        {
          this->CardiacCyclePulmonaryCapillariesWedgePressure_mmHg_.set (x);
        }

        void BioGearsCardiovascularSystemData::
        CardiacCyclePulmonaryCapillariesWedgePressure_mmHg (::std::unique_ptr< CardiacCyclePulmonaryCapillariesWedgePressure_mmHg_type > x)
        {
          this->CardiacCyclePulmonaryCapillariesWedgePressure_mmHg_.set (std::move (x));
        }

        const BioGearsCardiovascularSystemData::CardiacCyclePulmonaryCapillariesFlow_mL_Per_s_type& BioGearsCardiovascularSystemData::
        CardiacCyclePulmonaryCapillariesFlow_mL_Per_s () const
        {
          return this->CardiacCyclePulmonaryCapillariesFlow_mL_Per_s_.get ();
        }

        BioGearsCardiovascularSystemData::CardiacCyclePulmonaryCapillariesFlow_mL_Per_s_type& BioGearsCardiovascularSystemData::
        CardiacCyclePulmonaryCapillariesFlow_mL_Per_s ()
        {
          return this->CardiacCyclePulmonaryCapillariesFlow_mL_Per_s_.get ();
        }

        void BioGearsCardiovascularSystemData::
        CardiacCyclePulmonaryCapillariesFlow_mL_Per_s (const CardiacCyclePulmonaryCapillariesFlow_mL_Per_s_type& x)
        {
          this->CardiacCyclePulmonaryCapillariesFlow_mL_Per_s_.set (x);
        }

        void BioGearsCardiovascularSystemData::
        CardiacCyclePulmonaryCapillariesFlow_mL_Per_s (::std::unique_ptr< CardiacCyclePulmonaryCapillariesFlow_mL_Per_s_type > x)
        {
          this->CardiacCyclePulmonaryCapillariesFlow_mL_Per_s_.set (std::move (x));
        }

        const BioGearsCardiovascularSystemData::CardiacCyclePulmonaryShuntFlow_mL_Per_s_type& BioGearsCardiovascularSystemData::
        CardiacCyclePulmonaryShuntFlow_mL_Per_s () const
        {
          return this->CardiacCyclePulmonaryShuntFlow_mL_Per_s_.get ();
        }

        BioGearsCardiovascularSystemData::CardiacCyclePulmonaryShuntFlow_mL_Per_s_type& BioGearsCardiovascularSystemData::
        CardiacCyclePulmonaryShuntFlow_mL_Per_s ()
        {
          return this->CardiacCyclePulmonaryShuntFlow_mL_Per_s_.get ();
        }

        void BioGearsCardiovascularSystemData::
        CardiacCyclePulmonaryShuntFlow_mL_Per_s (const CardiacCyclePulmonaryShuntFlow_mL_Per_s_type& x)
        {
          this->CardiacCyclePulmonaryShuntFlow_mL_Per_s_.set (x);
        }

        void BioGearsCardiovascularSystemData::
        CardiacCyclePulmonaryShuntFlow_mL_Per_s (::std::unique_ptr< CardiacCyclePulmonaryShuntFlow_mL_Per_s_type > x)
        {
          this->CardiacCyclePulmonaryShuntFlow_mL_Per_s_.set (std::move (x));
        }

        const BioGearsCardiovascularSystemData::CardiacCyclePulmonaryArteryPressure_mmHg_type& BioGearsCardiovascularSystemData::
        CardiacCyclePulmonaryArteryPressure_mmHg () const
        {
          return this->CardiacCyclePulmonaryArteryPressure_mmHg_.get ();
        }

        BioGearsCardiovascularSystemData::CardiacCyclePulmonaryArteryPressure_mmHg_type& BioGearsCardiovascularSystemData::
        CardiacCyclePulmonaryArteryPressure_mmHg ()
        {
          return this->CardiacCyclePulmonaryArteryPressure_mmHg_.get ();
        }

        void BioGearsCardiovascularSystemData::
        CardiacCyclePulmonaryArteryPressure_mmHg (const CardiacCyclePulmonaryArteryPressure_mmHg_type& x)
        {
          this->CardiacCyclePulmonaryArteryPressure_mmHg_.set (x);
        }

        void BioGearsCardiovascularSystemData::
        CardiacCyclePulmonaryArteryPressure_mmHg (::std::unique_ptr< CardiacCyclePulmonaryArteryPressure_mmHg_type > x)
        {
          this->CardiacCyclePulmonaryArteryPressure_mmHg_.set (std::move (x));
        }

        const BioGearsCardiovascularSystemData::CardiacCycleCentralVenousPressure_mmHg_type& BioGearsCardiovascularSystemData::
        CardiacCycleCentralVenousPressure_mmHg () const
        {
          return this->CardiacCycleCentralVenousPressure_mmHg_.get ();
        }

        BioGearsCardiovascularSystemData::CardiacCycleCentralVenousPressure_mmHg_type& BioGearsCardiovascularSystemData::
        CardiacCycleCentralVenousPressure_mmHg ()
        {
          return this->CardiacCycleCentralVenousPressure_mmHg_.get ();
        }

        void BioGearsCardiovascularSystemData::
        CardiacCycleCentralVenousPressure_mmHg (const CardiacCycleCentralVenousPressure_mmHg_type& x)
        {
          this->CardiacCycleCentralVenousPressure_mmHg_.set (x);
        }

        void BioGearsCardiovascularSystemData::
        CardiacCycleCentralVenousPressure_mmHg (::std::unique_ptr< CardiacCycleCentralVenousPressure_mmHg_type > x)
        {
          this->CardiacCycleCentralVenousPressure_mmHg_.set (std::move (x));
        }

        const BioGearsCardiovascularSystemData::CardiacCycleSkinFlow_mL_Per_s_type& BioGearsCardiovascularSystemData::
        CardiacCycleSkinFlow_mL_Per_s () const
        {
          return this->CardiacCycleSkinFlow_mL_Per_s_.get ();
        }

        BioGearsCardiovascularSystemData::CardiacCycleSkinFlow_mL_Per_s_type& BioGearsCardiovascularSystemData::
        CardiacCycleSkinFlow_mL_Per_s ()
        {
          return this->CardiacCycleSkinFlow_mL_Per_s_.get ();
        }

        void BioGearsCardiovascularSystemData::
        CardiacCycleSkinFlow_mL_Per_s (const CardiacCycleSkinFlow_mL_Per_s_type& x)
        {
          this->CardiacCycleSkinFlow_mL_Per_s_.set (x);
        }

        void BioGearsCardiovascularSystemData::
        CardiacCycleSkinFlow_mL_Per_s (::std::unique_ptr< CardiacCycleSkinFlow_mL_Per_s_type > x)
        {
          this->CardiacCycleSkinFlow_mL_Per_s_.set (std::move (x));
        }
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        // BioGearsCardiovascularSystemData
        //

        BioGearsCardiovascularSystemData::
        BioGearsCardiovascularSystemData ()
        : ::mil::tatrc::physiology::datamodel::CardiovascularSystemData (),
          StartSystole_ (this),
          HeartFlowDetected_ (this),
          EnterCardiacArrest_ (this),
          CardiacCyclePeriod_s_ (this),
          CurrentCardiacCycleDuration_s_ (this),
          LeftHeartElastanceModifier_ (this),
          LeftHeartElastance_mmHg_Per_mL_ (this),
          LeftHeartElastanceMax_mmHg_Per_mL_ (this),
          LeftHeartElastanceMin_mmHg_Per_mL_ (this),
          RightHeartElastance_mmHg_Per_mL_ (this),
          RightHeartElastanceMax_mmHg_Per_mL_ (this),
          RightHeartElastanceMin_mmHg_Per_mL_ (this),
          CompressionTime_s_ (this),
          CompressionRatio_ (this),
          CompressionPeriod_s_ (this),
          CurrentCardiacCycleTime_s_ (this),
          CardiacCycleDiastolicVolume_mL_ (this),
          CardiacCycleAortaPressureLow_mmHg_ (this),
          CardiacCycleAortaPressureHigh_mmHg_ (this),
          CardiacCyclePulmonaryArteryPressureLow_mmHg_ (this),
          CardiacCyclePulmonaryArteryPressureHigh_mmHg_ (this),
          LastCardiacCycleMeanArterialCO2PartialPressure_mmHg_ (this),
          CardiacCycleStrokeVolume_mL_ (this),
          CardiacCycleArterialPressure_mmHg_ (this),
          CardiacCycleArterialCO2PartialPressure_mmHg_ (this),
          CardiacCyclePulmonaryCapillariesWedgePressure_mmHg_ (this),
          CardiacCyclePulmonaryCapillariesFlow_mL_Per_s_ (this),
          CardiacCyclePulmonaryShuntFlow_mL_Per_s_ (this),
          CardiacCyclePulmonaryArteryPressure_mmHg_ (this),
          CardiacCycleCentralVenousPressure_mmHg_ (this),
          CardiacCycleSkinFlow_mL_Per_s_ (this)
        {
        }

        BioGearsCardiovascularSystemData::
        BioGearsCardiovascularSystemData (const StartSystole_type& StartSystole,
                                          const HeartFlowDetected_type& HeartFlowDetected,
                                          const EnterCardiacArrest_type& EnterCardiacArrest,
                                          const CardiacCyclePeriod_s_type& CardiacCyclePeriod_s,
                                          const CurrentCardiacCycleDuration_s_type& CurrentCardiacCycleDuration_s,
                                          const LeftHeartElastanceModifier_type& LeftHeartElastanceModifier,
                                          const LeftHeartElastance_mmHg_Per_mL_type& LeftHeartElastance_mmHg_Per_mL,
                                          const LeftHeartElastanceMax_mmHg_Per_mL_type& LeftHeartElastanceMax_mmHg_Per_mL,
                                          const LeftHeartElastanceMin_mmHg_Per_mL_type& LeftHeartElastanceMin_mmHg_Per_mL,
                                          const RightHeartElastance_mmHg_Per_mL_type& RightHeartElastance_mmHg_Per_mL,
                                          const RightHeartElastanceMax_mmHg_Per_mL_type& RightHeartElastanceMax_mmHg_Per_mL,
                                          const RightHeartElastanceMin_mmHg_Per_mL_type& RightHeartElastanceMin_mmHg_Per_mL,
                                          const CompressionTime_s_type& CompressionTime_s,
                                          const CompressionRatio_type& CompressionRatio,
                                          const CompressionPeriod_s_type& CompressionPeriod_s,
                                          const CurrentCardiacCycleTime_s_type& CurrentCardiacCycleTime_s,
                                          const CardiacCycleDiastolicVolume_mL_type& CardiacCycleDiastolicVolume_mL,
                                          const CardiacCycleAortaPressureLow_mmHg_type& CardiacCycleAortaPressureLow_mmHg,
                                          const CardiacCycleAortaPressureHigh_mmHg_type& CardiacCycleAortaPressureHigh_mmHg,
                                          const CardiacCyclePulmonaryArteryPressureLow_mmHg_type& CardiacCyclePulmonaryArteryPressureLow_mmHg,
                                          const CardiacCyclePulmonaryArteryPressureHigh_mmHg_type& CardiacCyclePulmonaryArteryPressureHigh_mmHg,
                                          const LastCardiacCycleMeanArterialCO2PartialPressure_mmHg_type& LastCardiacCycleMeanArterialCO2PartialPressure_mmHg,
                                          const CardiacCycleStrokeVolume_mL_type& CardiacCycleStrokeVolume_mL,
                                          const CardiacCycleArterialPressure_mmHg_type& CardiacCycleArterialPressure_mmHg,
                                          const CardiacCycleArterialCO2PartialPressure_mmHg_type& CardiacCycleArterialCO2PartialPressure_mmHg,
                                          const CardiacCyclePulmonaryCapillariesWedgePressure_mmHg_type& CardiacCyclePulmonaryCapillariesWedgePressure_mmHg,
                                          const CardiacCyclePulmonaryCapillariesFlow_mL_Per_s_type& CardiacCyclePulmonaryCapillariesFlow_mL_Per_s,
                                          const CardiacCyclePulmonaryShuntFlow_mL_Per_s_type& CardiacCyclePulmonaryShuntFlow_mL_Per_s,
                                          const CardiacCyclePulmonaryArteryPressure_mmHg_type& CardiacCyclePulmonaryArteryPressure_mmHg,
                                          const CardiacCycleCentralVenousPressure_mmHg_type& CardiacCycleCentralVenousPressure_mmHg,
                                          const CardiacCycleSkinFlow_mL_Per_s_type& CardiacCycleSkinFlow_mL_Per_s)
        : ::mil::tatrc::physiology::datamodel::CardiovascularSystemData (),
          StartSystole_ (StartSystole, this),
          HeartFlowDetected_ (HeartFlowDetected, this),
          EnterCardiacArrest_ (EnterCardiacArrest, this),
          CardiacCyclePeriod_s_ (CardiacCyclePeriod_s, this),
          CurrentCardiacCycleDuration_s_ (CurrentCardiacCycleDuration_s, this),
          LeftHeartElastanceModifier_ (LeftHeartElastanceModifier, this),
          LeftHeartElastance_mmHg_Per_mL_ (LeftHeartElastance_mmHg_Per_mL, this),
          LeftHeartElastanceMax_mmHg_Per_mL_ (LeftHeartElastanceMax_mmHg_Per_mL, this),
          LeftHeartElastanceMin_mmHg_Per_mL_ (LeftHeartElastanceMin_mmHg_Per_mL, this),
          RightHeartElastance_mmHg_Per_mL_ (RightHeartElastance_mmHg_Per_mL, this),
          RightHeartElastanceMax_mmHg_Per_mL_ (RightHeartElastanceMax_mmHg_Per_mL, this),
          RightHeartElastanceMin_mmHg_Per_mL_ (RightHeartElastanceMin_mmHg_Per_mL, this),
          CompressionTime_s_ (CompressionTime_s, this),
          CompressionRatio_ (CompressionRatio, this),
          CompressionPeriod_s_ (CompressionPeriod_s, this),
          CurrentCardiacCycleTime_s_ (CurrentCardiacCycleTime_s, this),
          CardiacCycleDiastolicVolume_mL_ (CardiacCycleDiastolicVolume_mL, this),
          CardiacCycleAortaPressureLow_mmHg_ (CardiacCycleAortaPressureLow_mmHg, this),
          CardiacCycleAortaPressureHigh_mmHg_ (CardiacCycleAortaPressureHigh_mmHg, this),
          CardiacCyclePulmonaryArteryPressureLow_mmHg_ (CardiacCyclePulmonaryArteryPressureLow_mmHg, this),
          CardiacCyclePulmonaryArteryPressureHigh_mmHg_ (CardiacCyclePulmonaryArteryPressureHigh_mmHg, this),
          LastCardiacCycleMeanArterialCO2PartialPressure_mmHg_ (LastCardiacCycleMeanArterialCO2PartialPressure_mmHg, this),
          CardiacCycleStrokeVolume_mL_ (CardiacCycleStrokeVolume_mL, this),
          CardiacCycleArterialPressure_mmHg_ (CardiacCycleArterialPressure_mmHg, this),
          CardiacCycleArterialCO2PartialPressure_mmHg_ (CardiacCycleArterialCO2PartialPressure_mmHg, this),
          CardiacCyclePulmonaryCapillariesWedgePressure_mmHg_ (CardiacCyclePulmonaryCapillariesWedgePressure_mmHg, this),
          CardiacCyclePulmonaryCapillariesFlow_mL_Per_s_ (CardiacCyclePulmonaryCapillariesFlow_mL_Per_s, this),
          CardiacCyclePulmonaryShuntFlow_mL_Per_s_ (CardiacCyclePulmonaryShuntFlow_mL_Per_s, this),
          CardiacCyclePulmonaryArteryPressure_mmHg_ (CardiacCyclePulmonaryArteryPressure_mmHg, this),
          CardiacCycleCentralVenousPressure_mmHg_ (CardiacCycleCentralVenousPressure_mmHg, this),
          CardiacCycleSkinFlow_mL_Per_s_ (CardiacCycleSkinFlow_mL_Per_s, this)
        {
        }

        BioGearsCardiovascularSystemData::
        BioGearsCardiovascularSystemData (const StartSystole_type& StartSystole,
                                          const HeartFlowDetected_type& HeartFlowDetected,
                                          const EnterCardiacArrest_type& EnterCardiacArrest,
                                          const CardiacCyclePeriod_s_type& CardiacCyclePeriod_s,
                                          const CurrentCardiacCycleDuration_s_type& CurrentCardiacCycleDuration_s,
                                          const LeftHeartElastanceModifier_type& LeftHeartElastanceModifier,
                                          const LeftHeartElastance_mmHg_Per_mL_type& LeftHeartElastance_mmHg_Per_mL,
                                          const LeftHeartElastanceMax_mmHg_Per_mL_type& LeftHeartElastanceMax_mmHg_Per_mL,
                                          const LeftHeartElastanceMin_mmHg_Per_mL_type& LeftHeartElastanceMin_mmHg_Per_mL,
                                          const RightHeartElastance_mmHg_Per_mL_type& RightHeartElastance_mmHg_Per_mL,
                                          const RightHeartElastanceMax_mmHg_Per_mL_type& RightHeartElastanceMax_mmHg_Per_mL,
                                          const RightHeartElastanceMin_mmHg_Per_mL_type& RightHeartElastanceMin_mmHg_Per_mL,
                                          const CompressionTime_s_type& CompressionTime_s,
                                          const CompressionRatio_type& CompressionRatio,
                                          const CompressionPeriod_s_type& CompressionPeriod_s,
                                          const CurrentCardiacCycleTime_s_type& CurrentCardiacCycleTime_s,
                                          const CardiacCycleDiastolicVolume_mL_type& CardiacCycleDiastolicVolume_mL,
                                          const CardiacCycleAortaPressureLow_mmHg_type& CardiacCycleAortaPressureLow_mmHg,
                                          const CardiacCycleAortaPressureHigh_mmHg_type& CardiacCycleAortaPressureHigh_mmHg,
                                          const CardiacCyclePulmonaryArteryPressureLow_mmHg_type& CardiacCyclePulmonaryArteryPressureLow_mmHg,
                                          const CardiacCyclePulmonaryArteryPressureHigh_mmHg_type& CardiacCyclePulmonaryArteryPressureHigh_mmHg,
                                          const LastCardiacCycleMeanArterialCO2PartialPressure_mmHg_type& LastCardiacCycleMeanArterialCO2PartialPressure_mmHg,
                                          const CardiacCycleStrokeVolume_mL_type& CardiacCycleStrokeVolume_mL,
                                          ::std::unique_ptr< CardiacCycleArterialPressure_mmHg_type > CardiacCycleArterialPressure_mmHg,
                                          ::std::unique_ptr< CardiacCycleArterialCO2PartialPressure_mmHg_type > CardiacCycleArterialCO2PartialPressure_mmHg,
                                          ::std::unique_ptr< CardiacCyclePulmonaryCapillariesWedgePressure_mmHg_type > CardiacCyclePulmonaryCapillariesWedgePressure_mmHg,
                                          ::std::unique_ptr< CardiacCyclePulmonaryCapillariesFlow_mL_Per_s_type > CardiacCyclePulmonaryCapillariesFlow_mL_Per_s,
                                          ::std::unique_ptr< CardiacCyclePulmonaryShuntFlow_mL_Per_s_type > CardiacCyclePulmonaryShuntFlow_mL_Per_s,
                                          ::std::unique_ptr< CardiacCyclePulmonaryArteryPressure_mmHg_type > CardiacCyclePulmonaryArteryPressure_mmHg,
                                          ::std::unique_ptr< CardiacCycleCentralVenousPressure_mmHg_type > CardiacCycleCentralVenousPressure_mmHg,
                                          ::std::unique_ptr< CardiacCycleSkinFlow_mL_Per_s_type > CardiacCycleSkinFlow_mL_Per_s)
        : ::mil::tatrc::physiology::datamodel::CardiovascularSystemData (),
          StartSystole_ (StartSystole, this),
          HeartFlowDetected_ (HeartFlowDetected, this),
          EnterCardiacArrest_ (EnterCardiacArrest, this),
          CardiacCyclePeriod_s_ (CardiacCyclePeriod_s, this),
          CurrentCardiacCycleDuration_s_ (CurrentCardiacCycleDuration_s, this),
          LeftHeartElastanceModifier_ (LeftHeartElastanceModifier, this),
          LeftHeartElastance_mmHg_Per_mL_ (LeftHeartElastance_mmHg_Per_mL, this),
          LeftHeartElastanceMax_mmHg_Per_mL_ (LeftHeartElastanceMax_mmHg_Per_mL, this),
          LeftHeartElastanceMin_mmHg_Per_mL_ (LeftHeartElastanceMin_mmHg_Per_mL, this),
          RightHeartElastance_mmHg_Per_mL_ (RightHeartElastance_mmHg_Per_mL, this),
          RightHeartElastanceMax_mmHg_Per_mL_ (RightHeartElastanceMax_mmHg_Per_mL, this),
          RightHeartElastanceMin_mmHg_Per_mL_ (RightHeartElastanceMin_mmHg_Per_mL, this),
          CompressionTime_s_ (CompressionTime_s, this),
          CompressionRatio_ (CompressionRatio, this),
          CompressionPeriod_s_ (CompressionPeriod_s, this),
          CurrentCardiacCycleTime_s_ (CurrentCardiacCycleTime_s, this),
          CardiacCycleDiastolicVolume_mL_ (CardiacCycleDiastolicVolume_mL, this),
          CardiacCycleAortaPressureLow_mmHg_ (CardiacCycleAortaPressureLow_mmHg, this),
          CardiacCycleAortaPressureHigh_mmHg_ (CardiacCycleAortaPressureHigh_mmHg, this),
          CardiacCyclePulmonaryArteryPressureLow_mmHg_ (CardiacCyclePulmonaryArteryPressureLow_mmHg, this),
          CardiacCyclePulmonaryArteryPressureHigh_mmHg_ (CardiacCyclePulmonaryArteryPressureHigh_mmHg, this),
          LastCardiacCycleMeanArterialCO2PartialPressure_mmHg_ (LastCardiacCycleMeanArterialCO2PartialPressure_mmHg, this),
          CardiacCycleStrokeVolume_mL_ (CardiacCycleStrokeVolume_mL, this),
          CardiacCycleArterialPressure_mmHg_ (std::move (CardiacCycleArterialPressure_mmHg), this),
          CardiacCycleArterialCO2PartialPressure_mmHg_ (std::move (CardiacCycleArterialCO2PartialPressure_mmHg), this),
          CardiacCyclePulmonaryCapillariesWedgePressure_mmHg_ (std::move (CardiacCyclePulmonaryCapillariesWedgePressure_mmHg), this),
          CardiacCyclePulmonaryCapillariesFlow_mL_Per_s_ (std::move (CardiacCyclePulmonaryCapillariesFlow_mL_Per_s), this),
          CardiacCyclePulmonaryShuntFlow_mL_Per_s_ (std::move (CardiacCyclePulmonaryShuntFlow_mL_Per_s), this),
          CardiacCyclePulmonaryArteryPressure_mmHg_ (std::move (CardiacCyclePulmonaryArteryPressure_mmHg), this),
          CardiacCycleCentralVenousPressure_mmHg_ (std::move (CardiacCycleCentralVenousPressure_mmHg), this),
          CardiacCycleSkinFlow_mL_Per_s_ (std::move (CardiacCycleSkinFlow_mL_Per_s), this)
        {
        }

        BioGearsCardiovascularSystemData::
        BioGearsCardiovascularSystemData (const BioGearsCardiovascularSystemData& x,
                                          ::xml_schema::flags f,
                                          ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::CardiovascularSystemData (x, f, c),
          StartSystole_ (x.StartSystole_, f, this),
          HeartFlowDetected_ (x.HeartFlowDetected_, f, this),
          EnterCardiacArrest_ (x.EnterCardiacArrest_, f, this),
          CardiacCyclePeriod_s_ (x.CardiacCyclePeriod_s_, f, this),
          CurrentCardiacCycleDuration_s_ (x.CurrentCardiacCycleDuration_s_, f, this),
          LeftHeartElastanceModifier_ (x.LeftHeartElastanceModifier_, f, this),
          LeftHeartElastance_mmHg_Per_mL_ (x.LeftHeartElastance_mmHg_Per_mL_, f, this),
          LeftHeartElastanceMax_mmHg_Per_mL_ (x.LeftHeartElastanceMax_mmHg_Per_mL_, f, this),
          LeftHeartElastanceMin_mmHg_Per_mL_ (x.LeftHeartElastanceMin_mmHg_Per_mL_, f, this),
          RightHeartElastance_mmHg_Per_mL_ (x.RightHeartElastance_mmHg_Per_mL_, f, this),
          RightHeartElastanceMax_mmHg_Per_mL_ (x.RightHeartElastanceMax_mmHg_Per_mL_, f, this),
          RightHeartElastanceMin_mmHg_Per_mL_ (x.RightHeartElastanceMin_mmHg_Per_mL_, f, this),
          CompressionTime_s_ (x.CompressionTime_s_, f, this),
          CompressionRatio_ (x.CompressionRatio_, f, this),
          CompressionPeriod_s_ (x.CompressionPeriod_s_, f, this),
          CurrentCardiacCycleTime_s_ (x.CurrentCardiacCycleTime_s_, f, this),
          CardiacCycleDiastolicVolume_mL_ (x.CardiacCycleDiastolicVolume_mL_, f, this),
          CardiacCycleAortaPressureLow_mmHg_ (x.CardiacCycleAortaPressureLow_mmHg_, f, this),
          CardiacCycleAortaPressureHigh_mmHg_ (x.CardiacCycleAortaPressureHigh_mmHg_, f, this),
          CardiacCyclePulmonaryArteryPressureLow_mmHg_ (x.CardiacCyclePulmonaryArteryPressureLow_mmHg_, f, this),
          CardiacCyclePulmonaryArteryPressureHigh_mmHg_ (x.CardiacCyclePulmonaryArteryPressureHigh_mmHg_, f, this),
          LastCardiacCycleMeanArterialCO2PartialPressure_mmHg_ (x.LastCardiacCycleMeanArterialCO2PartialPressure_mmHg_, f, this),
          CardiacCycleStrokeVolume_mL_ (x.CardiacCycleStrokeVolume_mL_, f, this),
          CardiacCycleArterialPressure_mmHg_ (x.CardiacCycleArterialPressure_mmHg_, f, this),
          CardiacCycleArterialCO2PartialPressure_mmHg_ (x.CardiacCycleArterialCO2PartialPressure_mmHg_, f, this),
          CardiacCyclePulmonaryCapillariesWedgePressure_mmHg_ (x.CardiacCyclePulmonaryCapillariesWedgePressure_mmHg_, f, this),
          CardiacCyclePulmonaryCapillariesFlow_mL_Per_s_ (x.CardiacCyclePulmonaryCapillariesFlow_mL_Per_s_, f, this),
          CardiacCyclePulmonaryShuntFlow_mL_Per_s_ (x.CardiacCyclePulmonaryShuntFlow_mL_Per_s_, f, this),
          CardiacCyclePulmonaryArteryPressure_mmHg_ (x.CardiacCyclePulmonaryArteryPressure_mmHg_, f, this),
          CardiacCycleCentralVenousPressure_mmHg_ (x.CardiacCycleCentralVenousPressure_mmHg_, f, this),
          CardiacCycleSkinFlow_mL_Per_s_ (x.CardiacCycleSkinFlow_mL_Per_s_, f, this)
        {
        }

        BioGearsCardiovascularSystemData::
        BioGearsCardiovascularSystemData (const ::xercesc::DOMElement& e,
                                          ::xml_schema::flags f,
                                          ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::CardiovascularSystemData (e, f | ::xml_schema::flags::base, c),
          StartSystole_ (this),
          HeartFlowDetected_ (this),
          EnterCardiacArrest_ (this),
          CardiacCyclePeriod_s_ (this),
          CurrentCardiacCycleDuration_s_ (this),
          LeftHeartElastanceModifier_ (this),
          LeftHeartElastance_mmHg_Per_mL_ (this),
          LeftHeartElastanceMax_mmHg_Per_mL_ (this),
          LeftHeartElastanceMin_mmHg_Per_mL_ (this),
          RightHeartElastance_mmHg_Per_mL_ (this),
          RightHeartElastanceMax_mmHg_Per_mL_ (this),
          RightHeartElastanceMin_mmHg_Per_mL_ (this),
          CompressionTime_s_ (this),
          CompressionRatio_ (this),
          CompressionPeriod_s_ (this),
          CurrentCardiacCycleTime_s_ (this),
          CardiacCycleDiastolicVolume_mL_ (this),
          CardiacCycleAortaPressureLow_mmHg_ (this),
          CardiacCycleAortaPressureHigh_mmHg_ (this),
          CardiacCyclePulmonaryArteryPressureLow_mmHg_ (this),
          CardiacCyclePulmonaryArteryPressureHigh_mmHg_ (this),
          LastCardiacCycleMeanArterialCO2PartialPressure_mmHg_ (this),
          CardiacCycleStrokeVolume_mL_ (this),
          CardiacCycleArterialPressure_mmHg_ (this),
          CardiacCycleArterialCO2PartialPressure_mmHg_ (this),
          CardiacCyclePulmonaryCapillariesWedgePressure_mmHg_ (this),
          CardiacCyclePulmonaryCapillariesFlow_mL_Per_s_ (this),
          CardiacCyclePulmonaryShuntFlow_mL_Per_s_ (this),
          CardiacCyclePulmonaryArteryPressure_mmHg_ (this),
          CardiacCycleCentralVenousPressure_mmHg_ (this),
          CardiacCycleSkinFlow_mL_Per_s_ (this)
        {
          if ((f & ::xml_schema::flags::base) == 0)
          {
            ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
            this->parse (p, f);
          }
        }

        void BioGearsCardiovascularSystemData::
        parse (::xsd::cxx::xml::dom::parser< char >& p,
               ::xml_schema::flags f)
        {
          this->::mil::tatrc::physiology::datamodel::CardiovascularSystemData::parse (p, f);

          for (; p.more_content (); p.next_content (false))
          {
            const ::xercesc::DOMElement& i (p.cur_element ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            // StartSystole
            //
            if (n.name () == "StartSystole" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              if (!StartSystole_.present ())
              {
                this->StartSystole_.set (StartSystole_traits::create (i, f, this));
                continue;
              }
            }

            // HeartFlowDetected
            //
            if (n.name () == "HeartFlowDetected" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              if (!HeartFlowDetected_.present ())
              {
                this->HeartFlowDetected_.set (HeartFlowDetected_traits::create (i, f, this));
                continue;
              }
            }

            // EnterCardiacArrest
            //
            if (n.name () == "EnterCardiacArrest" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              if (!EnterCardiacArrest_.present ())
              {
                this->EnterCardiacArrest_.set (EnterCardiacArrest_traits::create (i, f, this));
                continue;
              }
            }

            // CardiacCyclePeriod_s
            //
            if (n.name () == "CardiacCyclePeriod_s" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              if (!CardiacCyclePeriod_s_.present ())
              {
                this->CardiacCyclePeriod_s_.set (CardiacCyclePeriod_s_traits::create (i, f, this));
                continue;
              }
            }

            // CurrentCardiacCycleDuration_s
            //
            if (n.name () == "CurrentCardiacCycleDuration_s" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              if (!CurrentCardiacCycleDuration_s_.present ())
              {
                this->CurrentCardiacCycleDuration_s_.set (CurrentCardiacCycleDuration_s_traits::create (i, f, this));
                continue;
              }
            }

            // LeftHeartElastanceModifier
            //
            if (n.name () == "LeftHeartElastanceModifier" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              if (!LeftHeartElastanceModifier_.present ())
              {
                this->LeftHeartElastanceModifier_.set (LeftHeartElastanceModifier_traits::create (i, f, this));
                continue;
              }
            }

            // LeftHeartElastance_mmHg_Per_mL
            //
            if (n.name () == "LeftHeartElastance_mmHg_Per_mL" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              if (!LeftHeartElastance_mmHg_Per_mL_.present ())
              {
                this->LeftHeartElastance_mmHg_Per_mL_.set (LeftHeartElastance_mmHg_Per_mL_traits::create (i, f, this));
                continue;
              }
            }

            // LeftHeartElastanceMax_mmHg_Per_mL
            //
            if (n.name () == "LeftHeartElastanceMax_mmHg_Per_mL" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              if (!LeftHeartElastanceMax_mmHg_Per_mL_.present ())
              {
                this->LeftHeartElastanceMax_mmHg_Per_mL_.set (LeftHeartElastanceMax_mmHg_Per_mL_traits::create (i, f, this));
                continue;
              }
            }

            // LeftHeartElastanceMin_mmHg_Per_mL
            //
            if (n.name () == "LeftHeartElastanceMin_mmHg_Per_mL" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              if (!LeftHeartElastanceMin_mmHg_Per_mL_.present ())
              {
                this->LeftHeartElastanceMin_mmHg_Per_mL_.set (LeftHeartElastanceMin_mmHg_Per_mL_traits::create (i, f, this));
                continue;
              }
            }

            // RightHeartElastance_mmHg_Per_mL
            //
            if (n.name () == "RightHeartElastance_mmHg_Per_mL" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              if (!RightHeartElastance_mmHg_Per_mL_.present ())
              {
                this->RightHeartElastance_mmHg_Per_mL_.set (RightHeartElastance_mmHg_Per_mL_traits::create (i, f, this));
                continue;
              }
            }

            // RightHeartElastanceMax_mmHg_Per_mL
            //
            if (n.name () == "RightHeartElastanceMax_mmHg_Per_mL" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              if (!RightHeartElastanceMax_mmHg_Per_mL_.present ())
              {
                this->RightHeartElastanceMax_mmHg_Per_mL_.set (RightHeartElastanceMax_mmHg_Per_mL_traits::create (i, f, this));
                continue;
              }
            }

            // RightHeartElastanceMin_mmHg_Per_mL
            //
            if (n.name () == "RightHeartElastanceMin_mmHg_Per_mL" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              if (!RightHeartElastanceMin_mmHg_Per_mL_.present ())
              {
                this->RightHeartElastanceMin_mmHg_Per_mL_.set (RightHeartElastanceMin_mmHg_Per_mL_traits::create (i, f, this));
                continue;
              }
            }

            // CompressionTime_s
            //
            if (n.name () == "CompressionTime_s" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              if (!CompressionTime_s_.present ())
              {
                this->CompressionTime_s_.set (CompressionTime_s_traits::create (i, f, this));
                continue;
              }
            }

            // CompressionRatio
            //
            if (n.name () == "CompressionRatio" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              if (!CompressionRatio_.present ())
              {
                this->CompressionRatio_.set (CompressionRatio_traits::create (i, f, this));
                continue;
              }
            }

            // CompressionPeriod_s
            //
            if (n.name () == "CompressionPeriod_s" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              if (!CompressionPeriod_s_.present ())
              {
                this->CompressionPeriod_s_.set (CompressionPeriod_s_traits::create (i, f, this));
                continue;
              }
            }

            // CurrentCardiacCycleTime_s
            //
            if (n.name () == "CurrentCardiacCycleTime_s" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              if (!CurrentCardiacCycleTime_s_.present ())
              {
                this->CurrentCardiacCycleTime_s_.set (CurrentCardiacCycleTime_s_traits::create (i, f, this));
                continue;
              }
            }

            // CardiacCycleDiastolicVolume_mL
            //
            if (n.name () == "CardiacCycleDiastolicVolume_mL" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              if (!CardiacCycleDiastolicVolume_mL_.present ())
              {
                this->CardiacCycleDiastolicVolume_mL_.set (CardiacCycleDiastolicVolume_mL_traits::create (i, f, this));
                continue;
              }
            }

            // CardiacCycleAortaPressureLow_mmHg
            //
            if (n.name () == "CardiacCycleAortaPressureLow_mmHg" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              if (!CardiacCycleAortaPressureLow_mmHg_.present ())
              {
                this->CardiacCycleAortaPressureLow_mmHg_.set (CardiacCycleAortaPressureLow_mmHg_traits::create (i, f, this));
                continue;
              }
            }

            // CardiacCycleAortaPressureHigh_mmHg
            //
            if (n.name () == "CardiacCycleAortaPressureHigh_mmHg" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              if (!CardiacCycleAortaPressureHigh_mmHg_.present ())
              {
                this->CardiacCycleAortaPressureHigh_mmHg_.set (CardiacCycleAortaPressureHigh_mmHg_traits::create (i, f, this));
                continue;
              }
            }

            // CardiacCyclePulmonaryArteryPressureLow_mmHg
            //
            if (n.name () == "CardiacCyclePulmonaryArteryPressureLow_mmHg" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              if (!CardiacCyclePulmonaryArteryPressureLow_mmHg_.present ())
              {
                this->CardiacCyclePulmonaryArteryPressureLow_mmHg_.set (CardiacCyclePulmonaryArteryPressureLow_mmHg_traits::create (i, f, this));
                continue;
              }
            }

            // CardiacCyclePulmonaryArteryPressureHigh_mmHg
            //
            if (n.name () == "CardiacCyclePulmonaryArteryPressureHigh_mmHg" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              if (!CardiacCyclePulmonaryArteryPressureHigh_mmHg_.present ())
              {
                this->CardiacCyclePulmonaryArteryPressureHigh_mmHg_.set (CardiacCyclePulmonaryArteryPressureHigh_mmHg_traits::create (i, f, this));
                continue;
              }
            }

            // LastCardiacCycleMeanArterialCO2PartialPressure_mmHg
            //
            if (n.name () == "LastCardiacCycleMeanArterialCO2PartialPressure_mmHg" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              if (!LastCardiacCycleMeanArterialCO2PartialPressure_mmHg_.present ())
              {
                this->LastCardiacCycleMeanArterialCO2PartialPressure_mmHg_.set (LastCardiacCycleMeanArterialCO2PartialPressure_mmHg_traits::create (i, f, this));
                continue;
              }
            }

            // CardiacCycleStrokeVolume_mL
            //
            if (n.name () == "CardiacCycleStrokeVolume_mL" && n.namespace_ () == "uri:/mil/tatrc/physiology/datamodel")
            {
              if (!CardiacCycleStrokeVolume_mL_.present ())
              {
                this->CardiacCycleStrokeVolume_mL_.set (CardiacCycleStrokeVolume_mL_traits::create (i, f, this));
                continue;
              }
            }

            // CardiacCycleArterialPressure_mmHg
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "CardiacCycleArterialPressure_mmHg",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< CardiacCycleArterialPressure_mmHg_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!CardiacCycleArterialPressure_mmHg_.present ())
                {
                  ::std::unique_ptr< CardiacCycleArterialPressure_mmHg_type > r (
                    dynamic_cast< CardiacCycleArterialPressure_mmHg_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->CardiacCycleArterialPressure_mmHg_.set (::std::move (r));
                  continue;
                }
              }
            }

            // CardiacCycleArterialCO2PartialPressure_mmHg
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "CardiacCycleArterialCO2PartialPressure_mmHg",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< CardiacCycleArterialCO2PartialPressure_mmHg_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!CardiacCycleArterialCO2PartialPressure_mmHg_.present ())
                {
                  ::std::unique_ptr< CardiacCycleArterialCO2PartialPressure_mmHg_type > r (
                    dynamic_cast< CardiacCycleArterialCO2PartialPressure_mmHg_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->CardiacCycleArterialCO2PartialPressure_mmHg_.set (::std::move (r));
                  continue;
                }
              }
            }

            // CardiacCyclePulmonaryCapillariesWedgePressure_mmHg
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "CardiacCyclePulmonaryCapillariesWedgePressure_mmHg",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< CardiacCyclePulmonaryCapillariesWedgePressure_mmHg_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!CardiacCyclePulmonaryCapillariesWedgePressure_mmHg_.present ())
                {
                  ::std::unique_ptr< CardiacCyclePulmonaryCapillariesWedgePressure_mmHg_type > r (
                    dynamic_cast< CardiacCyclePulmonaryCapillariesWedgePressure_mmHg_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->CardiacCyclePulmonaryCapillariesWedgePressure_mmHg_.set (::std::move (r));
                  continue;
                }
              }
            }

            // CardiacCyclePulmonaryCapillariesFlow_mL_Per_s
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "CardiacCyclePulmonaryCapillariesFlow_mL_Per_s",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< CardiacCyclePulmonaryCapillariesFlow_mL_Per_s_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!CardiacCyclePulmonaryCapillariesFlow_mL_Per_s_.present ())
                {
                  ::std::unique_ptr< CardiacCyclePulmonaryCapillariesFlow_mL_Per_s_type > r (
                    dynamic_cast< CardiacCyclePulmonaryCapillariesFlow_mL_Per_s_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->CardiacCyclePulmonaryCapillariesFlow_mL_Per_s_.set (::std::move (r));
                  continue;
                }
              }
            }

            // CardiacCyclePulmonaryShuntFlow_mL_Per_s
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "CardiacCyclePulmonaryShuntFlow_mL_Per_s",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< CardiacCyclePulmonaryShuntFlow_mL_Per_s_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!CardiacCyclePulmonaryShuntFlow_mL_Per_s_.present ())
                {
                  ::std::unique_ptr< CardiacCyclePulmonaryShuntFlow_mL_Per_s_type > r (
                    dynamic_cast< CardiacCyclePulmonaryShuntFlow_mL_Per_s_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->CardiacCyclePulmonaryShuntFlow_mL_Per_s_.set (::std::move (r));
                  continue;
                }
              }
            }

            // CardiacCyclePulmonaryArteryPressure_mmHg
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "CardiacCyclePulmonaryArteryPressure_mmHg",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< CardiacCyclePulmonaryArteryPressure_mmHg_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!CardiacCyclePulmonaryArteryPressure_mmHg_.present ())
                {
                  ::std::unique_ptr< CardiacCyclePulmonaryArteryPressure_mmHg_type > r (
                    dynamic_cast< CardiacCyclePulmonaryArteryPressure_mmHg_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->CardiacCyclePulmonaryArteryPressure_mmHg_.set (::std::move (r));
                  continue;
                }
              }
            }

            // CardiacCycleCentralVenousPressure_mmHg
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "CardiacCycleCentralVenousPressure_mmHg",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< CardiacCycleCentralVenousPressure_mmHg_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!CardiacCycleCentralVenousPressure_mmHg_.present ())
                {
                  ::std::unique_ptr< CardiacCycleCentralVenousPressure_mmHg_type > r (
                    dynamic_cast< CardiacCycleCentralVenousPressure_mmHg_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->CardiacCycleCentralVenousPressure_mmHg_.set (::std::move (r));
                  continue;
                }
              }
            }

            // CardiacCycleSkinFlow_mL_Per_s
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "CardiacCycleSkinFlow_mL_Per_s",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< CardiacCycleSkinFlow_mL_Per_s_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!CardiacCycleSkinFlow_mL_Per_s_.present ())
                {
                  ::std::unique_ptr< CardiacCycleSkinFlow_mL_Per_s_type > r (
                    dynamic_cast< CardiacCycleSkinFlow_mL_Per_s_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->CardiacCycleSkinFlow_mL_Per_s_.set (::std::move (r));
                  continue;
                }
              }
            }

            break;
          }

          if (!StartSystole_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "StartSystole",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!HeartFlowDetected_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "HeartFlowDetected",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!EnterCardiacArrest_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "EnterCardiacArrest",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!CardiacCyclePeriod_s_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "CardiacCyclePeriod_s",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!CurrentCardiacCycleDuration_s_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "CurrentCardiacCycleDuration_s",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!LeftHeartElastanceModifier_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "LeftHeartElastanceModifier",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!LeftHeartElastance_mmHg_Per_mL_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "LeftHeartElastance_mmHg_Per_mL",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!LeftHeartElastanceMax_mmHg_Per_mL_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "LeftHeartElastanceMax_mmHg_Per_mL",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!LeftHeartElastanceMin_mmHg_Per_mL_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "LeftHeartElastanceMin_mmHg_Per_mL",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!RightHeartElastance_mmHg_Per_mL_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "RightHeartElastance_mmHg_Per_mL",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!RightHeartElastanceMax_mmHg_Per_mL_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "RightHeartElastanceMax_mmHg_Per_mL",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!RightHeartElastanceMin_mmHg_Per_mL_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "RightHeartElastanceMin_mmHg_Per_mL",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!CompressionTime_s_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "CompressionTime_s",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!CompressionRatio_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "CompressionRatio",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!CompressionPeriod_s_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "CompressionPeriod_s",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!CurrentCardiacCycleTime_s_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "CurrentCardiacCycleTime_s",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!CardiacCycleDiastolicVolume_mL_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "CardiacCycleDiastolicVolume_mL",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!CardiacCycleAortaPressureLow_mmHg_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "CardiacCycleAortaPressureLow_mmHg",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!CardiacCycleAortaPressureHigh_mmHg_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "CardiacCycleAortaPressureHigh_mmHg",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!CardiacCyclePulmonaryArteryPressureLow_mmHg_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "CardiacCyclePulmonaryArteryPressureLow_mmHg",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!CardiacCyclePulmonaryArteryPressureHigh_mmHg_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "CardiacCyclePulmonaryArteryPressureHigh_mmHg",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!LastCardiacCycleMeanArterialCO2PartialPressure_mmHg_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "LastCardiacCycleMeanArterialCO2PartialPressure_mmHg",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!CardiacCycleStrokeVolume_mL_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "CardiacCycleStrokeVolume_mL",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!CardiacCycleArterialPressure_mmHg_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "CardiacCycleArterialPressure_mmHg",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!CardiacCycleArterialCO2PartialPressure_mmHg_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "CardiacCycleArterialCO2PartialPressure_mmHg",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!CardiacCyclePulmonaryCapillariesWedgePressure_mmHg_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "CardiacCyclePulmonaryCapillariesWedgePressure_mmHg",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!CardiacCyclePulmonaryCapillariesFlow_mL_Per_s_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "CardiacCyclePulmonaryCapillariesFlow_mL_Per_s",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!CardiacCyclePulmonaryShuntFlow_mL_Per_s_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "CardiacCyclePulmonaryShuntFlow_mL_Per_s",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!CardiacCyclePulmonaryArteryPressure_mmHg_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "CardiacCyclePulmonaryArteryPressure_mmHg",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!CardiacCycleCentralVenousPressure_mmHg_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "CardiacCycleCentralVenousPressure_mmHg",
              "uri:/mil/tatrc/physiology/datamodel");
          }

          if (!CardiacCycleSkinFlow_mL_Per_s_.present ())
          {
            throw ::xsd::cxx::tree::expected_element< char > (
              "CardiacCycleSkinFlow_mL_Per_s",
              "uri:/mil/tatrc/physiology/datamodel");
          }
        }

        BioGearsCardiovascularSystemData* BioGearsCardiovascularSystemData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class BioGearsCardiovascularSystemData (*this, f, c);
        }

        BioGearsCardiovascularSystemData& BioGearsCardiovascularSystemData::
        operator= (const BioGearsCardiovascularSystemData& x)
        {
          if (this != &x)
          {
            static_cast< ::mil::tatrc::physiology::datamodel::CardiovascularSystemData& > (*this) = x;
            this->StartSystole_ = x.StartSystole_;
            this->HeartFlowDetected_ = x.HeartFlowDetected_;
            this->EnterCardiacArrest_ = x.EnterCardiacArrest_;
            this->CardiacCyclePeriod_s_ = x.CardiacCyclePeriod_s_;
            this->CurrentCardiacCycleDuration_s_ = x.CurrentCardiacCycleDuration_s_;
            this->LeftHeartElastanceModifier_ = x.LeftHeartElastanceModifier_;
            this->LeftHeartElastance_mmHg_Per_mL_ = x.LeftHeartElastance_mmHg_Per_mL_;
            this->LeftHeartElastanceMax_mmHg_Per_mL_ = x.LeftHeartElastanceMax_mmHg_Per_mL_;
            this->LeftHeartElastanceMin_mmHg_Per_mL_ = x.LeftHeartElastanceMin_mmHg_Per_mL_;
            this->RightHeartElastance_mmHg_Per_mL_ = x.RightHeartElastance_mmHg_Per_mL_;
            this->RightHeartElastanceMax_mmHg_Per_mL_ = x.RightHeartElastanceMax_mmHg_Per_mL_;
            this->RightHeartElastanceMin_mmHg_Per_mL_ = x.RightHeartElastanceMin_mmHg_Per_mL_;
            this->CompressionTime_s_ = x.CompressionTime_s_;
            this->CompressionRatio_ = x.CompressionRatio_;
            this->CompressionPeriod_s_ = x.CompressionPeriod_s_;
            this->CurrentCardiacCycleTime_s_ = x.CurrentCardiacCycleTime_s_;
            this->CardiacCycleDiastolicVolume_mL_ = x.CardiacCycleDiastolicVolume_mL_;
            this->CardiacCycleAortaPressureLow_mmHg_ = x.CardiacCycleAortaPressureLow_mmHg_;
            this->CardiacCycleAortaPressureHigh_mmHg_ = x.CardiacCycleAortaPressureHigh_mmHg_;
            this->CardiacCyclePulmonaryArteryPressureLow_mmHg_ = x.CardiacCyclePulmonaryArteryPressureLow_mmHg_;
            this->CardiacCyclePulmonaryArteryPressureHigh_mmHg_ = x.CardiacCyclePulmonaryArteryPressureHigh_mmHg_;
            this->LastCardiacCycleMeanArterialCO2PartialPressure_mmHg_ = x.LastCardiacCycleMeanArterialCO2PartialPressure_mmHg_;
            this->CardiacCycleStrokeVolume_mL_ = x.CardiacCycleStrokeVolume_mL_;
            this->CardiacCycleArterialPressure_mmHg_ = x.CardiacCycleArterialPressure_mmHg_;
            this->CardiacCycleArterialCO2PartialPressure_mmHg_ = x.CardiacCycleArterialCO2PartialPressure_mmHg_;
            this->CardiacCyclePulmonaryCapillariesWedgePressure_mmHg_ = x.CardiacCyclePulmonaryCapillariesWedgePressure_mmHg_;
            this->CardiacCyclePulmonaryCapillariesFlow_mL_Per_s_ = x.CardiacCyclePulmonaryCapillariesFlow_mL_Per_s_;
            this->CardiacCyclePulmonaryShuntFlow_mL_Per_s_ = x.CardiacCyclePulmonaryShuntFlow_mL_Per_s_;
            this->CardiacCyclePulmonaryArteryPressure_mmHg_ = x.CardiacCyclePulmonaryArteryPressure_mmHg_;
            this->CardiacCycleCentralVenousPressure_mmHg_ = x.CardiacCycleCentralVenousPressure_mmHg_;
            this->CardiacCycleSkinFlow_mL_Per_s_ = x.CardiacCycleSkinFlow_mL_Per_s_;
          }

          return *this;
        }

        BioGearsCardiovascularSystemData::
        ~BioGearsCardiovascularSystemData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, BioGearsCardiovascularSystemData >
        _xsd_BioGearsCardiovascularSystemData_type_factory_init (
          "BioGearsCardiovascularSystemData",
          "uri:/mil/tatrc/physiology/datamodel");
      }
    }
  }
}

#include <ostream>

#include <xsd/cxx/tree/std-ostream-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::std_ostream_plate< 0, char >
  std_ostream_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        ::std::ostream&
        operator<< (::std::ostream& o, const BioGearsCardiovascularSystemData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::CardiovascularSystemData& > (i);

          o << ::std::endl << "StartSystole: " << i.StartSystole ();
          o << ::std::endl << "HeartFlowDetected: " << i.HeartFlowDetected ();
          o << ::std::endl << "EnterCardiacArrest: " << i.EnterCardiacArrest ();
          o << ::std::endl << "CardiacCyclePeriod_s: " << i.CardiacCyclePeriod_s ();
          o << ::std::endl << "CurrentCardiacCycleDuration_s: " << i.CurrentCardiacCycleDuration_s ();
          o << ::std::endl << "LeftHeartElastanceModifier: " << i.LeftHeartElastanceModifier ();
          o << ::std::endl << "LeftHeartElastance_mmHg_Per_mL: " << i.LeftHeartElastance_mmHg_Per_mL ();
          o << ::std::endl << "LeftHeartElastanceMax_mmHg_Per_mL: " << i.LeftHeartElastanceMax_mmHg_Per_mL ();
          o << ::std::endl << "LeftHeartElastanceMin_mmHg_Per_mL: " << i.LeftHeartElastanceMin_mmHg_Per_mL ();
          o << ::std::endl << "RightHeartElastance_mmHg_Per_mL: " << i.RightHeartElastance_mmHg_Per_mL ();
          o << ::std::endl << "RightHeartElastanceMax_mmHg_Per_mL: " << i.RightHeartElastanceMax_mmHg_Per_mL ();
          o << ::std::endl << "RightHeartElastanceMin_mmHg_Per_mL: " << i.RightHeartElastanceMin_mmHg_Per_mL ();
          o << ::std::endl << "CompressionTime_s: " << i.CompressionTime_s ();
          o << ::std::endl << "CompressionRatio: " << i.CompressionRatio ();
          o << ::std::endl << "CompressionPeriod_s: " << i.CompressionPeriod_s ();
          o << ::std::endl << "CurrentCardiacCycleTime_s: " << i.CurrentCardiacCycleTime_s ();
          o << ::std::endl << "CardiacCycleDiastolicVolume_mL: " << i.CardiacCycleDiastolicVolume_mL ();
          o << ::std::endl << "CardiacCycleAortaPressureLow_mmHg: " << i.CardiacCycleAortaPressureLow_mmHg ();
          o << ::std::endl << "CardiacCycleAortaPressureHigh_mmHg: " << i.CardiacCycleAortaPressureHigh_mmHg ();
          o << ::std::endl << "CardiacCyclePulmonaryArteryPressureLow_mmHg: " << i.CardiacCyclePulmonaryArteryPressureLow_mmHg ();
          o << ::std::endl << "CardiacCyclePulmonaryArteryPressureHigh_mmHg: " << i.CardiacCyclePulmonaryArteryPressureHigh_mmHg ();
          o << ::std::endl << "LastCardiacCycleMeanArterialCO2PartialPressure_mmHg: " << i.LastCardiacCycleMeanArterialCO2PartialPressure_mmHg ();
          o << ::std::endl << "CardiacCycleStrokeVolume_mL: " << i.CardiacCycleStrokeVolume_mL ();
          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "CardiacCycleArterialPressure_mmHg: ";
            om.insert (o, i.CardiacCycleArterialPressure_mmHg ());
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "CardiacCycleArterialCO2PartialPressure_mmHg: ";
            om.insert (o, i.CardiacCycleArterialCO2PartialPressure_mmHg ());
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "CardiacCyclePulmonaryCapillariesWedgePressure_mmHg: ";
            om.insert (o, i.CardiacCyclePulmonaryCapillariesWedgePressure_mmHg ());
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "CardiacCyclePulmonaryCapillariesFlow_mL_Per_s: ";
            om.insert (o, i.CardiacCyclePulmonaryCapillariesFlow_mL_Per_s ());
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "CardiacCyclePulmonaryShuntFlow_mL_Per_s: ";
            om.insert (o, i.CardiacCyclePulmonaryShuntFlow_mL_Per_s ());
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "CardiacCyclePulmonaryArteryPressure_mmHg: ";
            om.insert (o, i.CardiacCyclePulmonaryArteryPressure_mmHg ());
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "CardiacCycleCentralVenousPressure_mmHg: ";
            om.insert (o, i.CardiacCycleCentralVenousPressure_mmHg ());
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            o << ::std::endl << "CardiacCycleSkinFlow_mL_Per_s: ";
            om.insert (o, i.CardiacCycleSkinFlow_mL_Per_s ());
          }

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, BioGearsCardiovascularSystemData >
        _xsd_BioGearsCardiovascularSystemData_std_ostream_init;
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
      }
    }
  }
}

#include <ostream>
#include <xsd/cxx/tree/error-handler.hxx>
#include <xsd/cxx/xml/dom/serialization-source.hxx>

#include <xsd/cxx/tree/type-serializer-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_serializer_plate< 0, char >
  type_serializer_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        void
        operator<< (::xercesc::DOMElement& e, const BioGearsCardiovascularSystemData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::CardiovascularSystemData& > (i);

          // StartSystole
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "StartSystole",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << i.StartSystole ();
          }

          // HeartFlowDetected
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "HeartFlowDetected",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << i.HeartFlowDetected ();
          }

          // EnterCardiacArrest
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "EnterCardiacArrest",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << i.EnterCardiacArrest ();
          }

          // CardiacCyclePeriod_s
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "CardiacCyclePeriod_s",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << ::xml_schema::as_double(i.CardiacCyclePeriod_s ());
          }

          // CurrentCardiacCycleDuration_s
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "CurrentCardiacCycleDuration_s",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << ::xml_schema::as_double(i.CurrentCardiacCycleDuration_s ());
          }

          // LeftHeartElastanceModifier
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "LeftHeartElastanceModifier",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << ::xml_schema::as_double(i.LeftHeartElastanceModifier ());
          }

          // LeftHeartElastance_mmHg_Per_mL
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "LeftHeartElastance_mmHg_Per_mL",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << ::xml_schema::as_double(i.LeftHeartElastance_mmHg_Per_mL ());
          }

          // LeftHeartElastanceMax_mmHg_Per_mL
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "LeftHeartElastanceMax_mmHg_Per_mL",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << ::xml_schema::as_double(i.LeftHeartElastanceMax_mmHg_Per_mL ());
          }

          // LeftHeartElastanceMin_mmHg_Per_mL
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "LeftHeartElastanceMin_mmHg_Per_mL",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << ::xml_schema::as_double(i.LeftHeartElastanceMin_mmHg_Per_mL ());
          }

          // RightHeartElastance_mmHg_Per_mL
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "RightHeartElastance_mmHg_Per_mL",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << ::xml_schema::as_double(i.RightHeartElastance_mmHg_Per_mL ());
          }

          // RightHeartElastanceMax_mmHg_Per_mL
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "RightHeartElastanceMax_mmHg_Per_mL",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << ::xml_schema::as_double(i.RightHeartElastanceMax_mmHg_Per_mL ());
          }

          // RightHeartElastanceMin_mmHg_Per_mL
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "RightHeartElastanceMin_mmHg_Per_mL",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << ::xml_schema::as_double(i.RightHeartElastanceMin_mmHg_Per_mL ());
          }

          // CompressionTime_s
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "CompressionTime_s",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << ::xml_schema::as_double(i.CompressionTime_s ());
          }

          // CompressionRatio
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "CompressionRatio",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << ::xml_schema::as_double(i.CompressionRatio ());
          }

          // CompressionPeriod_s
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "CompressionPeriod_s",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << ::xml_schema::as_double(i.CompressionPeriod_s ());
          }

          // CurrentCardiacCycleTime_s
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "CurrentCardiacCycleTime_s",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << ::xml_schema::as_double(i.CurrentCardiacCycleTime_s ());
          }

          // CardiacCycleDiastolicVolume_mL
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "CardiacCycleDiastolicVolume_mL",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << ::xml_schema::as_double(i.CardiacCycleDiastolicVolume_mL ());
          }

          // CardiacCycleAortaPressureLow_mmHg
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "CardiacCycleAortaPressureLow_mmHg",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << ::xml_schema::as_double(i.CardiacCycleAortaPressureLow_mmHg ());
          }

          // CardiacCycleAortaPressureHigh_mmHg
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "CardiacCycleAortaPressureHigh_mmHg",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << ::xml_schema::as_double(i.CardiacCycleAortaPressureHigh_mmHg ());
          }

          // CardiacCyclePulmonaryArteryPressureLow_mmHg
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "CardiacCyclePulmonaryArteryPressureLow_mmHg",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << ::xml_schema::as_double(i.CardiacCyclePulmonaryArteryPressureLow_mmHg ());
          }

          // CardiacCyclePulmonaryArteryPressureHigh_mmHg
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "CardiacCyclePulmonaryArteryPressureHigh_mmHg",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << ::xml_schema::as_double(i.CardiacCyclePulmonaryArteryPressureHigh_mmHg ());
          }

          // LastCardiacCycleMeanArterialCO2PartialPressure_mmHg
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "LastCardiacCycleMeanArterialCO2PartialPressure_mmHg",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << ::xml_schema::as_double(i.LastCardiacCycleMeanArterialCO2PartialPressure_mmHg ());
          }

          // CardiacCycleStrokeVolume_mL
          //
          {
            ::xercesc::DOMElement& s (
              ::xsd::cxx::xml::dom::create_element (
                "CardiacCycleStrokeVolume_mL",
                "uri:/mil/tatrc/physiology/datamodel",
                e));

            s << ::xml_schema::as_double(i.CardiacCycleStrokeVolume_mL ());
          }

          // CardiacCycleArterialPressure_mmHg
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const BioGearsCardiovascularSystemData::CardiacCycleArterialPressure_mmHg_type& x (i.CardiacCycleArterialPressure_mmHg ());
            if (typeid (BioGearsCardiovascularSystemData::CardiacCycleArterialPressure_mmHg_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "CardiacCycleArterialPressure_mmHg",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "CardiacCycleArterialPressure_mmHg",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }

          // CardiacCycleArterialCO2PartialPressure_mmHg
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const BioGearsCardiovascularSystemData::CardiacCycleArterialCO2PartialPressure_mmHg_type& x (i.CardiacCycleArterialCO2PartialPressure_mmHg ());
            if (typeid (BioGearsCardiovascularSystemData::CardiacCycleArterialCO2PartialPressure_mmHg_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "CardiacCycleArterialCO2PartialPressure_mmHg",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "CardiacCycleArterialCO2PartialPressure_mmHg",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }

          // CardiacCyclePulmonaryCapillariesWedgePressure_mmHg
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const BioGearsCardiovascularSystemData::CardiacCyclePulmonaryCapillariesWedgePressure_mmHg_type& x (i.CardiacCyclePulmonaryCapillariesWedgePressure_mmHg ());
            if (typeid (BioGearsCardiovascularSystemData::CardiacCyclePulmonaryCapillariesWedgePressure_mmHg_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "CardiacCyclePulmonaryCapillariesWedgePressure_mmHg",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "CardiacCyclePulmonaryCapillariesWedgePressure_mmHg",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }

          // CardiacCyclePulmonaryCapillariesFlow_mL_Per_s
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const BioGearsCardiovascularSystemData::CardiacCyclePulmonaryCapillariesFlow_mL_Per_s_type& x (i.CardiacCyclePulmonaryCapillariesFlow_mL_Per_s ());
            if (typeid (BioGearsCardiovascularSystemData::CardiacCyclePulmonaryCapillariesFlow_mL_Per_s_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "CardiacCyclePulmonaryCapillariesFlow_mL_Per_s",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "CardiacCyclePulmonaryCapillariesFlow_mL_Per_s",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }

          // CardiacCyclePulmonaryShuntFlow_mL_Per_s
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const BioGearsCardiovascularSystemData::CardiacCyclePulmonaryShuntFlow_mL_Per_s_type& x (i.CardiacCyclePulmonaryShuntFlow_mL_Per_s ());
            if (typeid (BioGearsCardiovascularSystemData::CardiacCyclePulmonaryShuntFlow_mL_Per_s_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "CardiacCyclePulmonaryShuntFlow_mL_Per_s",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "CardiacCyclePulmonaryShuntFlow_mL_Per_s",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }

          // CardiacCyclePulmonaryArteryPressure_mmHg
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const BioGearsCardiovascularSystemData::CardiacCyclePulmonaryArteryPressure_mmHg_type& x (i.CardiacCyclePulmonaryArteryPressure_mmHg ());
            if (typeid (BioGearsCardiovascularSystemData::CardiacCyclePulmonaryArteryPressure_mmHg_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "CardiacCyclePulmonaryArteryPressure_mmHg",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "CardiacCyclePulmonaryArteryPressure_mmHg",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }

          // CardiacCycleCentralVenousPressure_mmHg
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const BioGearsCardiovascularSystemData::CardiacCycleCentralVenousPressure_mmHg_type& x (i.CardiacCycleCentralVenousPressure_mmHg ());
            if (typeid (BioGearsCardiovascularSystemData::CardiacCycleCentralVenousPressure_mmHg_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "CardiacCycleCentralVenousPressure_mmHg",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "CardiacCycleCentralVenousPressure_mmHg",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }

          // CardiacCycleSkinFlow_mL_Per_s
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            const BioGearsCardiovascularSystemData::CardiacCycleSkinFlow_mL_Per_s_type& x (i.CardiacCycleSkinFlow_mL_Per_s ());
            if (typeid (BioGearsCardiovascularSystemData::CardiacCycleSkinFlow_mL_Per_s_type) == typeid (x))
            {
              ::xercesc::DOMElement& s (
                ::xsd::cxx::xml::dom::create_element (
                  "CardiacCycleSkinFlow_mL_Per_s",
                  "uri:/mil/tatrc/physiology/datamodel",
                  e));

              s << x;
            }
            else
              tsm.serialize (
                "CardiacCycleSkinFlow_mL_Per_s",
                "uri:/mil/tatrc/physiology/datamodel",
                false, true, e, x);
          }
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, BioGearsCardiovascularSystemData >
        _xsd_BioGearsCardiovascularSystemData_type_serializer_init (
          "BioGearsCardiovascularSystemData",
          "uri:/mil/tatrc/physiology/datamodel");
      }
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

