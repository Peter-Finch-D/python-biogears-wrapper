// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
#include "Properties.hxx"

//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "RenalSystemData.hxx"

#include "ScalarFractionData.hxx"

#include "ScalarVolumePerTimeData.hxx"

#include "ScalarFlowResistanceData.hxx"

#include "ScalarPressureData.hxx"

#include "ScalarVolumePerTimePressureData.hxx"

#include "ScalarAreaData.hxx"

#include "ScalarVolumePerTimePressureAreaData.hxx"

#include "ScalarOsmolalityData.hxx"

#include "ScalarOsmolarityData.hxx"

#include "ScalarData.hxx"

#include "ScalarVolumeData.hxx"

#include "ScalarMassPerVolumeData.hxx"

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        // RenalSystemData
        // 

        const RenalSystemData::FiltrationFraction_optional& RenalSystemData::
        FiltrationFraction () const
        {
          return this->FiltrationFraction_;
        }

        RenalSystemData::FiltrationFraction_optional& RenalSystemData::
        FiltrationFraction ()
        {
          return this->FiltrationFraction_;
        }

        void RenalSystemData::
        FiltrationFraction (const FiltrationFraction_type& x)
        {
          this->FiltrationFraction_.set (x);
        }

        void RenalSystemData::
        FiltrationFraction (const FiltrationFraction_optional& x)
        {
          this->FiltrationFraction_ = x;
        }

        void RenalSystemData::
        FiltrationFraction (::std::unique_ptr< FiltrationFraction_type > x)
        {
          this->FiltrationFraction_.set (std::move (x));
        }

        const RenalSystemData::GlomerularFiltrationRate_optional& RenalSystemData::
        GlomerularFiltrationRate () const
        {
          return this->GlomerularFiltrationRate_;
        }

        RenalSystemData::GlomerularFiltrationRate_optional& RenalSystemData::
        GlomerularFiltrationRate ()
        {
          return this->GlomerularFiltrationRate_;
        }

        void RenalSystemData::
        GlomerularFiltrationRate (const GlomerularFiltrationRate_type& x)
        {
          this->GlomerularFiltrationRate_.set (x);
        }

        void RenalSystemData::
        GlomerularFiltrationRate (const GlomerularFiltrationRate_optional& x)
        {
          this->GlomerularFiltrationRate_ = x;
        }

        void RenalSystemData::
        GlomerularFiltrationRate (::std::unique_ptr< GlomerularFiltrationRate_type > x)
        {
          this->GlomerularFiltrationRate_.set (std::move (x));
        }

        const RenalSystemData::LeftAfferentArterioleResistance_optional& RenalSystemData::
        LeftAfferentArterioleResistance () const
        {
          return this->LeftAfferentArterioleResistance_;
        }

        RenalSystemData::LeftAfferentArterioleResistance_optional& RenalSystemData::
        LeftAfferentArterioleResistance ()
        {
          return this->LeftAfferentArterioleResistance_;
        }

        void RenalSystemData::
        LeftAfferentArterioleResistance (const LeftAfferentArterioleResistance_type& x)
        {
          this->LeftAfferentArterioleResistance_.set (x);
        }

        void RenalSystemData::
        LeftAfferentArterioleResistance (const LeftAfferentArterioleResistance_optional& x)
        {
          this->LeftAfferentArterioleResistance_ = x;
        }

        void RenalSystemData::
        LeftAfferentArterioleResistance (::std::unique_ptr< LeftAfferentArterioleResistance_type > x)
        {
          this->LeftAfferentArterioleResistance_.set (std::move (x));
        }

        const RenalSystemData::LeftBowmansCapsulesHydrostaticPressure_optional& RenalSystemData::
        LeftBowmansCapsulesHydrostaticPressure () const
        {
          return this->LeftBowmansCapsulesHydrostaticPressure_;
        }

        RenalSystemData::LeftBowmansCapsulesHydrostaticPressure_optional& RenalSystemData::
        LeftBowmansCapsulesHydrostaticPressure ()
        {
          return this->LeftBowmansCapsulesHydrostaticPressure_;
        }

        void RenalSystemData::
        LeftBowmansCapsulesHydrostaticPressure (const LeftBowmansCapsulesHydrostaticPressure_type& x)
        {
          this->LeftBowmansCapsulesHydrostaticPressure_.set (x);
        }

        void RenalSystemData::
        LeftBowmansCapsulesHydrostaticPressure (const LeftBowmansCapsulesHydrostaticPressure_optional& x)
        {
          this->LeftBowmansCapsulesHydrostaticPressure_ = x;
        }

        void RenalSystemData::
        LeftBowmansCapsulesHydrostaticPressure (::std::unique_ptr< LeftBowmansCapsulesHydrostaticPressure_type > x)
        {
          this->LeftBowmansCapsulesHydrostaticPressure_.set (std::move (x));
        }

        const RenalSystemData::LeftBowmansCapsulesOsmoticPressure_optional& RenalSystemData::
        LeftBowmansCapsulesOsmoticPressure () const
        {
          return this->LeftBowmansCapsulesOsmoticPressure_;
        }

        RenalSystemData::LeftBowmansCapsulesOsmoticPressure_optional& RenalSystemData::
        LeftBowmansCapsulesOsmoticPressure ()
        {
          return this->LeftBowmansCapsulesOsmoticPressure_;
        }

        void RenalSystemData::
        LeftBowmansCapsulesOsmoticPressure (const LeftBowmansCapsulesOsmoticPressure_type& x)
        {
          this->LeftBowmansCapsulesOsmoticPressure_.set (x);
        }

        void RenalSystemData::
        LeftBowmansCapsulesOsmoticPressure (const LeftBowmansCapsulesOsmoticPressure_optional& x)
        {
          this->LeftBowmansCapsulesOsmoticPressure_ = x;
        }

        void RenalSystemData::
        LeftBowmansCapsulesOsmoticPressure (::std::unique_ptr< LeftBowmansCapsulesOsmoticPressure_type > x)
        {
          this->LeftBowmansCapsulesOsmoticPressure_.set (std::move (x));
        }

        const RenalSystemData::LeftEfferentArterioleResistance_optional& RenalSystemData::
        LeftEfferentArterioleResistance () const
        {
          return this->LeftEfferentArterioleResistance_;
        }

        RenalSystemData::LeftEfferentArterioleResistance_optional& RenalSystemData::
        LeftEfferentArterioleResistance ()
        {
          return this->LeftEfferentArterioleResistance_;
        }

        void RenalSystemData::
        LeftEfferentArterioleResistance (const LeftEfferentArterioleResistance_type& x)
        {
          this->LeftEfferentArterioleResistance_.set (x);
        }

        void RenalSystemData::
        LeftEfferentArterioleResistance (const LeftEfferentArterioleResistance_optional& x)
        {
          this->LeftEfferentArterioleResistance_ = x;
        }

        void RenalSystemData::
        LeftEfferentArterioleResistance (::std::unique_ptr< LeftEfferentArterioleResistance_type > x)
        {
          this->LeftEfferentArterioleResistance_.set (std::move (x));
        }

        const RenalSystemData::LeftGlomerularCapillariesHydrostaticPressure_optional& RenalSystemData::
        LeftGlomerularCapillariesHydrostaticPressure () const
        {
          return this->LeftGlomerularCapillariesHydrostaticPressure_;
        }

        RenalSystemData::LeftGlomerularCapillariesHydrostaticPressure_optional& RenalSystemData::
        LeftGlomerularCapillariesHydrostaticPressure ()
        {
          return this->LeftGlomerularCapillariesHydrostaticPressure_;
        }

        void RenalSystemData::
        LeftGlomerularCapillariesHydrostaticPressure (const LeftGlomerularCapillariesHydrostaticPressure_type& x)
        {
          this->LeftGlomerularCapillariesHydrostaticPressure_.set (x);
        }

        void RenalSystemData::
        LeftGlomerularCapillariesHydrostaticPressure (const LeftGlomerularCapillariesHydrostaticPressure_optional& x)
        {
          this->LeftGlomerularCapillariesHydrostaticPressure_ = x;
        }

        void RenalSystemData::
        LeftGlomerularCapillariesHydrostaticPressure (::std::unique_ptr< LeftGlomerularCapillariesHydrostaticPressure_type > x)
        {
          this->LeftGlomerularCapillariesHydrostaticPressure_.set (std::move (x));
        }

        const RenalSystemData::LeftGlomerularCapillariesOsmoticPressure_optional& RenalSystemData::
        LeftGlomerularCapillariesOsmoticPressure () const
        {
          return this->LeftGlomerularCapillariesOsmoticPressure_;
        }

        RenalSystemData::LeftGlomerularCapillariesOsmoticPressure_optional& RenalSystemData::
        LeftGlomerularCapillariesOsmoticPressure ()
        {
          return this->LeftGlomerularCapillariesOsmoticPressure_;
        }

        void RenalSystemData::
        LeftGlomerularCapillariesOsmoticPressure (const LeftGlomerularCapillariesOsmoticPressure_type& x)
        {
          this->LeftGlomerularCapillariesOsmoticPressure_.set (x);
        }

        void RenalSystemData::
        LeftGlomerularCapillariesOsmoticPressure (const LeftGlomerularCapillariesOsmoticPressure_optional& x)
        {
          this->LeftGlomerularCapillariesOsmoticPressure_ = x;
        }

        void RenalSystemData::
        LeftGlomerularCapillariesOsmoticPressure (::std::unique_ptr< LeftGlomerularCapillariesOsmoticPressure_type > x)
        {
          this->LeftGlomerularCapillariesOsmoticPressure_.set (std::move (x));
        }

        const RenalSystemData::LeftGlomerularFiltrationCoefficient_optional& RenalSystemData::
        LeftGlomerularFiltrationCoefficient () const
        {
          return this->LeftGlomerularFiltrationCoefficient_;
        }

        RenalSystemData::LeftGlomerularFiltrationCoefficient_optional& RenalSystemData::
        LeftGlomerularFiltrationCoefficient ()
        {
          return this->LeftGlomerularFiltrationCoefficient_;
        }

        void RenalSystemData::
        LeftGlomerularFiltrationCoefficient (const LeftGlomerularFiltrationCoefficient_type& x)
        {
          this->LeftGlomerularFiltrationCoefficient_.set (x);
        }

        void RenalSystemData::
        LeftGlomerularFiltrationCoefficient (const LeftGlomerularFiltrationCoefficient_optional& x)
        {
          this->LeftGlomerularFiltrationCoefficient_ = x;
        }

        void RenalSystemData::
        LeftGlomerularFiltrationCoefficient (::std::unique_ptr< LeftGlomerularFiltrationCoefficient_type > x)
        {
          this->LeftGlomerularFiltrationCoefficient_.set (std::move (x));
        }

        const RenalSystemData::LeftGlomerularFiltrationRate_optional& RenalSystemData::
        LeftGlomerularFiltrationRate () const
        {
          return this->LeftGlomerularFiltrationRate_;
        }

        RenalSystemData::LeftGlomerularFiltrationRate_optional& RenalSystemData::
        LeftGlomerularFiltrationRate ()
        {
          return this->LeftGlomerularFiltrationRate_;
        }

        void RenalSystemData::
        LeftGlomerularFiltrationRate (const LeftGlomerularFiltrationRate_type& x)
        {
          this->LeftGlomerularFiltrationRate_.set (x);
        }

        void RenalSystemData::
        LeftGlomerularFiltrationRate (const LeftGlomerularFiltrationRate_optional& x)
        {
          this->LeftGlomerularFiltrationRate_ = x;
        }

        void RenalSystemData::
        LeftGlomerularFiltrationRate (::std::unique_ptr< LeftGlomerularFiltrationRate_type > x)
        {
          this->LeftGlomerularFiltrationRate_.set (std::move (x));
        }

        const RenalSystemData::LeftGlomerularFiltrationSurfaceArea_optional& RenalSystemData::
        LeftGlomerularFiltrationSurfaceArea () const
        {
          return this->LeftGlomerularFiltrationSurfaceArea_;
        }

        RenalSystemData::LeftGlomerularFiltrationSurfaceArea_optional& RenalSystemData::
        LeftGlomerularFiltrationSurfaceArea ()
        {
          return this->LeftGlomerularFiltrationSurfaceArea_;
        }

        void RenalSystemData::
        LeftGlomerularFiltrationSurfaceArea (const LeftGlomerularFiltrationSurfaceArea_type& x)
        {
          this->LeftGlomerularFiltrationSurfaceArea_.set (x);
        }

        void RenalSystemData::
        LeftGlomerularFiltrationSurfaceArea (const LeftGlomerularFiltrationSurfaceArea_optional& x)
        {
          this->LeftGlomerularFiltrationSurfaceArea_ = x;
        }

        void RenalSystemData::
        LeftGlomerularFiltrationSurfaceArea (::std::unique_ptr< LeftGlomerularFiltrationSurfaceArea_type > x)
        {
          this->LeftGlomerularFiltrationSurfaceArea_.set (std::move (x));
        }

        const RenalSystemData::LeftGlomerularFluidPermeability_optional& RenalSystemData::
        LeftGlomerularFluidPermeability () const
        {
          return this->LeftGlomerularFluidPermeability_;
        }

        RenalSystemData::LeftGlomerularFluidPermeability_optional& RenalSystemData::
        LeftGlomerularFluidPermeability ()
        {
          return this->LeftGlomerularFluidPermeability_;
        }

        void RenalSystemData::
        LeftGlomerularFluidPermeability (const LeftGlomerularFluidPermeability_type& x)
        {
          this->LeftGlomerularFluidPermeability_.set (x);
        }

        void RenalSystemData::
        LeftGlomerularFluidPermeability (const LeftGlomerularFluidPermeability_optional& x)
        {
          this->LeftGlomerularFluidPermeability_ = x;
        }

        void RenalSystemData::
        LeftGlomerularFluidPermeability (::std::unique_ptr< LeftGlomerularFluidPermeability_type > x)
        {
          this->LeftGlomerularFluidPermeability_.set (std::move (x));
        }

        const RenalSystemData::LeftFiltrationFraction_optional& RenalSystemData::
        LeftFiltrationFraction () const
        {
          return this->LeftFiltrationFraction_;
        }

        RenalSystemData::LeftFiltrationFraction_optional& RenalSystemData::
        LeftFiltrationFraction ()
        {
          return this->LeftFiltrationFraction_;
        }

        void RenalSystemData::
        LeftFiltrationFraction (const LeftFiltrationFraction_type& x)
        {
          this->LeftFiltrationFraction_.set (x);
        }

        void RenalSystemData::
        LeftFiltrationFraction (const LeftFiltrationFraction_optional& x)
        {
          this->LeftFiltrationFraction_ = x;
        }

        void RenalSystemData::
        LeftFiltrationFraction (::std::unique_ptr< LeftFiltrationFraction_type > x)
        {
          this->LeftFiltrationFraction_.set (std::move (x));
        }

        const RenalSystemData::LeftNetFiltrationPressure_optional& RenalSystemData::
        LeftNetFiltrationPressure () const
        {
          return this->LeftNetFiltrationPressure_;
        }

        RenalSystemData::LeftNetFiltrationPressure_optional& RenalSystemData::
        LeftNetFiltrationPressure ()
        {
          return this->LeftNetFiltrationPressure_;
        }

        void RenalSystemData::
        LeftNetFiltrationPressure (const LeftNetFiltrationPressure_type& x)
        {
          this->LeftNetFiltrationPressure_.set (x);
        }

        void RenalSystemData::
        LeftNetFiltrationPressure (const LeftNetFiltrationPressure_optional& x)
        {
          this->LeftNetFiltrationPressure_ = x;
        }

        void RenalSystemData::
        LeftNetFiltrationPressure (::std::unique_ptr< LeftNetFiltrationPressure_type > x)
        {
          this->LeftNetFiltrationPressure_.set (std::move (x));
        }

        const RenalSystemData::LeftNetReabsorptionPressure_optional& RenalSystemData::
        LeftNetReabsorptionPressure () const
        {
          return this->LeftNetReabsorptionPressure_;
        }

        RenalSystemData::LeftNetReabsorptionPressure_optional& RenalSystemData::
        LeftNetReabsorptionPressure ()
        {
          return this->LeftNetReabsorptionPressure_;
        }

        void RenalSystemData::
        LeftNetReabsorptionPressure (const LeftNetReabsorptionPressure_type& x)
        {
          this->LeftNetReabsorptionPressure_.set (x);
        }

        void RenalSystemData::
        LeftNetReabsorptionPressure (const LeftNetReabsorptionPressure_optional& x)
        {
          this->LeftNetReabsorptionPressure_ = x;
        }

        void RenalSystemData::
        LeftNetReabsorptionPressure (::std::unique_ptr< LeftNetReabsorptionPressure_type > x)
        {
          this->LeftNetReabsorptionPressure_.set (std::move (x));
        }

        const RenalSystemData::LeftPeritubularCapillariesHydrostaticPressure_optional& RenalSystemData::
        LeftPeritubularCapillariesHydrostaticPressure () const
        {
          return this->LeftPeritubularCapillariesHydrostaticPressure_;
        }

        RenalSystemData::LeftPeritubularCapillariesHydrostaticPressure_optional& RenalSystemData::
        LeftPeritubularCapillariesHydrostaticPressure ()
        {
          return this->LeftPeritubularCapillariesHydrostaticPressure_;
        }

        void RenalSystemData::
        LeftPeritubularCapillariesHydrostaticPressure (const LeftPeritubularCapillariesHydrostaticPressure_type& x)
        {
          this->LeftPeritubularCapillariesHydrostaticPressure_.set (x);
        }

        void RenalSystemData::
        LeftPeritubularCapillariesHydrostaticPressure (const LeftPeritubularCapillariesHydrostaticPressure_optional& x)
        {
          this->LeftPeritubularCapillariesHydrostaticPressure_ = x;
        }

        void RenalSystemData::
        LeftPeritubularCapillariesHydrostaticPressure (::std::unique_ptr< LeftPeritubularCapillariesHydrostaticPressure_type > x)
        {
          this->LeftPeritubularCapillariesHydrostaticPressure_.set (std::move (x));
        }

        const RenalSystemData::LeftPeritubularCapillariesOsmoticPressure_optional& RenalSystemData::
        LeftPeritubularCapillariesOsmoticPressure () const
        {
          return this->LeftPeritubularCapillariesOsmoticPressure_;
        }

        RenalSystemData::LeftPeritubularCapillariesOsmoticPressure_optional& RenalSystemData::
        LeftPeritubularCapillariesOsmoticPressure ()
        {
          return this->LeftPeritubularCapillariesOsmoticPressure_;
        }

        void RenalSystemData::
        LeftPeritubularCapillariesOsmoticPressure (const LeftPeritubularCapillariesOsmoticPressure_type& x)
        {
          this->LeftPeritubularCapillariesOsmoticPressure_.set (x);
        }

        void RenalSystemData::
        LeftPeritubularCapillariesOsmoticPressure (const LeftPeritubularCapillariesOsmoticPressure_optional& x)
        {
          this->LeftPeritubularCapillariesOsmoticPressure_ = x;
        }

        void RenalSystemData::
        LeftPeritubularCapillariesOsmoticPressure (::std::unique_ptr< LeftPeritubularCapillariesOsmoticPressure_type > x)
        {
          this->LeftPeritubularCapillariesOsmoticPressure_.set (std::move (x));
        }

        const RenalSystemData::LeftReabsorptionFiltrationCoefficient_optional& RenalSystemData::
        LeftReabsorptionFiltrationCoefficient () const
        {
          return this->LeftReabsorptionFiltrationCoefficient_;
        }

        RenalSystemData::LeftReabsorptionFiltrationCoefficient_optional& RenalSystemData::
        LeftReabsorptionFiltrationCoefficient ()
        {
          return this->LeftReabsorptionFiltrationCoefficient_;
        }

        void RenalSystemData::
        LeftReabsorptionFiltrationCoefficient (const LeftReabsorptionFiltrationCoefficient_type& x)
        {
          this->LeftReabsorptionFiltrationCoefficient_.set (x);
        }

        void RenalSystemData::
        LeftReabsorptionFiltrationCoefficient (const LeftReabsorptionFiltrationCoefficient_optional& x)
        {
          this->LeftReabsorptionFiltrationCoefficient_ = x;
        }

        void RenalSystemData::
        LeftReabsorptionFiltrationCoefficient (::std::unique_ptr< LeftReabsorptionFiltrationCoefficient_type > x)
        {
          this->LeftReabsorptionFiltrationCoefficient_.set (std::move (x));
        }

        const RenalSystemData::LeftReabsorptionRate_optional& RenalSystemData::
        LeftReabsorptionRate () const
        {
          return this->LeftReabsorptionRate_;
        }

        RenalSystemData::LeftReabsorptionRate_optional& RenalSystemData::
        LeftReabsorptionRate ()
        {
          return this->LeftReabsorptionRate_;
        }

        void RenalSystemData::
        LeftReabsorptionRate (const LeftReabsorptionRate_type& x)
        {
          this->LeftReabsorptionRate_.set (x);
        }

        void RenalSystemData::
        LeftReabsorptionRate (const LeftReabsorptionRate_optional& x)
        {
          this->LeftReabsorptionRate_ = x;
        }

        void RenalSystemData::
        LeftReabsorptionRate (::std::unique_ptr< LeftReabsorptionRate_type > x)
        {
          this->LeftReabsorptionRate_.set (std::move (x));
        }

        const RenalSystemData::LeftTubularOsmoticPressure_optional& RenalSystemData::
        LeftTubularOsmoticPressure () const
        {
          return this->LeftTubularOsmoticPressure_;
        }

        RenalSystemData::LeftTubularOsmoticPressure_optional& RenalSystemData::
        LeftTubularOsmoticPressure ()
        {
          return this->LeftTubularOsmoticPressure_;
        }

        void RenalSystemData::
        LeftTubularOsmoticPressure (const LeftTubularOsmoticPressure_type& x)
        {
          this->LeftTubularOsmoticPressure_.set (x);
        }

        void RenalSystemData::
        LeftTubularOsmoticPressure (const LeftTubularOsmoticPressure_optional& x)
        {
          this->LeftTubularOsmoticPressure_ = x;
        }

        void RenalSystemData::
        LeftTubularOsmoticPressure (::std::unique_ptr< LeftTubularOsmoticPressure_type > x)
        {
          this->LeftTubularOsmoticPressure_.set (std::move (x));
        }

        const RenalSystemData::LeftTubularHydrostaticPressure_optional& RenalSystemData::
        LeftTubularHydrostaticPressure () const
        {
          return this->LeftTubularHydrostaticPressure_;
        }

        RenalSystemData::LeftTubularHydrostaticPressure_optional& RenalSystemData::
        LeftTubularHydrostaticPressure ()
        {
          return this->LeftTubularHydrostaticPressure_;
        }

        void RenalSystemData::
        LeftTubularHydrostaticPressure (const LeftTubularHydrostaticPressure_type& x)
        {
          this->LeftTubularHydrostaticPressure_.set (x);
        }

        void RenalSystemData::
        LeftTubularHydrostaticPressure (const LeftTubularHydrostaticPressure_optional& x)
        {
          this->LeftTubularHydrostaticPressure_ = x;
        }

        void RenalSystemData::
        LeftTubularHydrostaticPressure (::std::unique_ptr< LeftTubularHydrostaticPressure_type > x)
        {
          this->LeftTubularHydrostaticPressure_.set (std::move (x));
        }

        const RenalSystemData::LeftTubularReabsorptionFiltrationSurfaceArea_optional& RenalSystemData::
        LeftTubularReabsorptionFiltrationSurfaceArea () const
        {
          return this->LeftTubularReabsorptionFiltrationSurfaceArea_;
        }

        RenalSystemData::LeftTubularReabsorptionFiltrationSurfaceArea_optional& RenalSystemData::
        LeftTubularReabsorptionFiltrationSurfaceArea ()
        {
          return this->LeftTubularReabsorptionFiltrationSurfaceArea_;
        }

        void RenalSystemData::
        LeftTubularReabsorptionFiltrationSurfaceArea (const LeftTubularReabsorptionFiltrationSurfaceArea_type& x)
        {
          this->LeftTubularReabsorptionFiltrationSurfaceArea_.set (x);
        }

        void RenalSystemData::
        LeftTubularReabsorptionFiltrationSurfaceArea (const LeftTubularReabsorptionFiltrationSurfaceArea_optional& x)
        {
          this->LeftTubularReabsorptionFiltrationSurfaceArea_ = x;
        }

        void RenalSystemData::
        LeftTubularReabsorptionFiltrationSurfaceArea (::std::unique_ptr< LeftTubularReabsorptionFiltrationSurfaceArea_type > x)
        {
          this->LeftTubularReabsorptionFiltrationSurfaceArea_.set (std::move (x));
        }

        const RenalSystemData::LeftTubularReabsorptionFluidPermeability_optional& RenalSystemData::
        LeftTubularReabsorptionFluidPermeability () const
        {
          return this->LeftTubularReabsorptionFluidPermeability_;
        }

        RenalSystemData::LeftTubularReabsorptionFluidPermeability_optional& RenalSystemData::
        LeftTubularReabsorptionFluidPermeability ()
        {
          return this->LeftTubularReabsorptionFluidPermeability_;
        }

        void RenalSystemData::
        LeftTubularReabsorptionFluidPermeability (const LeftTubularReabsorptionFluidPermeability_type& x)
        {
          this->LeftTubularReabsorptionFluidPermeability_.set (x);
        }

        void RenalSystemData::
        LeftTubularReabsorptionFluidPermeability (const LeftTubularReabsorptionFluidPermeability_optional& x)
        {
          this->LeftTubularReabsorptionFluidPermeability_ = x;
        }

        void RenalSystemData::
        LeftTubularReabsorptionFluidPermeability (::std::unique_ptr< LeftTubularReabsorptionFluidPermeability_type > x)
        {
          this->LeftTubularReabsorptionFluidPermeability_.set (std::move (x));
        }

        const RenalSystemData::RenalBloodFlow_optional& RenalSystemData::
        RenalBloodFlow () const
        {
          return this->RenalBloodFlow_;
        }

        RenalSystemData::RenalBloodFlow_optional& RenalSystemData::
        RenalBloodFlow ()
        {
          return this->RenalBloodFlow_;
        }

        void RenalSystemData::
        RenalBloodFlow (const RenalBloodFlow_type& x)
        {
          this->RenalBloodFlow_.set (x);
        }

        void RenalSystemData::
        RenalBloodFlow (const RenalBloodFlow_optional& x)
        {
          this->RenalBloodFlow_ = x;
        }

        void RenalSystemData::
        RenalBloodFlow (::std::unique_ptr< RenalBloodFlow_type > x)
        {
          this->RenalBloodFlow_.set (std::move (x));
        }

        const RenalSystemData::RenalPlasmaFlow_optional& RenalSystemData::
        RenalPlasmaFlow () const
        {
          return this->RenalPlasmaFlow_;
        }

        RenalSystemData::RenalPlasmaFlow_optional& RenalSystemData::
        RenalPlasmaFlow ()
        {
          return this->RenalPlasmaFlow_;
        }

        void RenalSystemData::
        RenalPlasmaFlow (const RenalPlasmaFlow_type& x)
        {
          this->RenalPlasmaFlow_.set (x);
        }

        void RenalSystemData::
        RenalPlasmaFlow (const RenalPlasmaFlow_optional& x)
        {
          this->RenalPlasmaFlow_ = x;
        }

        void RenalSystemData::
        RenalPlasmaFlow (::std::unique_ptr< RenalPlasmaFlow_type > x)
        {
          this->RenalPlasmaFlow_.set (std::move (x));
        }

        const RenalSystemData::RenalVascularResistance_optional& RenalSystemData::
        RenalVascularResistance () const
        {
          return this->RenalVascularResistance_;
        }

        RenalSystemData::RenalVascularResistance_optional& RenalSystemData::
        RenalVascularResistance ()
        {
          return this->RenalVascularResistance_;
        }

        void RenalSystemData::
        RenalVascularResistance (const RenalVascularResistance_type& x)
        {
          this->RenalVascularResistance_.set (x);
        }

        void RenalSystemData::
        RenalVascularResistance (const RenalVascularResistance_optional& x)
        {
          this->RenalVascularResistance_ = x;
        }

        void RenalSystemData::
        RenalVascularResistance (::std::unique_ptr< RenalVascularResistance_type > x)
        {
          this->RenalVascularResistance_.set (std::move (x));
        }

        const RenalSystemData::RightAfferentArterioleResistance_optional& RenalSystemData::
        RightAfferentArterioleResistance () const
        {
          return this->RightAfferentArterioleResistance_;
        }

        RenalSystemData::RightAfferentArterioleResistance_optional& RenalSystemData::
        RightAfferentArterioleResistance ()
        {
          return this->RightAfferentArterioleResistance_;
        }

        void RenalSystemData::
        RightAfferentArterioleResistance (const RightAfferentArterioleResistance_type& x)
        {
          this->RightAfferentArterioleResistance_.set (x);
        }

        void RenalSystemData::
        RightAfferentArterioleResistance (const RightAfferentArterioleResistance_optional& x)
        {
          this->RightAfferentArterioleResistance_ = x;
        }

        void RenalSystemData::
        RightAfferentArterioleResistance (::std::unique_ptr< RightAfferentArterioleResistance_type > x)
        {
          this->RightAfferentArterioleResistance_.set (std::move (x));
        }

        const RenalSystemData::RightBowmansCapsulesHydrostaticPressure_optional& RenalSystemData::
        RightBowmansCapsulesHydrostaticPressure () const
        {
          return this->RightBowmansCapsulesHydrostaticPressure_;
        }

        RenalSystemData::RightBowmansCapsulesHydrostaticPressure_optional& RenalSystemData::
        RightBowmansCapsulesHydrostaticPressure ()
        {
          return this->RightBowmansCapsulesHydrostaticPressure_;
        }

        void RenalSystemData::
        RightBowmansCapsulesHydrostaticPressure (const RightBowmansCapsulesHydrostaticPressure_type& x)
        {
          this->RightBowmansCapsulesHydrostaticPressure_.set (x);
        }

        void RenalSystemData::
        RightBowmansCapsulesHydrostaticPressure (const RightBowmansCapsulesHydrostaticPressure_optional& x)
        {
          this->RightBowmansCapsulesHydrostaticPressure_ = x;
        }

        void RenalSystemData::
        RightBowmansCapsulesHydrostaticPressure (::std::unique_ptr< RightBowmansCapsulesHydrostaticPressure_type > x)
        {
          this->RightBowmansCapsulesHydrostaticPressure_.set (std::move (x));
        }

        const RenalSystemData::RightBowmansCapsulesOsmoticPressure_optional& RenalSystemData::
        RightBowmansCapsulesOsmoticPressure () const
        {
          return this->RightBowmansCapsulesOsmoticPressure_;
        }

        RenalSystemData::RightBowmansCapsulesOsmoticPressure_optional& RenalSystemData::
        RightBowmansCapsulesOsmoticPressure ()
        {
          return this->RightBowmansCapsulesOsmoticPressure_;
        }

        void RenalSystemData::
        RightBowmansCapsulesOsmoticPressure (const RightBowmansCapsulesOsmoticPressure_type& x)
        {
          this->RightBowmansCapsulesOsmoticPressure_.set (x);
        }

        void RenalSystemData::
        RightBowmansCapsulesOsmoticPressure (const RightBowmansCapsulesOsmoticPressure_optional& x)
        {
          this->RightBowmansCapsulesOsmoticPressure_ = x;
        }

        void RenalSystemData::
        RightBowmansCapsulesOsmoticPressure (::std::unique_ptr< RightBowmansCapsulesOsmoticPressure_type > x)
        {
          this->RightBowmansCapsulesOsmoticPressure_.set (std::move (x));
        }

        const RenalSystemData::RightEfferentArterioleResistance_optional& RenalSystemData::
        RightEfferentArterioleResistance () const
        {
          return this->RightEfferentArterioleResistance_;
        }

        RenalSystemData::RightEfferentArterioleResistance_optional& RenalSystemData::
        RightEfferentArterioleResistance ()
        {
          return this->RightEfferentArterioleResistance_;
        }

        void RenalSystemData::
        RightEfferentArterioleResistance (const RightEfferentArterioleResistance_type& x)
        {
          this->RightEfferentArterioleResistance_.set (x);
        }

        void RenalSystemData::
        RightEfferentArterioleResistance (const RightEfferentArterioleResistance_optional& x)
        {
          this->RightEfferentArterioleResistance_ = x;
        }

        void RenalSystemData::
        RightEfferentArterioleResistance (::std::unique_ptr< RightEfferentArterioleResistance_type > x)
        {
          this->RightEfferentArterioleResistance_.set (std::move (x));
        }

        const RenalSystemData::RightGlomerularCapillariesHydrostaticPressure_optional& RenalSystemData::
        RightGlomerularCapillariesHydrostaticPressure () const
        {
          return this->RightGlomerularCapillariesHydrostaticPressure_;
        }

        RenalSystemData::RightGlomerularCapillariesHydrostaticPressure_optional& RenalSystemData::
        RightGlomerularCapillariesHydrostaticPressure ()
        {
          return this->RightGlomerularCapillariesHydrostaticPressure_;
        }

        void RenalSystemData::
        RightGlomerularCapillariesHydrostaticPressure (const RightGlomerularCapillariesHydrostaticPressure_type& x)
        {
          this->RightGlomerularCapillariesHydrostaticPressure_.set (x);
        }

        void RenalSystemData::
        RightGlomerularCapillariesHydrostaticPressure (const RightGlomerularCapillariesHydrostaticPressure_optional& x)
        {
          this->RightGlomerularCapillariesHydrostaticPressure_ = x;
        }

        void RenalSystemData::
        RightGlomerularCapillariesHydrostaticPressure (::std::unique_ptr< RightGlomerularCapillariesHydrostaticPressure_type > x)
        {
          this->RightGlomerularCapillariesHydrostaticPressure_.set (std::move (x));
        }

        const RenalSystemData::RightGlomerularCapillariesOsmoticPressure_optional& RenalSystemData::
        RightGlomerularCapillariesOsmoticPressure () const
        {
          return this->RightGlomerularCapillariesOsmoticPressure_;
        }

        RenalSystemData::RightGlomerularCapillariesOsmoticPressure_optional& RenalSystemData::
        RightGlomerularCapillariesOsmoticPressure ()
        {
          return this->RightGlomerularCapillariesOsmoticPressure_;
        }

        void RenalSystemData::
        RightGlomerularCapillariesOsmoticPressure (const RightGlomerularCapillariesOsmoticPressure_type& x)
        {
          this->RightGlomerularCapillariesOsmoticPressure_.set (x);
        }

        void RenalSystemData::
        RightGlomerularCapillariesOsmoticPressure (const RightGlomerularCapillariesOsmoticPressure_optional& x)
        {
          this->RightGlomerularCapillariesOsmoticPressure_ = x;
        }

        void RenalSystemData::
        RightGlomerularCapillariesOsmoticPressure (::std::unique_ptr< RightGlomerularCapillariesOsmoticPressure_type > x)
        {
          this->RightGlomerularCapillariesOsmoticPressure_.set (std::move (x));
        }

        const RenalSystemData::RightGlomerularFiltrationCoefficient_optional& RenalSystemData::
        RightGlomerularFiltrationCoefficient () const
        {
          return this->RightGlomerularFiltrationCoefficient_;
        }

        RenalSystemData::RightGlomerularFiltrationCoefficient_optional& RenalSystemData::
        RightGlomerularFiltrationCoefficient ()
        {
          return this->RightGlomerularFiltrationCoefficient_;
        }

        void RenalSystemData::
        RightGlomerularFiltrationCoefficient (const RightGlomerularFiltrationCoefficient_type& x)
        {
          this->RightGlomerularFiltrationCoefficient_.set (x);
        }

        void RenalSystemData::
        RightGlomerularFiltrationCoefficient (const RightGlomerularFiltrationCoefficient_optional& x)
        {
          this->RightGlomerularFiltrationCoefficient_ = x;
        }

        void RenalSystemData::
        RightGlomerularFiltrationCoefficient (::std::unique_ptr< RightGlomerularFiltrationCoefficient_type > x)
        {
          this->RightGlomerularFiltrationCoefficient_.set (std::move (x));
        }

        const RenalSystemData::RightGlomerularFiltrationRate_optional& RenalSystemData::
        RightGlomerularFiltrationRate () const
        {
          return this->RightGlomerularFiltrationRate_;
        }

        RenalSystemData::RightGlomerularFiltrationRate_optional& RenalSystemData::
        RightGlomerularFiltrationRate ()
        {
          return this->RightGlomerularFiltrationRate_;
        }

        void RenalSystemData::
        RightGlomerularFiltrationRate (const RightGlomerularFiltrationRate_type& x)
        {
          this->RightGlomerularFiltrationRate_.set (x);
        }

        void RenalSystemData::
        RightGlomerularFiltrationRate (const RightGlomerularFiltrationRate_optional& x)
        {
          this->RightGlomerularFiltrationRate_ = x;
        }

        void RenalSystemData::
        RightGlomerularFiltrationRate (::std::unique_ptr< RightGlomerularFiltrationRate_type > x)
        {
          this->RightGlomerularFiltrationRate_.set (std::move (x));
        }

        const RenalSystemData::RightGlomerularFiltrationSurfaceArea_optional& RenalSystemData::
        RightGlomerularFiltrationSurfaceArea () const
        {
          return this->RightGlomerularFiltrationSurfaceArea_;
        }

        RenalSystemData::RightGlomerularFiltrationSurfaceArea_optional& RenalSystemData::
        RightGlomerularFiltrationSurfaceArea ()
        {
          return this->RightGlomerularFiltrationSurfaceArea_;
        }

        void RenalSystemData::
        RightGlomerularFiltrationSurfaceArea (const RightGlomerularFiltrationSurfaceArea_type& x)
        {
          this->RightGlomerularFiltrationSurfaceArea_.set (x);
        }

        void RenalSystemData::
        RightGlomerularFiltrationSurfaceArea (const RightGlomerularFiltrationSurfaceArea_optional& x)
        {
          this->RightGlomerularFiltrationSurfaceArea_ = x;
        }

        void RenalSystemData::
        RightGlomerularFiltrationSurfaceArea (::std::unique_ptr< RightGlomerularFiltrationSurfaceArea_type > x)
        {
          this->RightGlomerularFiltrationSurfaceArea_.set (std::move (x));
        }

        const RenalSystemData::RightGlomerularFluidPermeability_optional& RenalSystemData::
        RightGlomerularFluidPermeability () const
        {
          return this->RightGlomerularFluidPermeability_;
        }

        RenalSystemData::RightGlomerularFluidPermeability_optional& RenalSystemData::
        RightGlomerularFluidPermeability ()
        {
          return this->RightGlomerularFluidPermeability_;
        }

        void RenalSystemData::
        RightGlomerularFluidPermeability (const RightGlomerularFluidPermeability_type& x)
        {
          this->RightGlomerularFluidPermeability_.set (x);
        }

        void RenalSystemData::
        RightGlomerularFluidPermeability (const RightGlomerularFluidPermeability_optional& x)
        {
          this->RightGlomerularFluidPermeability_ = x;
        }

        void RenalSystemData::
        RightGlomerularFluidPermeability (::std::unique_ptr< RightGlomerularFluidPermeability_type > x)
        {
          this->RightGlomerularFluidPermeability_.set (std::move (x));
        }

        const RenalSystemData::RightFiltrationFraction_optional& RenalSystemData::
        RightFiltrationFraction () const
        {
          return this->RightFiltrationFraction_;
        }

        RenalSystemData::RightFiltrationFraction_optional& RenalSystemData::
        RightFiltrationFraction ()
        {
          return this->RightFiltrationFraction_;
        }

        void RenalSystemData::
        RightFiltrationFraction (const RightFiltrationFraction_type& x)
        {
          this->RightFiltrationFraction_.set (x);
        }

        void RenalSystemData::
        RightFiltrationFraction (const RightFiltrationFraction_optional& x)
        {
          this->RightFiltrationFraction_ = x;
        }

        void RenalSystemData::
        RightFiltrationFraction (::std::unique_ptr< RightFiltrationFraction_type > x)
        {
          this->RightFiltrationFraction_.set (std::move (x));
        }

        const RenalSystemData::RightNetFiltrationPressure_optional& RenalSystemData::
        RightNetFiltrationPressure () const
        {
          return this->RightNetFiltrationPressure_;
        }

        RenalSystemData::RightNetFiltrationPressure_optional& RenalSystemData::
        RightNetFiltrationPressure ()
        {
          return this->RightNetFiltrationPressure_;
        }

        void RenalSystemData::
        RightNetFiltrationPressure (const RightNetFiltrationPressure_type& x)
        {
          this->RightNetFiltrationPressure_.set (x);
        }

        void RenalSystemData::
        RightNetFiltrationPressure (const RightNetFiltrationPressure_optional& x)
        {
          this->RightNetFiltrationPressure_ = x;
        }

        void RenalSystemData::
        RightNetFiltrationPressure (::std::unique_ptr< RightNetFiltrationPressure_type > x)
        {
          this->RightNetFiltrationPressure_.set (std::move (x));
        }

        const RenalSystemData::RightNetReabsorptionPressure_optional& RenalSystemData::
        RightNetReabsorptionPressure () const
        {
          return this->RightNetReabsorptionPressure_;
        }

        RenalSystemData::RightNetReabsorptionPressure_optional& RenalSystemData::
        RightNetReabsorptionPressure ()
        {
          return this->RightNetReabsorptionPressure_;
        }

        void RenalSystemData::
        RightNetReabsorptionPressure (const RightNetReabsorptionPressure_type& x)
        {
          this->RightNetReabsorptionPressure_.set (x);
        }

        void RenalSystemData::
        RightNetReabsorptionPressure (const RightNetReabsorptionPressure_optional& x)
        {
          this->RightNetReabsorptionPressure_ = x;
        }

        void RenalSystemData::
        RightNetReabsorptionPressure (::std::unique_ptr< RightNetReabsorptionPressure_type > x)
        {
          this->RightNetReabsorptionPressure_.set (std::move (x));
        }

        const RenalSystemData::RightPeritubularCapillariesHydrostaticPressure_optional& RenalSystemData::
        RightPeritubularCapillariesHydrostaticPressure () const
        {
          return this->RightPeritubularCapillariesHydrostaticPressure_;
        }

        RenalSystemData::RightPeritubularCapillariesHydrostaticPressure_optional& RenalSystemData::
        RightPeritubularCapillariesHydrostaticPressure ()
        {
          return this->RightPeritubularCapillariesHydrostaticPressure_;
        }

        void RenalSystemData::
        RightPeritubularCapillariesHydrostaticPressure (const RightPeritubularCapillariesHydrostaticPressure_type& x)
        {
          this->RightPeritubularCapillariesHydrostaticPressure_.set (x);
        }

        void RenalSystemData::
        RightPeritubularCapillariesHydrostaticPressure (const RightPeritubularCapillariesHydrostaticPressure_optional& x)
        {
          this->RightPeritubularCapillariesHydrostaticPressure_ = x;
        }

        void RenalSystemData::
        RightPeritubularCapillariesHydrostaticPressure (::std::unique_ptr< RightPeritubularCapillariesHydrostaticPressure_type > x)
        {
          this->RightPeritubularCapillariesHydrostaticPressure_.set (std::move (x));
        }

        const RenalSystemData::RightPeritubularCapillariesOsmoticPressure_optional& RenalSystemData::
        RightPeritubularCapillariesOsmoticPressure () const
        {
          return this->RightPeritubularCapillariesOsmoticPressure_;
        }

        RenalSystemData::RightPeritubularCapillariesOsmoticPressure_optional& RenalSystemData::
        RightPeritubularCapillariesOsmoticPressure ()
        {
          return this->RightPeritubularCapillariesOsmoticPressure_;
        }

        void RenalSystemData::
        RightPeritubularCapillariesOsmoticPressure (const RightPeritubularCapillariesOsmoticPressure_type& x)
        {
          this->RightPeritubularCapillariesOsmoticPressure_.set (x);
        }

        void RenalSystemData::
        RightPeritubularCapillariesOsmoticPressure (const RightPeritubularCapillariesOsmoticPressure_optional& x)
        {
          this->RightPeritubularCapillariesOsmoticPressure_ = x;
        }

        void RenalSystemData::
        RightPeritubularCapillariesOsmoticPressure (::std::unique_ptr< RightPeritubularCapillariesOsmoticPressure_type > x)
        {
          this->RightPeritubularCapillariesOsmoticPressure_.set (std::move (x));
        }

        const RenalSystemData::RightReabsorptionFiltrationCoefficient_optional& RenalSystemData::
        RightReabsorptionFiltrationCoefficient () const
        {
          return this->RightReabsorptionFiltrationCoefficient_;
        }

        RenalSystemData::RightReabsorptionFiltrationCoefficient_optional& RenalSystemData::
        RightReabsorptionFiltrationCoefficient ()
        {
          return this->RightReabsorptionFiltrationCoefficient_;
        }

        void RenalSystemData::
        RightReabsorptionFiltrationCoefficient (const RightReabsorptionFiltrationCoefficient_type& x)
        {
          this->RightReabsorptionFiltrationCoefficient_.set (x);
        }

        void RenalSystemData::
        RightReabsorptionFiltrationCoefficient (const RightReabsorptionFiltrationCoefficient_optional& x)
        {
          this->RightReabsorptionFiltrationCoefficient_ = x;
        }

        void RenalSystemData::
        RightReabsorptionFiltrationCoefficient (::std::unique_ptr< RightReabsorptionFiltrationCoefficient_type > x)
        {
          this->RightReabsorptionFiltrationCoefficient_.set (std::move (x));
        }

        const RenalSystemData::RightReabsorptionRate_optional& RenalSystemData::
        RightReabsorptionRate () const
        {
          return this->RightReabsorptionRate_;
        }

        RenalSystemData::RightReabsorptionRate_optional& RenalSystemData::
        RightReabsorptionRate ()
        {
          return this->RightReabsorptionRate_;
        }

        void RenalSystemData::
        RightReabsorptionRate (const RightReabsorptionRate_type& x)
        {
          this->RightReabsorptionRate_.set (x);
        }

        void RenalSystemData::
        RightReabsorptionRate (const RightReabsorptionRate_optional& x)
        {
          this->RightReabsorptionRate_ = x;
        }

        void RenalSystemData::
        RightReabsorptionRate (::std::unique_ptr< RightReabsorptionRate_type > x)
        {
          this->RightReabsorptionRate_.set (std::move (x));
        }

        const RenalSystemData::RightTubularOsmoticPressure_optional& RenalSystemData::
        RightTubularOsmoticPressure () const
        {
          return this->RightTubularOsmoticPressure_;
        }

        RenalSystemData::RightTubularOsmoticPressure_optional& RenalSystemData::
        RightTubularOsmoticPressure ()
        {
          return this->RightTubularOsmoticPressure_;
        }

        void RenalSystemData::
        RightTubularOsmoticPressure (const RightTubularOsmoticPressure_type& x)
        {
          this->RightTubularOsmoticPressure_.set (x);
        }

        void RenalSystemData::
        RightTubularOsmoticPressure (const RightTubularOsmoticPressure_optional& x)
        {
          this->RightTubularOsmoticPressure_ = x;
        }

        void RenalSystemData::
        RightTubularOsmoticPressure (::std::unique_ptr< RightTubularOsmoticPressure_type > x)
        {
          this->RightTubularOsmoticPressure_.set (std::move (x));
        }

        const RenalSystemData::RightTubularHydrostaticPressure_optional& RenalSystemData::
        RightTubularHydrostaticPressure () const
        {
          return this->RightTubularHydrostaticPressure_;
        }

        RenalSystemData::RightTubularHydrostaticPressure_optional& RenalSystemData::
        RightTubularHydrostaticPressure ()
        {
          return this->RightTubularHydrostaticPressure_;
        }

        void RenalSystemData::
        RightTubularHydrostaticPressure (const RightTubularHydrostaticPressure_type& x)
        {
          this->RightTubularHydrostaticPressure_.set (x);
        }

        void RenalSystemData::
        RightTubularHydrostaticPressure (const RightTubularHydrostaticPressure_optional& x)
        {
          this->RightTubularHydrostaticPressure_ = x;
        }

        void RenalSystemData::
        RightTubularHydrostaticPressure (::std::unique_ptr< RightTubularHydrostaticPressure_type > x)
        {
          this->RightTubularHydrostaticPressure_.set (std::move (x));
        }

        const RenalSystemData::RightTubularReabsorptionFiltrationSurfaceArea_optional& RenalSystemData::
        RightTubularReabsorptionFiltrationSurfaceArea () const
        {
          return this->RightTubularReabsorptionFiltrationSurfaceArea_;
        }

        RenalSystemData::RightTubularReabsorptionFiltrationSurfaceArea_optional& RenalSystemData::
        RightTubularReabsorptionFiltrationSurfaceArea ()
        {
          return this->RightTubularReabsorptionFiltrationSurfaceArea_;
        }

        void RenalSystemData::
        RightTubularReabsorptionFiltrationSurfaceArea (const RightTubularReabsorptionFiltrationSurfaceArea_type& x)
        {
          this->RightTubularReabsorptionFiltrationSurfaceArea_.set (x);
        }

        void RenalSystemData::
        RightTubularReabsorptionFiltrationSurfaceArea (const RightTubularReabsorptionFiltrationSurfaceArea_optional& x)
        {
          this->RightTubularReabsorptionFiltrationSurfaceArea_ = x;
        }

        void RenalSystemData::
        RightTubularReabsorptionFiltrationSurfaceArea (::std::unique_ptr< RightTubularReabsorptionFiltrationSurfaceArea_type > x)
        {
          this->RightTubularReabsorptionFiltrationSurfaceArea_.set (std::move (x));
        }

        const RenalSystemData::RightTubularReabsorptionFluidPermeability_optional& RenalSystemData::
        RightTubularReabsorptionFluidPermeability () const
        {
          return this->RightTubularReabsorptionFluidPermeability_;
        }

        RenalSystemData::RightTubularReabsorptionFluidPermeability_optional& RenalSystemData::
        RightTubularReabsorptionFluidPermeability ()
        {
          return this->RightTubularReabsorptionFluidPermeability_;
        }

        void RenalSystemData::
        RightTubularReabsorptionFluidPermeability (const RightTubularReabsorptionFluidPermeability_type& x)
        {
          this->RightTubularReabsorptionFluidPermeability_.set (x);
        }

        void RenalSystemData::
        RightTubularReabsorptionFluidPermeability (const RightTubularReabsorptionFluidPermeability_optional& x)
        {
          this->RightTubularReabsorptionFluidPermeability_ = x;
        }

        void RenalSystemData::
        RightTubularReabsorptionFluidPermeability (::std::unique_ptr< RightTubularReabsorptionFluidPermeability_type > x)
        {
          this->RightTubularReabsorptionFluidPermeability_.set (std::move (x));
        }

        const RenalSystemData::UrinationRate_optional& RenalSystemData::
        UrinationRate () const
        {
          return this->UrinationRate_;
        }

        RenalSystemData::UrinationRate_optional& RenalSystemData::
        UrinationRate ()
        {
          return this->UrinationRate_;
        }

        void RenalSystemData::
        UrinationRate (const UrinationRate_type& x)
        {
          this->UrinationRate_.set (x);
        }

        void RenalSystemData::
        UrinationRate (const UrinationRate_optional& x)
        {
          this->UrinationRate_ = x;
        }

        void RenalSystemData::
        UrinationRate (::std::unique_ptr< UrinationRate_type > x)
        {
          this->UrinationRate_.set (std::move (x));
        }

        const RenalSystemData::UrineOsmolality_optional& RenalSystemData::
        UrineOsmolality () const
        {
          return this->UrineOsmolality_;
        }

        RenalSystemData::UrineOsmolality_optional& RenalSystemData::
        UrineOsmolality ()
        {
          return this->UrineOsmolality_;
        }

        void RenalSystemData::
        UrineOsmolality (const UrineOsmolality_type& x)
        {
          this->UrineOsmolality_.set (x);
        }

        void RenalSystemData::
        UrineOsmolality (const UrineOsmolality_optional& x)
        {
          this->UrineOsmolality_ = x;
        }

        void RenalSystemData::
        UrineOsmolality (::std::unique_ptr< UrineOsmolality_type > x)
        {
          this->UrineOsmolality_.set (std::move (x));
        }

        const RenalSystemData::UrineOsmolarity_optional& RenalSystemData::
        UrineOsmolarity () const
        {
          return this->UrineOsmolarity_;
        }

        RenalSystemData::UrineOsmolarity_optional& RenalSystemData::
        UrineOsmolarity ()
        {
          return this->UrineOsmolarity_;
        }

        void RenalSystemData::
        UrineOsmolarity (const UrineOsmolarity_type& x)
        {
          this->UrineOsmolarity_.set (x);
        }

        void RenalSystemData::
        UrineOsmolarity (const UrineOsmolarity_optional& x)
        {
          this->UrineOsmolarity_ = x;
        }

        void RenalSystemData::
        UrineOsmolarity (::std::unique_ptr< UrineOsmolarity_type > x)
        {
          this->UrineOsmolarity_.set (std::move (x));
        }

        const RenalSystemData::UrineProductionRate_optional& RenalSystemData::
        UrineProductionRate () const
        {
          return this->UrineProductionRate_;
        }

        RenalSystemData::UrineProductionRate_optional& RenalSystemData::
        UrineProductionRate ()
        {
          return this->UrineProductionRate_;
        }

        void RenalSystemData::
        UrineProductionRate (const UrineProductionRate_type& x)
        {
          this->UrineProductionRate_.set (x);
        }

        void RenalSystemData::
        UrineProductionRate (const UrineProductionRate_optional& x)
        {
          this->UrineProductionRate_ = x;
        }

        void RenalSystemData::
        UrineProductionRate (::std::unique_ptr< UrineProductionRate_type > x)
        {
          this->UrineProductionRate_.set (std::move (x));
        }

        const RenalSystemData::UrineSpecificGravity_optional& RenalSystemData::
        UrineSpecificGravity () const
        {
          return this->UrineSpecificGravity_;
        }

        RenalSystemData::UrineSpecificGravity_optional& RenalSystemData::
        UrineSpecificGravity ()
        {
          return this->UrineSpecificGravity_;
        }

        void RenalSystemData::
        UrineSpecificGravity (const UrineSpecificGravity_type& x)
        {
          this->UrineSpecificGravity_.set (x);
        }

        void RenalSystemData::
        UrineSpecificGravity (const UrineSpecificGravity_optional& x)
        {
          this->UrineSpecificGravity_ = x;
        }

        void RenalSystemData::
        UrineSpecificGravity (::std::unique_ptr< UrineSpecificGravity_type > x)
        {
          this->UrineSpecificGravity_.set (std::move (x));
        }

        const RenalSystemData::UrineVolume_optional& RenalSystemData::
        UrineVolume () const
        {
          return this->UrineVolume_;
        }

        RenalSystemData::UrineVolume_optional& RenalSystemData::
        UrineVolume ()
        {
          return this->UrineVolume_;
        }

        void RenalSystemData::
        UrineVolume (const UrineVolume_type& x)
        {
          this->UrineVolume_.set (x);
        }

        void RenalSystemData::
        UrineVolume (const UrineVolume_optional& x)
        {
          this->UrineVolume_ = x;
        }

        void RenalSystemData::
        UrineVolume (::std::unique_ptr< UrineVolume_type > x)
        {
          this->UrineVolume_.set (std::move (x));
        }

        const RenalSystemData::UrineUreaNitrogenConcentration_optional& RenalSystemData::
        UrineUreaNitrogenConcentration () const
        {
          return this->UrineUreaNitrogenConcentration_;
        }

        RenalSystemData::UrineUreaNitrogenConcentration_optional& RenalSystemData::
        UrineUreaNitrogenConcentration ()
        {
          return this->UrineUreaNitrogenConcentration_;
        }

        void RenalSystemData::
        UrineUreaNitrogenConcentration (const UrineUreaNitrogenConcentration_type& x)
        {
          this->UrineUreaNitrogenConcentration_.set (x);
        }

        void RenalSystemData::
        UrineUreaNitrogenConcentration (const UrineUreaNitrogenConcentration_optional& x)
        {
          this->UrineUreaNitrogenConcentration_ = x;
        }

        void RenalSystemData::
        UrineUreaNitrogenConcentration (::std::unique_ptr< UrineUreaNitrogenConcentration_type > x)
        {
          this->UrineUreaNitrogenConcentration_.set (std::move (x));
        }
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        // RenalSystemData
        //

        RenalSystemData::
        RenalSystemData ()
        : ::mil::tatrc::physiology::datamodel::SystemData (),
          FiltrationFraction_ (this),
          GlomerularFiltrationRate_ (this),
          LeftAfferentArterioleResistance_ (this),
          LeftBowmansCapsulesHydrostaticPressure_ (this),
          LeftBowmansCapsulesOsmoticPressure_ (this),
          LeftEfferentArterioleResistance_ (this),
          LeftGlomerularCapillariesHydrostaticPressure_ (this),
          LeftGlomerularCapillariesOsmoticPressure_ (this),
          LeftGlomerularFiltrationCoefficient_ (this),
          LeftGlomerularFiltrationRate_ (this),
          LeftGlomerularFiltrationSurfaceArea_ (this),
          LeftGlomerularFluidPermeability_ (this),
          LeftFiltrationFraction_ (this),
          LeftNetFiltrationPressure_ (this),
          LeftNetReabsorptionPressure_ (this),
          LeftPeritubularCapillariesHydrostaticPressure_ (this),
          LeftPeritubularCapillariesOsmoticPressure_ (this),
          LeftReabsorptionFiltrationCoefficient_ (this),
          LeftReabsorptionRate_ (this),
          LeftTubularOsmoticPressure_ (this),
          LeftTubularHydrostaticPressure_ (this),
          LeftTubularReabsorptionFiltrationSurfaceArea_ (this),
          LeftTubularReabsorptionFluidPermeability_ (this),
          RenalBloodFlow_ (this),
          RenalPlasmaFlow_ (this),
          RenalVascularResistance_ (this),
          RightAfferentArterioleResistance_ (this),
          RightBowmansCapsulesHydrostaticPressure_ (this),
          RightBowmansCapsulesOsmoticPressure_ (this),
          RightEfferentArterioleResistance_ (this),
          RightGlomerularCapillariesHydrostaticPressure_ (this),
          RightGlomerularCapillariesOsmoticPressure_ (this),
          RightGlomerularFiltrationCoefficient_ (this),
          RightGlomerularFiltrationRate_ (this),
          RightGlomerularFiltrationSurfaceArea_ (this),
          RightGlomerularFluidPermeability_ (this),
          RightFiltrationFraction_ (this),
          RightNetFiltrationPressure_ (this),
          RightNetReabsorptionPressure_ (this),
          RightPeritubularCapillariesHydrostaticPressure_ (this),
          RightPeritubularCapillariesOsmoticPressure_ (this),
          RightReabsorptionFiltrationCoefficient_ (this),
          RightReabsorptionRate_ (this),
          RightTubularOsmoticPressure_ (this),
          RightTubularHydrostaticPressure_ (this),
          RightTubularReabsorptionFiltrationSurfaceArea_ (this),
          RightTubularReabsorptionFluidPermeability_ (this),
          UrinationRate_ (this),
          UrineOsmolality_ (this),
          UrineOsmolarity_ (this),
          UrineProductionRate_ (this),
          UrineSpecificGravity_ (this),
          UrineVolume_ (this),
          UrineUreaNitrogenConcentration_ (this)
        {
        }

        RenalSystemData::
        RenalSystemData (const RenalSystemData& x,
                         ::xml_schema::flags f,
                         ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::SystemData (x, f, c),
          FiltrationFraction_ (x.FiltrationFraction_, f, this),
          GlomerularFiltrationRate_ (x.GlomerularFiltrationRate_, f, this),
          LeftAfferentArterioleResistance_ (x.LeftAfferentArterioleResistance_, f, this),
          LeftBowmansCapsulesHydrostaticPressure_ (x.LeftBowmansCapsulesHydrostaticPressure_, f, this),
          LeftBowmansCapsulesOsmoticPressure_ (x.LeftBowmansCapsulesOsmoticPressure_, f, this),
          LeftEfferentArterioleResistance_ (x.LeftEfferentArterioleResistance_, f, this),
          LeftGlomerularCapillariesHydrostaticPressure_ (x.LeftGlomerularCapillariesHydrostaticPressure_, f, this),
          LeftGlomerularCapillariesOsmoticPressure_ (x.LeftGlomerularCapillariesOsmoticPressure_, f, this),
          LeftGlomerularFiltrationCoefficient_ (x.LeftGlomerularFiltrationCoefficient_, f, this),
          LeftGlomerularFiltrationRate_ (x.LeftGlomerularFiltrationRate_, f, this),
          LeftGlomerularFiltrationSurfaceArea_ (x.LeftGlomerularFiltrationSurfaceArea_, f, this),
          LeftGlomerularFluidPermeability_ (x.LeftGlomerularFluidPermeability_, f, this),
          LeftFiltrationFraction_ (x.LeftFiltrationFraction_, f, this),
          LeftNetFiltrationPressure_ (x.LeftNetFiltrationPressure_, f, this),
          LeftNetReabsorptionPressure_ (x.LeftNetReabsorptionPressure_, f, this),
          LeftPeritubularCapillariesHydrostaticPressure_ (x.LeftPeritubularCapillariesHydrostaticPressure_, f, this),
          LeftPeritubularCapillariesOsmoticPressure_ (x.LeftPeritubularCapillariesOsmoticPressure_, f, this),
          LeftReabsorptionFiltrationCoefficient_ (x.LeftReabsorptionFiltrationCoefficient_, f, this),
          LeftReabsorptionRate_ (x.LeftReabsorptionRate_, f, this),
          LeftTubularOsmoticPressure_ (x.LeftTubularOsmoticPressure_, f, this),
          LeftTubularHydrostaticPressure_ (x.LeftTubularHydrostaticPressure_, f, this),
          LeftTubularReabsorptionFiltrationSurfaceArea_ (x.LeftTubularReabsorptionFiltrationSurfaceArea_, f, this),
          LeftTubularReabsorptionFluidPermeability_ (x.LeftTubularReabsorptionFluidPermeability_, f, this),
          RenalBloodFlow_ (x.RenalBloodFlow_, f, this),
          RenalPlasmaFlow_ (x.RenalPlasmaFlow_, f, this),
          RenalVascularResistance_ (x.RenalVascularResistance_, f, this),
          RightAfferentArterioleResistance_ (x.RightAfferentArterioleResistance_, f, this),
          RightBowmansCapsulesHydrostaticPressure_ (x.RightBowmansCapsulesHydrostaticPressure_, f, this),
          RightBowmansCapsulesOsmoticPressure_ (x.RightBowmansCapsulesOsmoticPressure_, f, this),
          RightEfferentArterioleResistance_ (x.RightEfferentArterioleResistance_, f, this),
          RightGlomerularCapillariesHydrostaticPressure_ (x.RightGlomerularCapillariesHydrostaticPressure_, f, this),
          RightGlomerularCapillariesOsmoticPressure_ (x.RightGlomerularCapillariesOsmoticPressure_, f, this),
          RightGlomerularFiltrationCoefficient_ (x.RightGlomerularFiltrationCoefficient_, f, this),
          RightGlomerularFiltrationRate_ (x.RightGlomerularFiltrationRate_, f, this),
          RightGlomerularFiltrationSurfaceArea_ (x.RightGlomerularFiltrationSurfaceArea_, f, this),
          RightGlomerularFluidPermeability_ (x.RightGlomerularFluidPermeability_, f, this),
          RightFiltrationFraction_ (x.RightFiltrationFraction_, f, this),
          RightNetFiltrationPressure_ (x.RightNetFiltrationPressure_, f, this),
          RightNetReabsorptionPressure_ (x.RightNetReabsorptionPressure_, f, this),
          RightPeritubularCapillariesHydrostaticPressure_ (x.RightPeritubularCapillariesHydrostaticPressure_, f, this),
          RightPeritubularCapillariesOsmoticPressure_ (x.RightPeritubularCapillariesOsmoticPressure_, f, this),
          RightReabsorptionFiltrationCoefficient_ (x.RightReabsorptionFiltrationCoefficient_, f, this),
          RightReabsorptionRate_ (x.RightReabsorptionRate_, f, this),
          RightTubularOsmoticPressure_ (x.RightTubularOsmoticPressure_, f, this),
          RightTubularHydrostaticPressure_ (x.RightTubularHydrostaticPressure_, f, this),
          RightTubularReabsorptionFiltrationSurfaceArea_ (x.RightTubularReabsorptionFiltrationSurfaceArea_, f, this),
          RightTubularReabsorptionFluidPermeability_ (x.RightTubularReabsorptionFluidPermeability_, f, this),
          UrinationRate_ (x.UrinationRate_, f, this),
          UrineOsmolality_ (x.UrineOsmolality_, f, this),
          UrineOsmolarity_ (x.UrineOsmolarity_, f, this),
          UrineProductionRate_ (x.UrineProductionRate_, f, this),
          UrineSpecificGravity_ (x.UrineSpecificGravity_, f, this),
          UrineVolume_ (x.UrineVolume_, f, this),
          UrineUreaNitrogenConcentration_ (x.UrineUreaNitrogenConcentration_, f, this)
        {
        }

        RenalSystemData::
        RenalSystemData (const ::xercesc::DOMElement& e,
                         ::xml_schema::flags f,
                         ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::SystemData (e, f | ::xml_schema::flags::base, c),
          FiltrationFraction_ (this),
          GlomerularFiltrationRate_ (this),
          LeftAfferentArterioleResistance_ (this),
          LeftBowmansCapsulesHydrostaticPressure_ (this),
          LeftBowmansCapsulesOsmoticPressure_ (this),
          LeftEfferentArterioleResistance_ (this),
          LeftGlomerularCapillariesHydrostaticPressure_ (this),
          LeftGlomerularCapillariesOsmoticPressure_ (this),
          LeftGlomerularFiltrationCoefficient_ (this),
          LeftGlomerularFiltrationRate_ (this),
          LeftGlomerularFiltrationSurfaceArea_ (this),
          LeftGlomerularFluidPermeability_ (this),
          LeftFiltrationFraction_ (this),
          LeftNetFiltrationPressure_ (this),
          LeftNetReabsorptionPressure_ (this),
          LeftPeritubularCapillariesHydrostaticPressure_ (this),
          LeftPeritubularCapillariesOsmoticPressure_ (this),
          LeftReabsorptionFiltrationCoefficient_ (this),
          LeftReabsorptionRate_ (this),
          LeftTubularOsmoticPressure_ (this),
          LeftTubularHydrostaticPressure_ (this),
          LeftTubularReabsorptionFiltrationSurfaceArea_ (this),
          LeftTubularReabsorptionFluidPermeability_ (this),
          RenalBloodFlow_ (this),
          RenalPlasmaFlow_ (this),
          RenalVascularResistance_ (this),
          RightAfferentArterioleResistance_ (this),
          RightBowmansCapsulesHydrostaticPressure_ (this),
          RightBowmansCapsulesOsmoticPressure_ (this),
          RightEfferentArterioleResistance_ (this),
          RightGlomerularCapillariesHydrostaticPressure_ (this),
          RightGlomerularCapillariesOsmoticPressure_ (this),
          RightGlomerularFiltrationCoefficient_ (this),
          RightGlomerularFiltrationRate_ (this),
          RightGlomerularFiltrationSurfaceArea_ (this),
          RightGlomerularFluidPermeability_ (this),
          RightFiltrationFraction_ (this),
          RightNetFiltrationPressure_ (this),
          RightNetReabsorptionPressure_ (this),
          RightPeritubularCapillariesHydrostaticPressure_ (this),
          RightPeritubularCapillariesOsmoticPressure_ (this),
          RightReabsorptionFiltrationCoefficient_ (this),
          RightReabsorptionRate_ (this),
          RightTubularOsmoticPressure_ (this),
          RightTubularHydrostaticPressure_ (this),
          RightTubularReabsorptionFiltrationSurfaceArea_ (this),
          RightTubularReabsorptionFluidPermeability_ (this),
          UrinationRate_ (this),
          UrineOsmolality_ (this),
          UrineOsmolarity_ (this),
          UrineProductionRate_ (this),
          UrineSpecificGravity_ (this),
          UrineVolume_ (this),
          UrineUreaNitrogenConcentration_ (this)
        {
          if ((f & ::xml_schema::flags::base) == 0)
          {
            ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
            this->parse (p, f);
          }
        }

        void RenalSystemData::
        parse (::xsd::cxx::xml::dom::parser< char >& p,
               ::xml_schema::flags f)
        {
          this->::mil::tatrc::physiology::datamodel::SystemData::parse (p, f);

          for (; p.more_content (); p.next_content (false))
          {
            const ::xercesc::DOMElement& i (p.cur_element ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            // FiltrationFraction
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "FiltrationFraction",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< FiltrationFraction_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->FiltrationFraction_)
                {
                  ::std::unique_ptr< FiltrationFraction_type > r (
                    dynamic_cast< FiltrationFraction_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->FiltrationFraction_.set (::std::move (r));
                  continue;
                }
              }
            }

            // GlomerularFiltrationRate
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "GlomerularFiltrationRate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< GlomerularFiltrationRate_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->GlomerularFiltrationRate_)
                {
                  ::std::unique_ptr< GlomerularFiltrationRate_type > r (
                    dynamic_cast< GlomerularFiltrationRate_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->GlomerularFiltrationRate_.set (::std::move (r));
                  continue;
                }
              }
            }

            // LeftAfferentArterioleResistance
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "LeftAfferentArterioleResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< LeftAfferentArterioleResistance_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->LeftAfferentArterioleResistance_)
                {
                  ::std::unique_ptr< LeftAfferentArterioleResistance_type > r (
                    dynamic_cast< LeftAfferentArterioleResistance_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->LeftAfferentArterioleResistance_.set (::std::move (r));
                  continue;
                }
              }
            }

            // LeftBowmansCapsulesHydrostaticPressure
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "LeftBowmansCapsulesHydrostaticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< LeftBowmansCapsulesHydrostaticPressure_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->LeftBowmansCapsulesHydrostaticPressure_)
                {
                  ::std::unique_ptr< LeftBowmansCapsulesHydrostaticPressure_type > r (
                    dynamic_cast< LeftBowmansCapsulesHydrostaticPressure_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->LeftBowmansCapsulesHydrostaticPressure_.set (::std::move (r));
                  continue;
                }
              }
            }

            // LeftBowmansCapsulesOsmoticPressure
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "LeftBowmansCapsulesOsmoticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< LeftBowmansCapsulesOsmoticPressure_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->LeftBowmansCapsulesOsmoticPressure_)
                {
                  ::std::unique_ptr< LeftBowmansCapsulesOsmoticPressure_type > r (
                    dynamic_cast< LeftBowmansCapsulesOsmoticPressure_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->LeftBowmansCapsulesOsmoticPressure_.set (::std::move (r));
                  continue;
                }
              }
            }

            // LeftEfferentArterioleResistance
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "LeftEfferentArterioleResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< LeftEfferentArterioleResistance_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->LeftEfferentArterioleResistance_)
                {
                  ::std::unique_ptr< LeftEfferentArterioleResistance_type > r (
                    dynamic_cast< LeftEfferentArterioleResistance_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->LeftEfferentArterioleResistance_.set (::std::move (r));
                  continue;
                }
              }
            }

            // LeftGlomerularCapillariesHydrostaticPressure
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "LeftGlomerularCapillariesHydrostaticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< LeftGlomerularCapillariesHydrostaticPressure_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->LeftGlomerularCapillariesHydrostaticPressure_)
                {
                  ::std::unique_ptr< LeftGlomerularCapillariesHydrostaticPressure_type > r (
                    dynamic_cast< LeftGlomerularCapillariesHydrostaticPressure_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->LeftGlomerularCapillariesHydrostaticPressure_.set (::std::move (r));
                  continue;
                }
              }
            }

            // LeftGlomerularCapillariesOsmoticPressure
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "LeftGlomerularCapillariesOsmoticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< LeftGlomerularCapillariesOsmoticPressure_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->LeftGlomerularCapillariesOsmoticPressure_)
                {
                  ::std::unique_ptr< LeftGlomerularCapillariesOsmoticPressure_type > r (
                    dynamic_cast< LeftGlomerularCapillariesOsmoticPressure_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->LeftGlomerularCapillariesOsmoticPressure_.set (::std::move (r));
                  continue;
                }
              }
            }

            // LeftGlomerularFiltrationCoefficient
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "LeftGlomerularFiltrationCoefficient",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< LeftGlomerularFiltrationCoefficient_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->LeftGlomerularFiltrationCoefficient_)
                {
                  ::std::unique_ptr< LeftGlomerularFiltrationCoefficient_type > r (
                    dynamic_cast< LeftGlomerularFiltrationCoefficient_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->LeftGlomerularFiltrationCoefficient_.set (::std::move (r));
                  continue;
                }
              }
            }

            // LeftGlomerularFiltrationRate
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "LeftGlomerularFiltrationRate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< LeftGlomerularFiltrationRate_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->LeftGlomerularFiltrationRate_)
                {
                  ::std::unique_ptr< LeftGlomerularFiltrationRate_type > r (
                    dynamic_cast< LeftGlomerularFiltrationRate_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->LeftGlomerularFiltrationRate_.set (::std::move (r));
                  continue;
                }
              }
            }

            // LeftGlomerularFiltrationSurfaceArea
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "LeftGlomerularFiltrationSurfaceArea",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< LeftGlomerularFiltrationSurfaceArea_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->LeftGlomerularFiltrationSurfaceArea_)
                {
                  ::std::unique_ptr< LeftGlomerularFiltrationSurfaceArea_type > r (
                    dynamic_cast< LeftGlomerularFiltrationSurfaceArea_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->LeftGlomerularFiltrationSurfaceArea_.set (::std::move (r));
                  continue;
                }
              }
            }

            // LeftGlomerularFluidPermeability
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "LeftGlomerularFluidPermeability",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< LeftGlomerularFluidPermeability_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->LeftGlomerularFluidPermeability_)
                {
                  ::std::unique_ptr< LeftGlomerularFluidPermeability_type > r (
                    dynamic_cast< LeftGlomerularFluidPermeability_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->LeftGlomerularFluidPermeability_.set (::std::move (r));
                  continue;
                }
              }
            }

            // LeftFiltrationFraction
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "LeftFiltrationFraction",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< LeftFiltrationFraction_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->LeftFiltrationFraction_)
                {
                  ::std::unique_ptr< LeftFiltrationFraction_type > r (
                    dynamic_cast< LeftFiltrationFraction_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->LeftFiltrationFraction_.set (::std::move (r));
                  continue;
                }
              }
            }

            // LeftNetFiltrationPressure
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "LeftNetFiltrationPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< LeftNetFiltrationPressure_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->LeftNetFiltrationPressure_)
                {
                  ::std::unique_ptr< LeftNetFiltrationPressure_type > r (
                    dynamic_cast< LeftNetFiltrationPressure_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->LeftNetFiltrationPressure_.set (::std::move (r));
                  continue;
                }
              }
            }

            // LeftNetReabsorptionPressure
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "LeftNetReabsorptionPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< LeftNetReabsorptionPressure_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->LeftNetReabsorptionPressure_)
                {
                  ::std::unique_ptr< LeftNetReabsorptionPressure_type > r (
                    dynamic_cast< LeftNetReabsorptionPressure_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->LeftNetReabsorptionPressure_.set (::std::move (r));
                  continue;
                }
              }
            }

            // LeftPeritubularCapillariesHydrostaticPressure
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "LeftPeritubularCapillariesHydrostaticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< LeftPeritubularCapillariesHydrostaticPressure_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->LeftPeritubularCapillariesHydrostaticPressure_)
                {
                  ::std::unique_ptr< LeftPeritubularCapillariesHydrostaticPressure_type > r (
                    dynamic_cast< LeftPeritubularCapillariesHydrostaticPressure_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->LeftPeritubularCapillariesHydrostaticPressure_.set (::std::move (r));
                  continue;
                }
              }
            }

            // LeftPeritubularCapillariesOsmoticPressure
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "LeftPeritubularCapillariesOsmoticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< LeftPeritubularCapillariesOsmoticPressure_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->LeftPeritubularCapillariesOsmoticPressure_)
                {
                  ::std::unique_ptr< LeftPeritubularCapillariesOsmoticPressure_type > r (
                    dynamic_cast< LeftPeritubularCapillariesOsmoticPressure_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->LeftPeritubularCapillariesOsmoticPressure_.set (::std::move (r));
                  continue;
                }
              }
            }

            // LeftReabsorptionFiltrationCoefficient
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "LeftReabsorptionFiltrationCoefficient",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< LeftReabsorptionFiltrationCoefficient_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->LeftReabsorptionFiltrationCoefficient_)
                {
                  ::std::unique_ptr< LeftReabsorptionFiltrationCoefficient_type > r (
                    dynamic_cast< LeftReabsorptionFiltrationCoefficient_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->LeftReabsorptionFiltrationCoefficient_.set (::std::move (r));
                  continue;
                }
              }
            }

            // LeftReabsorptionRate
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "LeftReabsorptionRate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< LeftReabsorptionRate_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->LeftReabsorptionRate_)
                {
                  ::std::unique_ptr< LeftReabsorptionRate_type > r (
                    dynamic_cast< LeftReabsorptionRate_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->LeftReabsorptionRate_.set (::std::move (r));
                  continue;
                }
              }
            }

            // LeftTubularOsmoticPressure
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "LeftTubularOsmoticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< LeftTubularOsmoticPressure_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->LeftTubularOsmoticPressure_)
                {
                  ::std::unique_ptr< LeftTubularOsmoticPressure_type > r (
                    dynamic_cast< LeftTubularOsmoticPressure_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->LeftTubularOsmoticPressure_.set (::std::move (r));
                  continue;
                }
              }
            }

            // LeftTubularHydrostaticPressure
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "LeftTubularHydrostaticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< LeftTubularHydrostaticPressure_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->LeftTubularHydrostaticPressure_)
                {
                  ::std::unique_ptr< LeftTubularHydrostaticPressure_type > r (
                    dynamic_cast< LeftTubularHydrostaticPressure_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->LeftTubularHydrostaticPressure_.set (::std::move (r));
                  continue;
                }
              }
            }

            // LeftTubularReabsorptionFiltrationSurfaceArea
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "LeftTubularReabsorptionFiltrationSurfaceArea",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< LeftTubularReabsorptionFiltrationSurfaceArea_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->LeftTubularReabsorptionFiltrationSurfaceArea_)
                {
                  ::std::unique_ptr< LeftTubularReabsorptionFiltrationSurfaceArea_type > r (
                    dynamic_cast< LeftTubularReabsorptionFiltrationSurfaceArea_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->LeftTubularReabsorptionFiltrationSurfaceArea_.set (::std::move (r));
                  continue;
                }
              }
            }

            // LeftTubularReabsorptionFluidPermeability
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "LeftTubularReabsorptionFluidPermeability",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< LeftTubularReabsorptionFluidPermeability_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->LeftTubularReabsorptionFluidPermeability_)
                {
                  ::std::unique_ptr< LeftTubularReabsorptionFluidPermeability_type > r (
                    dynamic_cast< LeftTubularReabsorptionFluidPermeability_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->LeftTubularReabsorptionFluidPermeability_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RenalBloodFlow
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RenalBloodFlow",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RenalBloodFlow_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RenalBloodFlow_)
                {
                  ::std::unique_ptr< RenalBloodFlow_type > r (
                    dynamic_cast< RenalBloodFlow_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RenalBloodFlow_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RenalPlasmaFlow
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RenalPlasmaFlow",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RenalPlasmaFlow_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RenalPlasmaFlow_)
                {
                  ::std::unique_ptr< RenalPlasmaFlow_type > r (
                    dynamic_cast< RenalPlasmaFlow_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RenalPlasmaFlow_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RenalVascularResistance
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RenalVascularResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RenalVascularResistance_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RenalVascularResistance_)
                {
                  ::std::unique_ptr< RenalVascularResistance_type > r (
                    dynamic_cast< RenalVascularResistance_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RenalVascularResistance_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RightAfferentArterioleResistance
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RightAfferentArterioleResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RightAfferentArterioleResistance_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RightAfferentArterioleResistance_)
                {
                  ::std::unique_ptr< RightAfferentArterioleResistance_type > r (
                    dynamic_cast< RightAfferentArterioleResistance_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RightAfferentArterioleResistance_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RightBowmansCapsulesHydrostaticPressure
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RightBowmansCapsulesHydrostaticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RightBowmansCapsulesHydrostaticPressure_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RightBowmansCapsulesHydrostaticPressure_)
                {
                  ::std::unique_ptr< RightBowmansCapsulesHydrostaticPressure_type > r (
                    dynamic_cast< RightBowmansCapsulesHydrostaticPressure_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RightBowmansCapsulesHydrostaticPressure_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RightBowmansCapsulesOsmoticPressure
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RightBowmansCapsulesOsmoticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RightBowmansCapsulesOsmoticPressure_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RightBowmansCapsulesOsmoticPressure_)
                {
                  ::std::unique_ptr< RightBowmansCapsulesOsmoticPressure_type > r (
                    dynamic_cast< RightBowmansCapsulesOsmoticPressure_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RightBowmansCapsulesOsmoticPressure_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RightEfferentArterioleResistance
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RightEfferentArterioleResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RightEfferentArterioleResistance_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RightEfferentArterioleResistance_)
                {
                  ::std::unique_ptr< RightEfferentArterioleResistance_type > r (
                    dynamic_cast< RightEfferentArterioleResistance_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RightEfferentArterioleResistance_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RightGlomerularCapillariesHydrostaticPressure
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RightGlomerularCapillariesHydrostaticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RightGlomerularCapillariesHydrostaticPressure_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RightGlomerularCapillariesHydrostaticPressure_)
                {
                  ::std::unique_ptr< RightGlomerularCapillariesHydrostaticPressure_type > r (
                    dynamic_cast< RightGlomerularCapillariesHydrostaticPressure_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RightGlomerularCapillariesHydrostaticPressure_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RightGlomerularCapillariesOsmoticPressure
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RightGlomerularCapillariesOsmoticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RightGlomerularCapillariesOsmoticPressure_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RightGlomerularCapillariesOsmoticPressure_)
                {
                  ::std::unique_ptr< RightGlomerularCapillariesOsmoticPressure_type > r (
                    dynamic_cast< RightGlomerularCapillariesOsmoticPressure_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RightGlomerularCapillariesOsmoticPressure_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RightGlomerularFiltrationCoefficient
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RightGlomerularFiltrationCoefficient",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RightGlomerularFiltrationCoefficient_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RightGlomerularFiltrationCoefficient_)
                {
                  ::std::unique_ptr< RightGlomerularFiltrationCoefficient_type > r (
                    dynamic_cast< RightGlomerularFiltrationCoefficient_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RightGlomerularFiltrationCoefficient_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RightGlomerularFiltrationRate
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RightGlomerularFiltrationRate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RightGlomerularFiltrationRate_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RightGlomerularFiltrationRate_)
                {
                  ::std::unique_ptr< RightGlomerularFiltrationRate_type > r (
                    dynamic_cast< RightGlomerularFiltrationRate_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RightGlomerularFiltrationRate_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RightGlomerularFiltrationSurfaceArea
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RightGlomerularFiltrationSurfaceArea",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RightGlomerularFiltrationSurfaceArea_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RightGlomerularFiltrationSurfaceArea_)
                {
                  ::std::unique_ptr< RightGlomerularFiltrationSurfaceArea_type > r (
                    dynamic_cast< RightGlomerularFiltrationSurfaceArea_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RightGlomerularFiltrationSurfaceArea_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RightGlomerularFluidPermeability
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RightGlomerularFluidPermeability",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RightGlomerularFluidPermeability_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RightGlomerularFluidPermeability_)
                {
                  ::std::unique_ptr< RightGlomerularFluidPermeability_type > r (
                    dynamic_cast< RightGlomerularFluidPermeability_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RightGlomerularFluidPermeability_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RightFiltrationFraction
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RightFiltrationFraction",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RightFiltrationFraction_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RightFiltrationFraction_)
                {
                  ::std::unique_ptr< RightFiltrationFraction_type > r (
                    dynamic_cast< RightFiltrationFraction_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RightFiltrationFraction_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RightNetFiltrationPressure
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RightNetFiltrationPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RightNetFiltrationPressure_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RightNetFiltrationPressure_)
                {
                  ::std::unique_ptr< RightNetFiltrationPressure_type > r (
                    dynamic_cast< RightNetFiltrationPressure_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RightNetFiltrationPressure_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RightNetReabsorptionPressure
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RightNetReabsorptionPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RightNetReabsorptionPressure_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RightNetReabsorptionPressure_)
                {
                  ::std::unique_ptr< RightNetReabsorptionPressure_type > r (
                    dynamic_cast< RightNetReabsorptionPressure_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RightNetReabsorptionPressure_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RightPeritubularCapillariesHydrostaticPressure
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RightPeritubularCapillariesHydrostaticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RightPeritubularCapillariesHydrostaticPressure_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RightPeritubularCapillariesHydrostaticPressure_)
                {
                  ::std::unique_ptr< RightPeritubularCapillariesHydrostaticPressure_type > r (
                    dynamic_cast< RightPeritubularCapillariesHydrostaticPressure_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RightPeritubularCapillariesHydrostaticPressure_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RightPeritubularCapillariesOsmoticPressure
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RightPeritubularCapillariesOsmoticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RightPeritubularCapillariesOsmoticPressure_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RightPeritubularCapillariesOsmoticPressure_)
                {
                  ::std::unique_ptr< RightPeritubularCapillariesOsmoticPressure_type > r (
                    dynamic_cast< RightPeritubularCapillariesOsmoticPressure_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RightPeritubularCapillariesOsmoticPressure_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RightReabsorptionFiltrationCoefficient
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RightReabsorptionFiltrationCoefficient",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RightReabsorptionFiltrationCoefficient_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RightReabsorptionFiltrationCoefficient_)
                {
                  ::std::unique_ptr< RightReabsorptionFiltrationCoefficient_type > r (
                    dynamic_cast< RightReabsorptionFiltrationCoefficient_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RightReabsorptionFiltrationCoefficient_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RightReabsorptionRate
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RightReabsorptionRate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RightReabsorptionRate_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RightReabsorptionRate_)
                {
                  ::std::unique_ptr< RightReabsorptionRate_type > r (
                    dynamic_cast< RightReabsorptionRate_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RightReabsorptionRate_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RightTubularOsmoticPressure
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RightTubularOsmoticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RightTubularOsmoticPressure_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RightTubularOsmoticPressure_)
                {
                  ::std::unique_ptr< RightTubularOsmoticPressure_type > r (
                    dynamic_cast< RightTubularOsmoticPressure_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RightTubularOsmoticPressure_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RightTubularHydrostaticPressure
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RightTubularHydrostaticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RightTubularHydrostaticPressure_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RightTubularHydrostaticPressure_)
                {
                  ::std::unique_ptr< RightTubularHydrostaticPressure_type > r (
                    dynamic_cast< RightTubularHydrostaticPressure_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RightTubularHydrostaticPressure_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RightTubularReabsorptionFiltrationSurfaceArea
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RightTubularReabsorptionFiltrationSurfaceArea",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RightTubularReabsorptionFiltrationSurfaceArea_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RightTubularReabsorptionFiltrationSurfaceArea_)
                {
                  ::std::unique_ptr< RightTubularReabsorptionFiltrationSurfaceArea_type > r (
                    dynamic_cast< RightTubularReabsorptionFiltrationSurfaceArea_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RightTubularReabsorptionFiltrationSurfaceArea_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RightTubularReabsorptionFluidPermeability
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RightTubularReabsorptionFluidPermeability",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RightTubularReabsorptionFluidPermeability_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RightTubularReabsorptionFluidPermeability_)
                {
                  ::std::unique_ptr< RightTubularReabsorptionFluidPermeability_type > r (
                    dynamic_cast< RightTubularReabsorptionFluidPermeability_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RightTubularReabsorptionFluidPermeability_.set (::std::move (r));
                  continue;
                }
              }
            }

            // UrinationRate
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "UrinationRate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< UrinationRate_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->UrinationRate_)
                {
                  ::std::unique_ptr< UrinationRate_type > r (
                    dynamic_cast< UrinationRate_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->UrinationRate_.set (::std::move (r));
                  continue;
                }
              }
            }

            // UrineOsmolality
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "UrineOsmolality",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< UrineOsmolality_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->UrineOsmolality_)
                {
                  ::std::unique_ptr< UrineOsmolality_type > r (
                    dynamic_cast< UrineOsmolality_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->UrineOsmolality_.set (::std::move (r));
                  continue;
                }
              }
            }

            // UrineOsmolarity
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "UrineOsmolarity",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< UrineOsmolarity_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->UrineOsmolarity_)
                {
                  ::std::unique_ptr< UrineOsmolarity_type > r (
                    dynamic_cast< UrineOsmolarity_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->UrineOsmolarity_.set (::std::move (r));
                  continue;
                }
              }
            }

            // UrineProductionRate
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "UrineProductionRate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< UrineProductionRate_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->UrineProductionRate_)
                {
                  ::std::unique_ptr< UrineProductionRate_type > r (
                    dynamic_cast< UrineProductionRate_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->UrineProductionRate_.set (::std::move (r));
                  continue;
                }
              }
            }

            // UrineSpecificGravity
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "UrineSpecificGravity",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< UrineSpecificGravity_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->UrineSpecificGravity_)
                {
                  ::std::unique_ptr< UrineSpecificGravity_type > r (
                    dynamic_cast< UrineSpecificGravity_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->UrineSpecificGravity_.set (::std::move (r));
                  continue;
                }
              }
            }

            // UrineVolume
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "UrineVolume",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< UrineVolume_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->UrineVolume_)
                {
                  ::std::unique_ptr< UrineVolume_type > r (
                    dynamic_cast< UrineVolume_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->UrineVolume_.set (::std::move (r));
                  continue;
                }
              }
            }

            // UrineUreaNitrogenConcentration
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "UrineUreaNitrogenConcentration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< UrineUreaNitrogenConcentration_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->UrineUreaNitrogenConcentration_)
                {
                  ::std::unique_ptr< UrineUreaNitrogenConcentration_type > r (
                    dynamic_cast< UrineUreaNitrogenConcentration_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->UrineUreaNitrogenConcentration_.set (::std::move (r));
                  continue;
                }
              }
            }

            break;
          }
        }

        RenalSystemData* RenalSystemData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class RenalSystemData (*this, f, c);
        }

        RenalSystemData& RenalSystemData::
        operator= (const RenalSystemData& x)
        {
          if (this != &x)
          {
            static_cast< ::mil::tatrc::physiology::datamodel::SystemData& > (*this) = x;
            this->FiltrationFraction_ = x.FiltrationFraction_;
            this->GlomerularFiltrationRate_ = x.GlomerularFiltrationRate_;
            this->LeftAfferentArterioleResistance_ = x.LeftAfferentArterioleResistance_;
            this->LeftBowmansCapsulesHydrostaticPressure_ = x.LeftBowmansCapsulesHydrostaticPressure_;
            this->LeftBowmansCapsulesOsmoticPressure_ = x.LeftBowmansCapsulesOsmoticPressure_;
            this->LeftEfferentArterioleResistance_ = x.LeftEfferentArterioleResistance_;
            this->LeftGlomerularCapillariesHydrostaticPressure_ = x.LeftGlomerularCapillariesHydrostaticPressure_;
            this->LeftGlomerularCapillariesOsmoticPressure_ = x.LeftGlomerularCapillariesOsmoticPressure_;
            this->LeftGlomerularFiltrationCoefficient_ = x.LeftGlomerularFiltrationCoefficient_;
            this->LeftGlomerularFiltrationRate_ = x.LeftGlomerularFiltrationRate_;
            this->LeftGlomerularFiltrationSurfaceArea_ = x.LeftGlomerularFiltrationSurfaceArea_;
            this->LeftGlomerularFluidPermeability_ = x.LeftGlomerularFluidPermeability_;
            this->LeftFiltrationFraction_ = x.LeftFiltrationFraction_;
            this->LeftNetFiltrationPressure_ = x.LeftNetFiltrationPressure_;
            this->LeftNetReabsorptionPressure_ = x.LeftNetReabsorptionPressure_;
            this->LeftPeritubularCapillariesHydrostaticPressure_ = x.LeftPeritubularCapillariesHydrostaticPressure_;
            this->LeftPeritubularCapillariesOsmoticPressure_ = x.LeftPeritubularCapillariesOsmoticPressure_;
            this->LeftReabsorptionFiltrationCoefficient_ = x.LeftReabsorptionFiltrationCoefficient_;
            this->LeftReabsorptionRate_ = x.LeftReabsorptionRate_;
            this->LeftTubularOsmoticPressure_ = x.LeftTubularOsmoticPressure_;
            this->LeftTubularHydrostaticPressure_ = x.LeftTubularHydrostaticPressure_;
            this->LeftTubularReabsorptionFiltrationSurfaceArea_ = x.LeftTubularReabsorptionFiltrationSurfaceArea_;
            this->LeftTubularReabsorptionFluidPermeability_ = x.LeftTubularReabsorptionFluidPermeability_;
            this->RenalBloodFlow_ = x.RenalBloodFlow_;
            this->RenalPlasmaFlow_ = x.RenalPlasmaFlow_;
            this->RenalVascularResistance_ = x.RenalVascularResistance_;
            this->RightAfferentArterioleResistance_ = x.RightAfferentArterioleResistance_;
            this->RightBowmansCapsulesHydrostaticPressure_ = x.RightBowmansCapsulesHydrostaticPressure_;
            this->RightBowmansCapsulesOsmoticPressure_ = x.RightBowmansCapsulesOsmoticPressure_;
            this->RightEfferentArterioleResistance_ = x.RightEfferentArterioleResistance_;
            this->RightGlomerularCapillariesHydrostaticPressure_ = x.RightGlomerularCapillariesHydrostaticPressure_;
            this->RightGlomerularCapillariesOsmoticPressure_ = x.RightGlomerularCapillariesOsmoticPressure_;
            this->RightGlomerularFiltrationCoefficient_ = x.RightGlomerularFiltrationCoefficient_;
            this->RightGlomerularFiltrationRate_ = x.RightGlomerularFiltrationRate_;
            this->RightGlomerularFiltrationSurfaceArea_ = x.RightGlomerularFiltrationSurfaceArea_;
            this->RightGlomerularFluidPermeability_ = x.RightGlomerularFluidPermeability_;
            this->RightFiltrationFraction_ = x.RightFiltrationFraction_;
            this->RightNetFiltrationPressure_ = x.RightNetFiltrationPressure_;
            this->RightNetReabsorptionPressure_ = x.RightNetReabsorptionPressure_;
            this->RightPeritubularCapillariesHydrostaticPressure_ = x.RightPeritubularCapillariesHydrostaticPressure_;
            this->RightPeritubularCapillariesOsmoticPressure_ = x.RightPeritubularCapillariesOsmoticPressure_;
            this->RightReabsorptionFiltrationCoefficient_ = x.RightReabsorptionFiltrationCoefficient_;
            this->RightReabsorptionRate_ = x.RightReabsorptionRate_;
            this->RightTubularOsmoticPressure_ = x.RightTubularOsmoticPressure_;
            this->RightTubularHydrostaticPressure_ = x.RightTubularHydrostaticPressure_;
            this->RightTubularReabsorptionFiltrationSurfaceArea_ = x.RightTubularReabsorptionFiltrationSurfaceArea_;
            this->RightTubularReabsorptionFluidPermeability_ = x.RightTubularReabsorptionFluidPermeability_;
            this->UrinationRate_ = x.UrinationRate_;
            this->UrineOsmolality_ = x.UrineOsmolality_;
            this->UrineOsmolarity_ = x.UrineOsmolarity_;
            this->UrineProductionRate_ = x.UrineProductionRate_;
            this->UrineSpecificGravity_ = x.UrineSpecificGravity_;
            this->UrineVolume_ = x.UrineVolume_;
            this->UrineUreaNitrogenConcentration_ = x.UrineUreaNitrogenConcentration_;
          }

          return *this;
        }

        RenalSystemData::
        ~RenalSystemData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, RenalSystemData >
        _xsd_RenalSystemData_type_factory_init (
          "RenalSystemData",
          "uri:/mil/tatrc/physiology/datamodel");
      }
    }
  }
}

#include <ostream>

#include <xsd/cxx/tree/std-ostream-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::std_ostream_plate< 0, char >
  std_ostream_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        ::std::ostream&
        operator<< (::std::ostream& o, const RenalSystemData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::SystemData& > (i);

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.FiltrationFraction ())
            {
              o << ::std::endl << "FiltrationFraction: ";
              om.insert (o, *i.FiltrationFraction ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.GlomerularFiltrationRate ())
            {
              o << ::std::endl << "GlomerularFiltrationRate: ";
              om.insert (o, *i.GlomerularFiltrationRate ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.LeftAfferentArterioleResistance ())
            {
              o << ::std::endl << "LeftAfferentArterioleResistance: ";
              om.insert (o, *i.LeftAfferentArterioleResistance ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.LeftBowmansCapsulesHydrostaticPressure ())
            {
              o << ::std::endl << "LeftBowmansCapsulesHydrostaticPressure: ";
              om.insert (o, *i.LeftBowmansCapsulesHydrostaticPressure ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.LeftBowmansCapsulesOsmoticPressure ())
            {
              o << ::std::endl << "LeftBowmansCapsulesOsmoticPressure: ";
              om.insert (o, *i.LeftBowmansCapsulesOsmoticPressure ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.LeftEfferentArterioleResistance ())
            {
              o << ::std::endl << "LeftEfferentArterioleResistance: ";
              om.insert (o, *i.LeftEfferentArterioleResistance ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.LeftGlomerularCapillariesHydrostaticPressure ())
            {
              o << ::std::endl << "LeftGlomerularCapillariesHydrostaticPressure: ";
              om.insert (o, *i.LeftGlomerularCapillariesHydrostaticPressure ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.LeftGlomerularCapillariesOsmoticPressure ())
            {
              o << ::std::endl << "LeftGlomerularCapillariesOsmoticPressure: ";
              om.insert (o, *i.LeftGlomerularCapillariesOsmoticPressure ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.LeftGlomerularFiltrationCoefficient ())
            {
              o << ::std::endl << "LeftGlomerularFiltrationCoefficient: ";
              om.insert (o, *i.LeftGlomerularFiltrationCoefficient ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.LeftGlomerularFiltrationRate ())
            {
              o << ::std::endl << "LeftGlomerularFiltrationRate: ";
              om.insert (o, *i.LeftGlomerularFiltrationRate ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.LeftGlomerularFiltrationSurfaceArea ())
            {
              o << ::std::endl << "LeftGlomerularFiltrationSurfaceArea: ";
              om.insert (o, *i.LeftGlomerularFiltrationSurfaceArea ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.LeftGlomerularFluidPermeability ())
            {
              o << ::std::endl << "LeftGlomerularFluidPermeability: ";
              om.insert (o, *i.LeftGlomerularFluidPermeability ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.LeftFiltrationFraction ())
            {
              o << ::std::endl << "LeftFiltrationFraction: ";
              om.insert (o, *i.LeftFiltrationFraction ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.LeftNetFiltrationPressure ())
            {
              o << ::std::endl << "LeftNetFiltrationPressure: ";
              om.insert (o, *i.LeftNetFiltrationPressure ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.LeftNetReabsorptionPressure ())
            {
              o << ::std::endl << "LeftNetReabsorptionPressure: ";
              om.insert (o, *i.LeftNetReabsorptionPressure ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.LeftPeritubularCapillariesHydrostaticPressure ())
            {
              o << ::std::endl << "LeftPeritubularCapillariesHydrostaticPressure: ";
              om.insert (o, *i.LeftPeritubularCapillariesHydrostaticPressure ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.LeftPeritubularCapillariesOsmoticPressure ())
            {
              o << ::std::endl << "LeftPeritubularCapillariesOsmoticPressure: ";
              om.insert (o, *i.LeftPeritubularCapillariesOsmoticPressure ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.LeftReabsorptionFiltrationCoefficient ())
            {
              o << ::std::endl << "LeftReabsorptionFiltrationCoefficient: ";
              om.insert (o, *i.LeftReabsorptionFiltrationCoefficient ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.LeftReabsorptionRate ())
            {
              o << ::std::endl << "LeftReabsorptionRate: ";
              om.insert (o, *i.LeftReabsorptionRate ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.LeftTubularOsmoticPressure ())
            {
              o << ::std::endl << "LeftTubularOsmoticPressure: ";
              om.insert (o, *i.LeftTubularOsmoticPressure ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.LeftTubularHydrostaticPressure ())
            {
              o << ::std::endl << "LeftTubularHydrostaticPressure: ";
              om.insert (o, *i.LeftTubularHydrostaticPressure ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.LeftTubularReabsorptionFiltrationSurfaceArea ())
            {
              o << ::std::endl << "LeftTubularReabsorptionFiltrationSurfaceArea: ";
              om.insert (o, *i.LeftTubularReabsorptionFiltrationSurfaceArea ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.LeftTubularReabsorptionFluidPermeability ())
            {
              o << ::std::endl << "LeftTubularReabsorptionFluidPermeability: ";
              om.insert (o, *i.LeftTubularReabsorptionFluidPermeability ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RenalBloodFlow ())
            {
              o << ::std::endl << "RenalBloodFlow: ";
              om.insert (o, *i.RenalBloodFlow ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RenalPlasmaFlow ())
            {
              o << ::std::endl << "RenalPlasmaFlow: ";
              om.insert (o, *i.RenalPlasmaFlow ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RenalVascularResistance ())
            {
              o << ::std::endl << "RenalVascularResistance: ";
              om.insert (o, *i.RenalVascularResistance ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RightAfferentArterioleResistance ())
            {
              o << ::std::endl << "RightAfferentArterioleResistance: ";
              om.insert (o, *i.RightAfferentArterioleResistance ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RightBowmansCapsulesHydrostaticPressure ())
            {
              o << ::std::endl << "RightBowmansCapsulesHydrostaticPressure: ";
              om.insert (o, *i.RightBowmansCapsulesHydrostaticPressure ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RightBowmansCapsulesOsmoticPressure ())
            {
              o << ::std::endl << "RightBowmansCapsulesOsmoticPressure: ";
              om.insert (o, *i.RightBowmansCapsulesOsmoticPressure ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RightEfferentArterioleResistance ())
            {
              o << ::std::endl << "RightEfferentArterioleResistance: ";
              om.insert (o, *i.RightEfferentArterioleResistance ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RightGlomerularCapillariesHydrostaticPressure ())
            {
              o << ::std::endl << "RightGlomerularCapillariesHydrostaticPressure: ";
              om.insert (o, *i.RightGlomerularCapillariesHydrostaticPressure ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RightGlomerularCapillariesOsmoticPressure ())
            {
              o << ::std::endl << "RightGlomerularCapillariesOsmoticPressure: ";
              om.insert (o, *i.RightGlomerularCapillariesOsmoticPressure ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RightGlomerularFiltrationCoefficient ())
            {
              o << ::std::endl << "RightGlomerularFiltrationCoefficient: ";
              om.insert (o, *i.RightGlomerularFiltrationCoefficient ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RightGlomerularFiltrationRate ())
            {
              o << ::std::endl << "RightGlomerularFiltrationRate: ";
              om.insert (o, *i.RightGlomerularFiltrationRate ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RightGlomerularFiltrationSurfaceArea ())
            {
              o << ::std::endl << "RightGlomerularFiltrationSurfaceArea: ";
              om.insert (o, *i.RightGlomerularFiltrationSurfaceArea ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RightGlomerularFluidPermeability ())
            {
              o << ::std::endl << "RightGlomerularFluidPermeability: ";
              om.insert (o, *i.RightGlomerularFluidPermeability ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RightFiltrationFraction ())
            {
              o << ::std::endl << "RightFiltrationFraction: ";
              om.insert (o, *i.RightFiltrationFraction ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RightNetFiltrationPressure ())
            {
              o << ::std::endl << "RightNetFiltrationPressure: ";
              om.insert (o, *i.RightNetFiltrationPressure ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RightNetReabsorptionPressure ())
            {
              o << ::std::endl << "RightNetReabsorptionPressure: ";
              om.insert (o, *i.RightNetReabsorptionPressure ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RightPeritubularCapillariesHydrostaticPressure ())
            {
              o << ::std::endl << "RightPeritubularCapillariesHydrostaticPressure: ";
              om.insert (o, *i.RightPeritubularCapillariesHydrostaticPressure ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RightPeritubularCapillariesOsmoticPressure ())
            {
              o << ::std::endl << "RightPeritubularCapillariesOsmoticPressure: ";
              om.insert (o, *i.RightPeritubularCapillariesOsmoticPressure ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RightReabsorptionFiltrationCoefficient ())
            {
              o << ::std::endl << "RightReabsorptionFiltrationCoefficient: ";
              om.insert (o, *i.RightReabsorptionFiltrationCoefficient ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RightReabsorptionRate ())
            {
              o << ::std::endl << "RightReabsorptionRate: ";
              om.insert (o, *i.RightReabsorptionRate ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RightTubularOsmoticPressure ())
            {
              o << ::std::endl << "RightTubularOsmoticPressure: ";
              om.insert (o, *i.RightTubularOsmoticPressure ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RightTubularHydrostaticPressure ())
            {
              o << ::std::endl << "RightTubularHydrostaticPressure: ";
              om.insert (o, *i.RightTubularHydrostaticPressure ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RightTubularReabsorptionFiltrationSurfaceArea ())
            {
              o << ::std::endl << "RightTubularReabsorptionFiltrationSurfaceArea: ";
              om.insert (o, *i.RightTubularReabsorptionFiltrationSurfaceArea ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RightTubularReabsorptionFluidPermeability ())
            {
              o << ::std::endl << "RightTubularReabsorptionFluidPermeability: ";
              om.insert (o, *i.RightTubularReabsorptionFluidPermeability ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.UrinationRate ())
            {
              o << ::std::endl << "UrinationRate: ";
              om.insert (o, *i.UrinationRate ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.UrineOsmolality ())
            {
              o << ::std::endl << "UrineOsmolality: ";
              om.insert (o, *i.UrineOsmolality ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.UrineOsmolarity ())
            {
              o << ::std::endl << "UrineOsmolarity: ";
              om.insert (o, *i.UrineOsmolarity ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.UrineProductionRate ())
            {
              o << ::std::endl << "UrineProductionRate: ";
              om.insert (o, *i.UrineProductionRate ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.UrineSpecificGravity ())
            {
              o << ::std::endl << "UrineSpecificGravity: ";
              om.insert (o, *i.UrineSpecificGravity ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.UrineVolume ())
            {
              o << ::std::endl << "UrineVolume: ";
              om.insert (o, *i.UrineVolume ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.UrineUreaNitrogenConcentration ())
            {
              o << ::std::endl << "UrineUreaNitrogenConcentration: ";
              om.insert (o, *i.UrineUreaNitrogenConcentration ());
            }
          }

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, RenalSystemData >
        _xsd_RenalSystemData_std_ostream_init;
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
      }
    }
  }
}

#include <ostream>
#include <xsd/cxx/tree/error-handler.hxx>
#include <xsd/cxx/xml/dom/serialization-source.hxx>

#include <xsd/cxx/tree/type-serializer-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_serializer_plate< 0, char >
  type_serializer_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        void
        operator<< (::xercesc::DOMElement& e, const RenalSystemData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::SystemData& > (i);

          // FiltrationFraction
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.FiltrationFraction ())
            {
              const RenalSystemData::FiltrationFraction_type& x (*i.FiltrationFraction ());
              if (typeid (RenalSystemData::FiltrationFraction_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "FiltrationFraction",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "FiltrationFraction",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // GlomerularFiltrationRate
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.GlomerularFiltrationRate ())
            {
              const RenalSystemData::GlomerularFiltrationRate_type& x (*i.GlomerularFiltrationRate ());
              if (typeid (RenalSystemData::GlomerularFiltrationRate_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "GlomerularFiltrationRate",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "GlomerularFiltrationRate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // LeftAfferentArterioleResistance
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.LeftAfferentArterioleResistance ())
            {
              const RenalSystemData::LeftAfferentArterioleResistance_type& x (*i.LeftAfferentArterioleResistance ());
              if (typeid (RenalSystemData::LeftAfferentArterioleResistance_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "LeftAfferentArterioleResistance",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "LeftAfferentArterioleResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // LeftBowmansCapsulesHydrostaticPressure
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.LeftBowmansCapsulesHydrostaticPressure ())
            {
              const RenalSystemData::LeftBowmansCapsulesHydrostaticPressure_type& x (*i.LeftBowmansCapsulesHydrostaticPressure ());
              if (typeid (RenalSystemData::LeftBowmansCapsulesHydrostaticPressure_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "LeftBowmansCapsulesHydrostaticPressure",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "LeftBowmansCapsulesHydrostaticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // LeftBowmansCapsulesOsmoticPressure
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.LeftBowmansCapsulesOsmoticPressure ())
            {
              const RenalSystemData::LeftBowmansCapsulesOsmoticPressure_type& x (*i.LeftBowmansCapsulesOsmoticPressure ());
              if (typeid (RenalSystemData::LeftBowmansCapsulesOsmoticPressure_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "LeftBowmansCapsulesOsmoticPressure",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "LeftBowmansCapsulesOsmoticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // LeftEfferentArterioleResistance
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.LeftEfferentArterioleResistance ())
            {
              const RenalSystemData::LeftEfferentArterioleResistance_type& x (*i.LeftEfferentArterioleResistance ());
              if (typeid (RenalSystemData::LeftEfferentArterioleResistance_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "LeftEfferentArterioleResistance",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "LeftEfferentArterioleResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // LeftGlomerularCapillariesHydrostaticPressure
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.LeftGlomerularCapillariesHydrostaticPressure ())
            {
              const RenalSystemData::LeftGlomerularCapillariesHydrostaticPressure_type& x (*i.LeftGlomerularCapillariesHydrostaticPressure ());
              if (typeid (RenalSystemData::LeftGlomerularCapillariesHydrostaticPressure_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "LeftGlomerularCapillariesHydrostaticPressure",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "LeftGlomerularCapillariesHydrostaticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // LeftGlomerularCapillariesOsmoticPressure
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.LeftGlomerularCapillariesOsmoticPressure ())
            {
              const RenalSystemData::LeftGlomerularCapillariesOsmoticPressure_type& x (*i.LeftGlomerularCapillariesOsmoticPressure ());
              if (typeid (RenalSystemData::LeftGlomerularCapillariesOsmoticPressure_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "LeftGlomerularCapillariesOsmoticPressure",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "LeftGlomerularCapillariesOsmoticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // LeftGlomerularFiltrationCoefficient
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.LeftGlomerularFiltrationCoefficient ())
            {
              const RenalSystemData::LeftGlomerularFiltrationCoefficient_type& x (*i.LeftGlomerularFiltrationCoefficient ());
              if (typeid (RenalSystemData::LeftGlomerularFiltrationCoefficient_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "LeftGlomerularFiltrationCoefficient",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "LeftGlomerularFiltrationCoefficient",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // LeftGlomerularFiltrationRate
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.LeftGlomerularFiltrationRate ())
            {
              const RenalSystemData::LeftGlomerularFiltrationRate_type& x (*i.LeftGlomerularFiltrationRate ());
              if (typeid (RenalSystemData::LeftGlomerularFiltrationRate_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "LeftGlomerularFiltrationRate",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "LeftGlomerularFiltrationRate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // LeftGlomerularFiltrationSurfaceArea
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.LeftGlomerularFiltrationSurfaceArea ())
            {
              const RenalSystemData::LeftGlomerularFiltrationSurfaceArea_type& x (*i.LeftGlomerularFiltrationSurfaceArea ());
              if (typeid (RenalSystemData::LeftGlomerularFiltrationSurfaceArea_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "LeftGlomerularFiltrationSurfaceArea",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "LeftGlomerularFiltrationSurfaceArea",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // LeftGlomerularFluidPermeability
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.LeftGlomerularFluidPermeability ())
            {
              const RenalSystemData::LeftGlomerularFluidPermeability_type& x (*i.LeftGlomerularFluidPermeability ());
              if (typeid (RenalSystemData::LeftGlomerularFluidPermeability_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "LeftGlomerularFluidPermeability",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "LeftGlomerularFluidPermeability",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // LeftFiltrationFraction
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.LeftFiltrationFraction ())
            {
              const RenalSystemData::LeftFiltrationFraction_type& x (*i.LeftFiltrationFraction ());
              if (typeid (RenalSystemData::LeftFiltrationFraction_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "LeftFiltrationFraction",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "LeftFiltrationFraction",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // LeftNetFiltrationPressure
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.LeftNetFiltrationPressure ())
            {
              const RenalSystemData::LeftNetFiltrationPressure_type& x (*i.LeftNetFiltrationPressure ());
              if (typeid (RenalSystemData::LeftNetFiltrationPressure_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "LeftNetFiltrationPressure",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "LeftNetFiltrationPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // LeftNetReabsorptionPressure
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.LeftNetReabsorptionPressure ())
            {
              const RenalSystemData::LeftNetReabsorptionPressure_type& x (*i.LeftNetReabsorptionPressure ());
              if (typeid (RenalSystemData::LeftNetReabsorptionPressure_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "LeftNetReabsorptionPressure",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "LeftNetReabsorptionPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // LeftPeritubularCapillariesHydrostaticPressure
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.LeftPeritubularCapillariesHydrostaticPressure ())
            {
              const RenalSystemData::LeftPeritubularCapillariesHydrostaticPressure_type& x (*i.LeftPeritubularCapillariesHydrostaticPressure ());
              if (typeid (RenalSystemData::LeftPeritubularCapillariesHydrostaticPressure_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "LeftPeritubularCapillariesHydrostaticPressure",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "LeftPeritubularCapillariesHydrostaticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // LeftPeritubularCapillariesOsmoticPressure
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.LeftPeritubularCapillariesOsmoticPressure ())
            {
              const RenalSystemData::LeftPeritubularCapillariesOsmoticPressure_type& x (*i.LeftPeritubularCapillariesOsmoticPressure ());
              if (typeid (RenalSystemData::LeftPeritubularCapillariesOsmoticPressure_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "LeftPeritubularCapillariesOsmoticPressure",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "LeftPeritubularCapillariesOsmoticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // LeftReabsorptionFiltrationCoefficient
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.LeftReabsorptionFiltrationCoefficient ())
            {
              const RenalSystemData::LeftReabsorptionFiltrationCoefficient_type& x (*i.LeftReabsorptionFiltrationCoefficient ());
              if (typeid (RenalSystemData::LeftReabsorptionFiltrationCoefficient_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "LeftReabsorptionFiltrationCoefficient",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "LeftReabsorptionFiltrationCoefficient",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // LeftReabsorptionRate
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.LeftReabsorptionRate ())
            {
              const RenalSystemData::LeftReabsorptionRate_type& x (*i.LeftReabsorptionRate ());
              if (typeid (RenalSystemData::LeftReabsorptionRate_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "LeftReabsorptionRate",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "LeftReabsorptionRate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // LeftTubularOsmoticPressure
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.LeftTubularOsmoticPressure ())
            {
              const RenalSystemData::LeftTubularOsmoticPressure_type& x (*i.LeftTubularOsmoticPressure ());
              if (typeid (RenalSystemData::LeftTubularOsmoticPressure_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "LeftTubularOsmoticPressure",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "LeftTubularOsmoticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // LeftTubularHydrostaticPressure
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.LeftTubularHydrostaticPressure ())
            {
              const RenalSystemData::LeftTubularHydrostaticPressure_type& x (*i.LeftTubularHydrostaticPressure ());
              if (typeid (RenalSystemData::LeftTubularHydrostaticPressure_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "LeftTubularHydrostaticPressure",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "LeftTubularHydrostaticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // LeftTubularReabsorptionFiltrationSurfaceArea
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.LeftTubularReabsorptionFiltrationSurfaceArea ())
            {
              const RenalSystemData::LeftTubularReabsorptionFiltrationSurfaceArea_type& x (*i.LeftTubularReabsorptionFiltrationSurfaceArea ());
              if (typeid (RenalSystemData::LeftTubularReabsorptionFiltrationSurfaceArea_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "LeftTubularReabsorptionFiltrationSurfaceArea",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "LeftTubularReabsorptionFiltrationSurfaceArea",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // LeftTubularReabsorptionFluidPermeability
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.LeftTubularReabsorptionFluidPermeability ())
            {
              const RenalSystemData::LeftTubularReabsorptionFluidPermeability_type& x (*i.LeftTubularReabsorptionFluidPermeability ());
              if (typeid (RenalSystemData::LeftTubularReabsorptionFluidPermeability_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "LeftTubularReabsorptionFluidPermeability",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "LeftTubularReabsorptionFluidPermeability",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RenalBloodFlow
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RenalBloodFlow ())
            {
              const RenalSystemData::RenalBloodFlow_type& x (*i.RenalBloodFlow ());
              if (typeid (RenalSystemData::RenalBloodFlow_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RenalBloodFlow",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RenalBloodFlow",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RenalPlasmaFlow
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RenalPlasmaFlow ())
            {
              const RenalSystemData::RenalPlasmaFlow_type& x (*i.RenalPlasmaFlow ());
              if (typeid (RenalSystemData::RenalPlasmaFlow_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RenalPlasmaFlow",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RenalPlasmaFlow",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RenalVascularResistance
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RenalVascularResistance ())
            {
              const RenalSystemData::RenalVascularResistance_type& x (*i.RenalVascularResistance ());
              if (typeid (RenalSystemData::RenalVascularResistance_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RenalVascularResistance",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RenalVascularResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RightAfferentArterioleResistance
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RightAfferentArterioleResistance ())
            {
              const RenalSystemData::RightAfferentArterioleResistance_type& x (*i.RightAfferentArterioleResistance ());
              if (typeid (RenalSystemData::RightAfferentArterioleResistance_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RightAfferentArterioleResistance",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RightAfferentArterioleResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RightBowmansCapsulesHydrostaticPressure
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RightBowmansCapsulesHydrostaticPressure ())
            {
              const RenalSystemData::RightBowmansCapsulesHydrostaticPressure_type& x (*i.RightBowmansCapsulesHydrostaticPressure ());
              if (typeid (RenalSystemData::RightBowmansCapsulesHydrostaticPressure_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RightBowmansCapsulesHydrostaticPressure",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RightBowmansCapsulesHydrostaticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RightBowmansCapsulesOsmoticPressure
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RightBowmansCapsulesOsmoticPressure ())
            {
              const RenalSystemData::RightBowmansCapsulesOsmoticPressure_type& x (*i.RightBowmansCapsulesOsmoticPressure ());
              if (typeid (RenalSystemData::RightBowmansCapsulesOsmoticPressure_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RightBowmansCapsulesOsmoticPressure",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RightBowmansCapsulesOsmoticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RightEfferentArterioleResistance
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RightEfferentArterioleResistance ())
            {
              const RenalSystemData::RightEfferentArterioleResistance_type& x (*i.RightEfferentArterioleResistance ());
              if (typeid (RenalSystemData::RightEfferentArterioleResistance_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RightEfferentArterioleResistance",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RightEfferentArterioleResistance",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RightGlomerularCapillariesHydrostaticPressure
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RightGlomerularCapillariesHydrostaticPressure ())
            {
              const RenalSystemData::RightGlomerularCapillariesHydrostaticPressure_type& x (*i.RightGlomerularCapillariesHydrostaticPressure ());
              if (typeid (RenalSystemData::RightGlomerularCapillariesHydrostaticPressure_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RightGlomerularCapillariesHydrostaticPressure",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RightGlomerularCapillariesHydrostaticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RightGlomerularCapillariesOsmoticPressure
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RightGlomerularCapillariesOsmoticPressure ())
            {
              const RenalSystemData::RightGlomerularCapillariesOsmoticPressure_type& x (*i.RightGlomerularCapillariesOsmoticPressure ());
              if (typeid (RenalSystemData::RightGlomerularCapillariesOsmoticPressure_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RightGlomerularCapillariesOsmoticPressure",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RightGlomerularCapillariesOsmoticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RightGlomerularFiltrationCoefficient
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RightGlomerularFiltrationCoefficient ())
            {
              const RenalSystemData::RightGlomerularFiltrationCoefficient_type& x (*i.RightGlomerularFiltrationCoefficient ());
              if (typeid (RenalSystemData::RightGlomerularFiltrationCoefficient_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RightGlomerularFiltrationCoefficient",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RightGlomerularFiltrationCoefficient",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RightGlomerularFiltrationRate
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RightGlomerularFiltrationRate ())
            {
              const RenalSystemData::RightGlomerularFiltrationRate_type& x (*i.RightGlomerularFiltrationRate ());
              if (typeid (RenalSystemData::RightGlomerularFiltrationRate_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RightGlomerularFiltrationRate",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RightGlomerularFiltrationRate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RightGlomerularFiltrationSurfaceArea
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RightGlomerularFiltrationSurfaceArea ())
            {
              const RenalSystemData::RightGlomerularFiltrationSurfaceArea_type& x (*i.RightGlomerularFiltrationSurfaceArea ());
              if (typeid (RenalSystemData::RightGlomerularFiltrationSurfaceArea_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RightGlomerularFiltrationSurfaceArea",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RightGlomerularFiltrationSurfaceArea",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RightGlomerularFluidPermeability
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RightGlomerularFluidPermeability ())
            {
              const RenalSystemData::RightGlomerularFluidPermeability_type& x (*i.RightGlomerularFluidPermeability ());
              if (typeid (RenalSystemData::RightGlomerularFluidPermeability_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RightGlomerularFluidPermeability",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RightGlomerularFluidPermeability",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RightFiltrationFraction
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RightFiltrationFraction ())
            {
              const RenalSystemData::RightFiltrationFraction_type& x (*i.RightFiltrationFraction ());
              if (typeid (RenalSystemData::RightFiltrationFraction_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RightFiltrationFraction",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RightFiltrationFraction",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RightNetFiltrationPressure
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RightNetFiltrationPressure ())
            {
              const RenalSystemData::RightNetFiltrationPressure_type& x (*i.RightNetFiltrationPressure ());
              if (typeid (RenalSystemData::RightNetFiltrationPressure_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RightNetFiltrationPressure",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RightNetFiltrationPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RightNetReabsorptionPressure
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RightNetReabsorptionPressure ())
            {
              const RenalSystemData::RightNetReabsorptionPressure_type& x (*i.RightNetReabsorptionPressure ());
              if (typeid (RenalSystemData::RightNetReabsorptionPressure_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RightNetReabsorptionPressure",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RightNetReabsorptionPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RightPeritubularCapillariesHydrostaticPressure
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RightPeritubularCapillariesHydrostaticPressure ())
            {
              const RenalSystemData::RightPeritubularCapillariesHydrostaticPressure_type& x (*i.RightPeritubularCapillariesHydrostaticPressure ());
              if (typeid (RenalSystemData::RightPeritubularCapillariesHydrostaticPressure_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RightPeritubularCapillariesHydrostaticPressure",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RightPeritubularCapillariesHydrostaticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RightPeritubularCapillariesOsmoticPressure
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RightPeritubularCapillariesOsmoticPressure ())
            {
              const RenalSystemData::RightPeritubularCapillariesOsmoticPressure_type& x (*i.RightPeritubularCapillariesOsmoticPressure ());
              if (typeid (RenalSystemData::RightPeritubularCapillariesOsmoticPressure_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RightPeritubularCapillariesOsmoticPressure",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RightPeritubularCapillariesOsmoticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RightReabsorptionFiltrationCoefficient
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RightReabsorptionFiltrationCoefficient ())
            {
              const RenalSystemData::RightReabsorptionFiltrationCoefficient_type& x (*i.RightReabsorptionFiltrationCoefficient ());
              if (typeid (RenalSystemData::RightReabsorptionFiltrationCoefficient_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RightReabsorptionFiltrationCoefficient",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RightReabsorptionFiltrationCoefficient",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RightReabsorptionRate
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RightReabsorptionRate ())
            {
              const RenalSystemData::RightReabsorptionRate_type& x (*i.RightReabsorptionRate ());
              if (typeid (RenalSystemData::RightReabsorptionRate_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RightReabsorptionRate",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RightReabsorptionRate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RightTubularOsmoticPressure
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RightTubularOsmoticPressure ())
            {
              const RenalSystemData::RightTubularOsmoticPressure_type& x (*i.RightTubularOsmoticPressure ());
              if (typeid (RenalSystemData::RightTubularOsmoticPressure_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RightTubularOsmoticPressure",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RightTubularOsmoticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RightTubularHydrostaticPressure
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RightTubularHydrostaticPressure ())
            {
              const RenalSystemData::RightTubularHydrostaticPressure_type& x (*i.RightTubularHydrostaticPressure ());
              if (typeid (RenalSystemData::RightTubularHydrostaticPressure_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RightTubularHydrostaticPressure",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RightTubularHydrostaticPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RightTubularReabsorptionFiltrationSurfaceArea
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RightTubularReabsorptionFiltrationSurfaceArea ())
            {
              const RenalSystemData::RightTubularReabsorptionFiltrationSurfaceArea_type& x (*i.RightTubularReabsorptionFiltrationSurfaceArea ());
              if (typeid (RenalSystemData::RightTubularReabsorptionFiltrationSurfaceArea_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RightTubularReabsorptionFiltrationSurfaceArea",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RightTubularReabsorptionFiltrationSurfaceArea",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RightTubularReabsorptionFluidPermeability
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RightTubularReabsorptionFluidPermeability ())
            {
              const RenalSystemData::RightTubularReabsorptionFluidPermeability_type& x (*i.RightTubularReabsorptionFluidPermeability ());
              if (typeid (RenalSystemData::RightTubularReabsorptionFluidPermeability_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RightTubularReabsorptionFluidPermeability",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RightTubularReabsorptionFluidPermeability",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // UrinationRate
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.UrinationRate ())
            {
              const RenalSystemData::UrinationRate_type& x (*i.UrinationRate ());
              if (typeid (RenalSystemData::UrinationRate_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "UrinationRate",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "UrinationRate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // UrineOsmolality
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.UrineOsmolality ())
            {
              const RenalSystemData::UrineOsmolality_type& x (*i.UrineOsmolality ());
              if (typeid (RenalSystemData::UrineOsmolality_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "UrineOsmolality",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "UrineOsmolality",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // UrineOsmolarity
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.UrineOsmolarity ())
            {
              const RenalSystemData::UrineOsmolarity_type& x (*i.UrineOsmolarity ());
              if (typeid (RenalSystemData::UrineOsmolarity_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "UrineOsmolarity",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "UrineOsmolarity",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // UrineProductionRate
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.UrineProductionRate ())
            {
              const RenalSystemData::UrineProductionRate_type& x (*i.UrineProductionRate ());
              if (typeid (RenalSystemData::UrineProductionRate_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "UrineProductionRate",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "UrineProductionRate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // UrineSpecificGravity
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.UrineSpecificGravity ())
            {
              const RenalSystemData::UrineSpecificGravity_type& x (*i.UrineSpecificGravity ());
              if (typeid (RenalSystemData::UrineSpecificGravity_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "UrineSpecificGravity",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "UrineSpecificGravity",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // UrineVolume
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.UrineVolume ())
            {
              const RenalSystemData::UrineVolume_type& x (*i.UrineVolume ());
              if (typeid (RenalSystemData::UrineVolume_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "UrineVolume",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "UrineVolume",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // UrineUreaNitrogenConcentration
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.UrineUreaNitrogenConcentration ())
            {
              const RenalSystemData::UrineUreaNitrogenConcentration_type& x (*i.UrineUreaNitrogenConcentration ());
              if (typeid (RenalSystemData::UrineUreaNitrogenConcentration_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "UrineUreaNitrogenConcentration",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "UrineUreaNitrogenConcentration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, RenalSystemData >
        _xsd_RenalSystemData_type_serializer_init (
          "RenalSystemData",
          "uri:/mil/tatrc/physiology/datamodel");
      }
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

