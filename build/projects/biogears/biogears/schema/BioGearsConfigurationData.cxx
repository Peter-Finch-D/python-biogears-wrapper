// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
#include "Properties.hxx"

//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "BioGearsConfigurationData.hxx"

#include "BaroreceptorConfigurationData.hxx"

#include "BloodChemistryConfigurationData.hxx"

#include "CardiovascularConfigurationData.hxx"

#include "CircuitConfigurationData.hxx"

#include "ConstantsConfigurationData.hxx"

#include "DrugsConfigurationData.hxx"

#include "EnergyConfigurationData.hxx"

#include "EnvironmentConfigurationData.hxx"

#include "GastrointestinalConfigurationData.hxx"

#include "NervousConfigurationData.hxx"

#include "RenalConfigurationData.hxx"

#include "RespiratoryConfigurationData.hxx"

#include "TissueConfigurationData.hxx"

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        // BioGearsConfigurationData
        // 

        const BioGearsConfigurationData::BaroreceptorConfiguration_optional& BioGearsConfigurationData::
        BaroreceptorConfiguration () const
        {
          return this->BaroreceptorConfiguration_;
        }

        BioGearsConfigurationData::BaroreceptorConfiguration_optional& BioGearsConfigurationData::
        BaroreceptorConfiguration ()
        {
          return this->BaroreceptorConfiguration_;
        }

        void BioGearsConfigurationData::
        BaroreceptorConfiguration (const BaroreceptorConfiguration_type& x)
        {
          this->BaroreceptorConfiguration_.set (x);
        }

        void BioGearsConfigurationData::
        BaroreceptorConfiguration (const BaroreceptorConfiguration_optional& x)
        {
          this->BaroreceptorConfiguration_ = x;
        }

        void BioGearsConfigurationData::
        BaroreceptorConfiguration (::std::unique_ptr< BaroreceptorConfiguration_type > x)
        {
          this->BaroreceptorConfiguration_.set (std::move (x));
        }

        const BioGearsConfigurationData::BloodChemistryConfiguration_optional& BioGearsConfigurationData::
        BloodChemistryConfiguration () const
        {
          return this->BloodChemistryConfiguration_;
        }

        BioGearsConfigurationData::BloodChemistryConfiguration_optional& BioGearsConfigurationData::
        BloodChemistryConfiguration ()
        {
          return this->BloodChemistryConfiguration_;
        }

        void BioGearsConfigurationData::
        BloodChemistryConfiguration (const BloodChemistryConfiguration_type& x)
        {
          this->BloodChemistryConfiguration_.set (x);
        }

        void BioGearsConfigurationData::
        BloodChemistryConfiguration (const BloodChemistryConfiguration_optional& x)
        {
          this->BloodChemistryConfiguration_ = x;
        }

        void BioGearsConfigurationData::
        BloodChemistryConfiguration (::std::unique_ptr< BloodChemistryConfiguration_type > x)
        {
          this->BloodChemistryConfiguration_.set (std::move (x));
        }

        const BioGearsConfigurationData::CardiovascularConfiguration_optional& BioGearsConfigurationData::
        CardiovascularConfiguration () const
        {
          return this->CardiovascularConfiguration_;
        }

        BioGearsConfigurationData::CardiovascularConfiguration_optional& BioGearsConfigurationData::
        CardiovascularConfiguration ()
        {
          return this->CardiovascularConfiguration_;
        }

        void BioGearsConfigurationData::
        CardiovascularConfiguration (const CardiovascularConfiguration_type& x)
        {
          this->CardiovascularConfiguration_.set (x);
        }

        void BioGearsConfigurationData::
        CardiovascularConfiguration (const CardiovascularConfiguration_optional& x)
        {
          this->CardiovascularConfiguration_ = x;
        }

        void BioGearsConfigurationData::
        CardiovascularConfiguration (::std::unique_ptr< CardiovascularConfiguration_type > x)
        {
          this->CardiovascularConfiguration_.set (std::move (x));
        }

        const BioGearsConfigurationData::CircuitConfiguration_optional& BioGearsConfigurationData::
        CircuitConfiguration () const
        {
          return this->CircuitConfiguration_;
        }

        BioGearsConfigurationData::CircuitConfiguration_optional& BioGearsConfigurationData::
        CircuitConfiguration ()
        {
          return this->CircuitConfiguration_;
        }

        void BioGearsConfigurationData::
        CircuitConfiguration (const CircuitConfiguration_type& x)
        {
          this->CircuitConfiguration_.set (x);
        }

        void BioGearsConfigurationData::
        CircuitConfiguration (const CircuitConfiguration_optional& x)
        {
          this->CircuitConfiguration_ = x;
        }

        void BioGearsConfigurationData::
        CircuitConfiguration (::std::unique_ptr< CircuitConfiguration_type > x)
        {
          this->CircuitConfiguration_.set (std::move (x));
        }

        const BioGearsConfigurationData::ConstantsConfiguration_optional& BioGearsConfigurationData::
        ConstantsConfiguration () const
        {
          return this->ConstantsConfiguration_;
        }

        BioGearsConfigurationData::ConstantsConfiguration_optional& BioGearsConfigurationData::
        ConstantsConfiguration ()
        {
          return this->ConstantsConfiguration_;
        }

        void BioGearsConfigurationData::
        ConstantsConfiguration (const ConstantsConfiguration_type& x)
        {
          this->ConstantsConfiguration_.set (x);
        }

        void BioGearsConfigurationData::
        ConstantsConfiguration (const ConstantsConfiguration_optional& x)
        {
          this->ConstantsConfiguration_ = x;
        }

        void BioGearsConfigurationData::
        ConstantsConfiguration (::std::unique_ptr< ConstantsConfiguration_type > x)
        {
          this->ConstantsConfiguration_.set (std::move (x));
        }

        const BioGearsConfigurationData::DrugsConfiguration_optional& BioGearsConfigurationData::
        DrugsConfiguration () const
        {
          return this->DrugsConfiguration_;
        }

        BioGearsConfigurationData::DrugsConfiguration_optional& BioGearsConfigurationData::
        DrugsConfiguration ()
        {
          return this->DrugsConfiguration_;
        }

        void BioGearsConfigurationData::
        DrugsConfiguration (const DrugsConfiguration_type& x)
        {
          this->DrugsConfiguration_.set (x);
        }

        void BioGearsConfigurationData::
        DrugsConfiguration (const DrugsConfiguration_optional& x)
        {
          this->DrugsConfiguration_ = x;
        }

        void BioGearsConfigurationData::
        DrugsConfiguration (::std::unique_ptr< DrugsConfiguration_type > x)
        {
          this->DrugsConfiguration_.set (std::move (x));
        }

        const BioGearsConfigurationData::EnergyConfiguration_optional& BioGearsConfigurationData::
        EnergyConfiguration () const
        {
          return this->EnergyConfiguration_;
        }

        BioGearsConfigurationData::EnergyConfiguration_optional& BioGearsConfigurationData::
        EnergyConfiguration ()
        {
          return this->EnergyConfiguration_;
        }

        void BioGearsConfigurationData::
        EnergyConfiguration (const EnergyConfiguration_type& x)
        {
          this->EnergyConfiguration_.set (x);
        }

        void BioGearsConfigurationData::
        EnergyConfiguration (const EnergyConfiguration_optional& x)
        {
          this->EnergyConfiguration_ = x;
        }

        void BioGearsConfigurationData::
        EnergyConfiguration (::std::unique_ptr< EnergyConfiguration_type > x)
        {
          this->EnergyConfiguration_.set (std::move (x));
        }

        const BioGearsConfigurationData::EnvironmentConfiguration_optional& BioGearsConfigurationData::
        EnvironmentConfiguration () const
        {
          return this->EnvironmentConfiguration_;
        }

        BioGearsConfigurationData::EnvironmentConfiguration_optional& BioGearsConfigurationData::
        EnvironmentConfiguration ()
        {
          return this->EnvironmentConfiguration_;
        }

        void BioGearsConfigurationData::
        EnvironmentConfiguration (const EnvironmentConfiguration_type& x)
        {
          this->EnvironmentConfiguration_.set (x);
        }

        void BioGearsConfigurationData::
        EnvironmentConfiguration (const EnvironmentConfiguration_optional& x)
        {
          this->EnvironmentConfiguration_ = x;
        }

        void BioGearsConfigurationData::
        EnvironmentConfiguration (::std::unique_ptr< EnvironmentConfiguration_type > x)
        {
          this->EnvironmentConfiguration_.set (std::move (x));
        }

        const BioGearsConfigurationData::GastrointestinalConfiguration_optional& BioGearsConfigurationData::
        GastrointestinalConfiguration () const
        {
          return this->GastrointestinalConfiguration_;
        }

        BioGearsConfigurationData::GastrointestinalConfiguration_optional& BioGearsConfigurationData::
        GastrointestinalConfiguration ()
        {
          return this->GastrointestinalConfiguration_;
        }

        void BioGearsConfigurationData::
        GastrointestinalConfiguration (const GastrointestinalConfiguration_type& x)
        {
          this->GastrointestinalConfiguration_.set (x);
        }

        void BioGearsConfigurationData::
        GastrointestinalConfiguration (const GastrointestinalConfiguration_optional& x)
        {
          this->GastrointestinalConfiguration_ = x;
        }

        void BioGearsConfigurationData::
        GastrointestinalConfiguration (::std::unique_ptr< GastrointestinalConfiguration_type > x)
        {
          this->GastrointestinalConfiguration_.set (std::move (x));
        }

        const BioGearsConfigurationData::NervousConfiguration_optional& BioGearsConfigurationData::
        NervousConfiguration () const
        {
          return this->NervousConfiguration_;
        }

        BioGearsConfigurationData::NervousConfiguration_optional& BioGearsConfigurationData::
        NervousConfiguration ()
        {
          return this->NervousConfiguration_;
        }

        void BioGearsConfigurationData::
        NervousConfiguration (const NervousConfiguration_type& x)
        {
          this->NervousConfiguration_.set (x);
        }

        void BioGearsConfigurationData::
        NervousConfiguration (const NervousConfiguration_optional& x)
        {
          this->NervousConfiguration_ = x;
        }

        void BioGearsConfigurationData::
        NervousConfiguration (::std::unique_ptr< NervousConfiguration_type > x)
        {
          this->NervousConfiguration_.set (std::move (x));
        }

        const BioGearsConfigurationData::RenalConfiguration_optional& BioGearsConfigurationData::
        RenalConfiguration () const
        {
          return this->RenalConfiguration_;
        }

        BioGearsConfigurationData::RenalConfiguration_optional& BioGearsConfigurationData::
        RenalConfiguration ()
        {
          return this->RenalConfiguration_;
        }

        void BioGearsConfigurationData::
        RenalConfiguration (const RenalConfiguration_type& x)
        {
          this->RenalConfiguration_.set (x);
        }

        void BioGearsConfigurationData::
        RenalConfiguration (const RenalConfiguration_optional& x)
        {
          this->RenalConfiguration_ = x;
        }

        void BioGearsConfigurationData::
        RenalConfiguration (::std::unique_ptr< RenalConfiguration_type > x)
        {
          this->RenalConfiguration_.set (std::move (x));
        }

        const BioGearsConfigurationData::RespiratoryConfiguration_optional& BioGearsConfigurationData::
        RespiratoryConfiguration () const
        {
          return this->RespiratoryConfiguration_;
        }

        BioGearsConfigurationData::RespiratoryConfiguration_optional& BioGearsConfigurationData::
        RespiratoryConfiguration ()
        {
          return this->RespiratoryConfiguration_;
        }

        void BioGearsConfigurationData::
        RespiratoryConfiguration (const RespiratoryConfiguration_type& x)
        {
          this->RespiratoryConfiguration_.set (x);
        }

        void BioGearsConfigurationData::
        RespiratoryConfiguration (const RespiratoryConfiguration_optional& x)
        {
          this->RespiratoryConfiguration_ = x;
        }

        void BioGearsConfigurationData::
        RespiratoryConfiguration (::std::unique_ptr< RespiratoryConfiguration_type > x)
        {
          this->RespiratoryConfiguration_.set (std::move (x));
        }

        const BioGearsConfigurationData::TissueConfiguration_optional& BioGearsConfigurationData::
        TissueConfiguration () const
        {
          return this->TissueConfiguration_;
        }

        BioGearsConfigurationData::TissueConfiguration_optional& BioGearsConfigurationData::
        TissueConfiguration ()
        {
          return this->TissueConfiguration_;
        }

        void BioGearsConfigurationData::
        TissueConfiguration (const TissueConfiguration_type& x)
        {
          this->TissueConfiguration_.set (x);
        }

        void BioGearsConfigurationData::
        TissueConfiguration (const TissueConfiguration_optional& x)
        {
          this->TissueConfiguration_ = x;
        }

        void BioGearsConfigurationData::
        TissueConfiguration (::std::unique_ptr< TissueConfiguration_type > x)
        {
          this->TissueConfiguration_.set (std::move (x));
        }
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        // BioGearsConfigurationData
        //

        BioGearsConfigurationData::
        BioGearsConfigurationData ()
        : ::mil::tatrc::physiology::datamodel::PhysiologyEngineConfigurationData (),
          BaroreceptorConfiguration_ (this),
          BloodChemistryConfiguration_ (this),
          CardiovascularConfiguration_ (this),
          CircuitConfiguration_ (this),
          ConstantsConfiguration_ (this),
          DrugsConfiguration_ (this),
          EnergyConfiguration_ (this),
          EnvironmentConfiguration_ (this),
          GastrointestinalConfiguration_ (this),
          NervousConfiguration_ (this),
          RenalConfiguration_ (this),
          RespiratoryConfiguration_ (this),
          TissueConfiguration_ (this)
        {
        }

        BioGearsConfigurationData::
        BioGearsConfigurationData (const BioGearsConfigurationData& x,
                                   ::xml_schema::flags f,
                                   ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::PhysiologyEngineConfigurationData (x, f, c),
          BaroreceptorConfiguration_ (x.BaroreceptorConfiguration_, f, this),
          BloodChemistryConfiguration_ (x.BloodChemistryConfiguration_, f, this),
          CardiovascularConfiguration_ (x.CardiovascularConfiguration_, f, this),
          CircuitConfiguration_ (x.CircuitConfiguration_, f, this),
          ConstantsConfiguration_ (x.ConstantsConfiguration_, f, this),
          DrugsConfiguration_ (x.DrugsConfiguration_, f, this),
          EnergyConfiguration_ (x.EnergyConfiguration_, f, this),
          EnvironmentConfiguration_ (x.EnvironmentConfiguration_, f, this),
          GastrointestinalConfiguration_ (x.GastrointestinalConfiguration_, f, this),
          NervousConfiguration_ (x.NervousConfiguration_, f, this),
          RenalConfiguration_ (x.RenalConfiguration_, f, this),
          RespiratoryConfiguration_ (x.RespiratoryConfiguration_, f, this),
          TissueConfiguration_ (x.TissueConfiguration_, f, this)
        {
        }

        BioGearsConfigurationData::
        BioGearsConfigurationData (const ::xercesc::DOMElement& e,
                                   ::xml_schema::flags f,
                                   ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::PhysiologyEngineConfigurationData (e, f | ::xml_schema::flags::base, c),
          BaroreceptorConfiguration_ (this),
          BloodChemistryConfiguration_ (this),
          CardiovascularConfiguration_ (this),
          CircuitConfiguration_ (this),
          ConstantsConfiguration_ (this),
          DrugsConfiguration_ (this),
          EnergyConfiguration_ (this),
          EnvironmentConfiguration_ (this),
          GastrointestinalConfiguration_ (this),
          NervousConfiguration_ (this),
          RenalConfiguration_ (this),
          RespiratoryConfiguration_ (this),
          TissueConfiguration_ (this)
        {
          if ((f & ::xml_schema::flags::base) == 0)
          {
            ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
            this->parse (p, f);
          }
        }

        void BioGearsConfigurationData::
        parse (::xsd::cxx::xml::dom::parser< char >& p,
               ::xml_schema::flags f)
        {
          this->::mil::tatrc::physiology::datamodel::PhysiologyEngineConfigurationData::parse (p, f);

          for (; p.more_content (); p.next_content (false))
          {
            const ::xercesc::DOMElement& i (p.cur_element ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            // BaroreceptorConfiguration
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "BaroreceptorConfiguration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< BaroreceptorConfiguration_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->BaroreceptorConfiguration_)
                {
                  ::std::unique_ptr< BaroreceptorConfiguration_type > r (
                    dynamic_cast< BaroreceptorConfiguration_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->BaroreceptorConfiguration_.set (::std::move (r));
                  continue;
                }
              }
            }

            // BloodChemistryConfiguration
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "BloodChemistryConfiguration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< BloodChemistryConfiguration_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->BloodChemistryConfiguration_)
                {
                  ::std::unique_ptr< BloodChemistryConfiguration_type > r (
                    dynamic_cast< BloodChemistryConfiguration_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->BloodChemistryConfiguration_.set (::std::move (r));
                  continue;
                }
              }
            }

            // CardiovascularConfiguration
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "CardiovascularConfiguration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< CardiovascularConfiguration_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->CardiovascularConfiguration_)
                {
                  ::std::unique_ptr< CardiovascularConfiguration_type > r (
                    dynamic_cast< CardiovascularConfiguration_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->CardiovascularConfiguration_.set (::std::move (r));
                  continue;
                }
              }
            }

            // CircuitConfiguration
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "CircuitConfiguration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< CircuitConfiguration_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->CircuitConfiguration_)
                {
                  ::std::unique_ptr< CircuitConfiguration_type > r (
                    dynamic_cast< CircuitConfiguration_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->CircuitConfiguration_.set (::std::move (r));
                  continue;
                }
              }
            }

            // ConstantsConfiguration
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "ConstantsConfiguration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< ConstantsConfiguration_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->ConstantsConfiguration_)
                {
                  ::std::unique_ptr< ConstantsConfiguration_type > r (
                    dynamic_cast< ConstantsConfiguration_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->ConstantsConfiguration_.set (::std::move (r));
                  continue;
                }
              }
            }

            // DrugsConfiguration
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "DrugsConfiguration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< DrugsConfiguration_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->DrugsConfiguration_)
                {
                  ::std::unique_ptr< DrugsConfiguration_type > r (
                    dynamic_cast< DrugsConfiguration_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->DrugsConfiguration_.set (::std::move (r));
                  continue;
                }
              }
            }

            // EnergyConfiguration
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "EnergyConfiguration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< EnergyConfiguration_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->EnergyConfiguration_)
                {
                  ::std::unique_ptr< EnergyConfiguration_type > r (
                    dynamic_cast< EnergyConfiguration_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->EnergyConfiguration_.set (::std::move (r));
                  continue;
                }
              }
            }

            // EnvironmentConfiguration
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "EnvironmentConfiguration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< EnvironmentConfiguration_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->EnvironmentConfiguration_)
                {
                  ::std::unique_ptr< EnvironmentConfiguration_type > r (
                    dynamic_cast< EnvironmentConfiguration_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->EnvironmentConfiguration_.set (::std::move (r));
                  continue;
                }
              }
            }

            // GastrointestinalConfiguration
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "GastrointestinalConfiguration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< GastrointestinalConfiguration_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->GastrointestinalConfiguration_)
                {
                  ::std::unique_ptr< GastrointestinalConfiguration_type > r (
                    dynamic_cast< GastrointestinalConfiguration_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->GastrointestinalConfiguration_.set (::std::move (r));
                  continue;
                }
              }
            }

            // NervousConfiguration
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "NervousConfiguration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< NervousConfiguration_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->NervousConfiguration_)
                {
                  ::std::unique_ptr< NervousConfiguration_type > r (
                    dynamic_cast< NervousConfiguration_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->NervousConfiguration_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RenalConfiguration
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RenalConfiguration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RenalConfiguration_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RenalConfiguration_)
                {
                  ::std::unique_ptr< RenalConfiguration_type > r (
                    dynamic_cast< RenalConfiguration_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RenalConfiguration_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RespiratoryConfiguration
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RespiratoryConfiguration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RespiratoryConfiguration_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RespiratoryConfiguration_)
                {
                  ::std::unique_ptr< RespiratoryConfiguration_type > r (
                    dynamic_cast< RespiratoryConfiguration_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RespiratoryConfiguration_.set (::std::move (r));
                  continue;
                }
              }
            }

            // TissueConfiguration
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "TissueConfiguration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< TissueConfiguration_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->TissueConfiguration_)
                {
                  ::std::unique_ptr< TissueConfiguration_type > r (
                    dynamic_cast< TissueConfiguration_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->TissueConfiguration_.set (::std::move (r));
                  continue;
                }
              }
            }

            break;
          }
        }

        BioGearsConfigurationData* BioGearsConfigurationData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class BioGearsConfigurationData (*this, f, c);
        }

        BioGearsConfigurationData& BioGearsConfigurationData::
        operator= (const BioGearsConfigurationData& x)
        {
          if (this != &x)
          {
            static_cast< ::mil::tatrc::physiology::datamodel::PhysiologyEngineConfigurationData& > (*this) = x;
            this->BaroreceptorConfiguration_ = x.BaroreceptorConfiguration_;
            this->BloodChemistryConfiguration_ = x.BloodChemistryConfiguration_;
            this->CardiovascularConfiguration_ = x.CardiovascularConfiguration_;
            this->CircuitConfiguration_ = x.CircuitConfiguration_;
            this->ConstantsConfiguration_ = x.ConstantsConfiguration_;
            this->DrugsConfiguration_ = x.DrugsConfiguration_;
            this->EnergyConfiguration_ = x.EnergyConfiguration_;
            this->EnvironmentConfiguration_ = x.EnvironmentConfiguration_;
            this->GastrointestinalConfiguration_ = x.GastrointestinalConfiguration_;
            this->NervousConfiguration_ = x.NervousConfiguration_;
            this->RenalConfiguration_ = x.RenalConfiguration_;
            this->RespiratoryConfiguration_ = x.RespiratoryConfiguration_;
            this->TissueConfiguration_ = x.TissueConfiguration_;
          }

          return *this;
        }

        BioGearsConfigurationData::
        ~BioGearsConfigurationData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, BioGearsConfigurationData >
        _xsd_BioGearsConfigurationData_type_factory_init (
          "BioGearsConfigurationData",
          "uri:/mil/tatrc/physiology/datamodel");
      }
    }
  }
}

#include <ostream>

#include <xsd/cxx/tree/std-ostream-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::std_ostream_plate< 0, char >
  std_ostream_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        ::std::ostream&
        operator<< (::std::ostream& o, const BioGearsConfigurationData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::PhysiologyEngineConfigurationData& > (i);

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.BaroreceptorConfiguration ())
            {
              o << ::std::endl << "BaroreceptorConfiguration: ";
              om.insert (o, *i.BaroreceptorConfiguration ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.BloodChemistryConfiguration ())
            {
              o << ::std::endl << "BloodChemistryConfiguration: ";
              om.insert (o, *i.BloodChemistryConfiguration ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.CardiovascularConfiguration ())
            {
              o << ::std::endl << "CardiovascularConfiguration: ";
              om.insert (o, *i.CardiovascularConfiguration ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.CircuitConfiguration ())
            {
              o << ::std::endl << "CircuitConfiguration: ";
              om.insert (o, *i.CircuitConfiguration ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.ConstantsConfiguration ())
            {
              o << ::std::endl << "ConstantsConfiguration: ";
              om.insert (o, *i.ConstantsConfiguration ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.DrugsConfiguration ())
            {
              o << ::std::endl << "DrugsConfiguration: ";
              om.insert (o, *i.DrugsConfiguration ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.EnergyConfiguration ())
            {
              o << ::std::endl << "EnergyConfiguration: ";
              om.insert (o, *i.EnergyConfiguration ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.EnvironmentConfiguration ())
            {
              o << ::std::endl << "EnvironmentConfiguration: ";
              om.insert (o, *i.EnvironmentConfiguration ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.GastrointestinalConfiguration ())
            {
              o << ::std::endl << "GastrointestinalConfiguration: ";
              om.insert (o, *i.GastrointestinalConfiguration ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.NervousConfiguration ())
            {
              o << ::std::endl << "NervousConfiguration: ";
              om.insert (o, *i.NervousConfiguration ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RenalConfiguration ())
            {
              o << ::std::endl << "RenalConfiguration: ";
              om.insert (o, *i.RenalConfiguration ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RespiratoryConfiguration ())
            {
              o << ::std::endl << "RespiratoryConfiguration: ";
              om.insert (o, *i.RespiratoryConfiguration ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.TissueConfiguration ())
            {
              o << ::std::endl << "TissueConfiguration: ";
              om.insert (o, *i.TissueConfiguration ());
            }
          }

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, BioGearsConfigurationData >
        _xsd_BioGearsConfigurationData_std_ostream_init;
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
      }
    }
  }
}

#include <ostream>
#include <xsd/cxx/tree/error-handler.hxx>
#include <xsd/cxx/xml/dom/serialization-source.hxx>

#include <xsd/cxx/tree/type-serializer-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_serializer_plate< 0, char >
  type_serializer_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        void
        operator<< (::xercesc::DOMElement& e, const BioGearsConfigurationData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::PhysiologyEngineConfigurationData& > (i);

          // BaroreceptorConfiguration
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.BaroreceptorConfiguration ())
            {
              const BioGearsConfigurationData::BaroreceptorConfiguration_type& x (*i.BaroreceptorConfiguration ());
              if (typeid (BioGearsConfigurationData::BaroreceptorConfiguration_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "BaroreceptorConfiguration",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "BaroreceptorConfiguration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // BloodChemistryConfiguration
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.BloodChemistryConfiguration ())
            {
              const BioGearsConfigurationData::BloodChemistryConfiguration_type& x (*i.BloodChemistryConfiguration ());
              if (typeid (BioGearsConfigurationData::BloodChemistryConfiguration_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "BloodChemistryConfiguration",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "BloodChemistryConfiguration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // CardiovascularConfiguration
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.CardiovascularConfiguration ())
            {
              const BioGearsConfigurationData::CardiovascularConfiguration_type& x (*i.CardiovascularConfiguration ());
              if (typeid (BioGearsConfigurationData::CardiovascularConfiguration_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "CardiovascularConfiguration",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "CardiovascularConfiguration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // CircuitConfiguration
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.CircuitConfiguration ())
            {
              const BioGearsConfigurationData::CircuitConfiguration_type& x (*i.CircuitConfiguration ());
              if (typeid (BioGearsConfigurationData::CircuitConfiguration_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "CircuitConfiguration",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "CircuitConfiguration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // ConstantsConfiguration
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.ConstantsConfiguration ())
            {
              const BioGearsConfigurationData::ConstantsConfiguration_type& x (*i.ConstantsConfiguration ());
              if (typeid (BioGearsConfigurationData::ConstantsConfiguration_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "ConstantsConfiguration",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "ConstantsConfiguration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // DrugsConfiguration
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.DrugsConfiguration ())
            {
              const BioGearsConfigurationData::DrugsConfiguration_type& x (*i.DrugsConfiguration ());
              if (typeid (BioGearsConfigurationData::DrugsConfiguration_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "DrugsConfiguration",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "DrugsConfiguration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // EnergyConfiguration
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.EnergyConfiguration ())
            {
              const BioGearsConfigurationData::EnergyConfiguration_type& x (*i.EnergyConfiguration ());
              if (typeid (BioGearsConfigurationData::EnergyConfiguration_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "EnergyConfiguration",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "EnergyConfiguration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // EnvironmentConfiguration
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.EnvironmentConfiguration ())
            {
              const BioGearsConfigurationData::EnvironmentConfiguration_type& x (*i.EnvironmentConfiguration ());
              if (typeid (BioGearsConfigurationData::EnvironmentConfiguration_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "EnvironmentConfiguration",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "EnvironmentConfiguration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // GastrointestinalConfiguration
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.GastrointestinalConfiguration ())
            {
              const BioGearsConfigurationData::GastrointestinalConfiguration_type& x (*i.GastrointestinalConfiguration ());
              if (typeid (BioGearsConfigurationData::GastrointestinalConfiguration_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "GastrointestinalConfiguration",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "GastrointestinalConfiguration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // NervousConfiguration
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.NervousConfiguration ())
            {
              const BioGearsConfigurationData::NervousConfiguration_type& x (*i.NervousConfiguration ());
              if (typeid (BioGearsConfigurationData::NervousConfiguration_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "NervousConfiguration",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "NervousConfiguration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RenalConfiguration
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RenalConfiguration ())
            {
              const BioGearsConfigurationData::RenalConfiguration_type& x (*i.RenalConfiguration ());
              if (typeid (BioGearsConfigurationData::RenalConfiguration_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RenalConfiguration",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RenalConfiguration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RespiratoryConfiguration
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RespiratoryConfiguration ())
            {
              const BioGearsConfigurationData::RespiratoryConfiguration_type& x (*i.RespiratoryConfiguration ());
              if (typeid (BioGearsConfigurationData::RespiratoryConfiguration_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RespiratoryConfiguration",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RespiratoryConfiguration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // TissueConfiguration
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.TissueConfiguration ())
            {
              const BioGearsConfigurationData::TissueConfiguration_type& x (*i.TissueConfiguration ());
              if (typeid (BioGearsConfigurationData::TissueConfiguration_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "TissueConfiguration",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "TissueConfiguration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, BioGearsConfigurationData >
        _xsd_BioGearsConfigurationData_type_serializer_init (
          "BioGearsConfigurationData",
          "uri:/mil/tatrc/physiology/datamodel");
      }
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

