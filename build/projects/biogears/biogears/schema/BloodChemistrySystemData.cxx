// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
#include "Properties.hxx"

//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "BloodChemistrySystemData.hxx"

#include "ScalarMassPerVolumeData.hxx"

#include "ScalarData.hxx"

#include "ScalarHeatCapacitancePerMassData.hxx"

#include "ScalarFractionData.hxx"

#include "ScalarMassData.hxx"

#include "ScalarAmountPerVolumeData.hxx"

#include "ScalarVolumeData.hxx"

#include "ScalarPressureData.hxx"

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        // BloodChemistrySystemData
        // 

        const BloodChemistrySystemData::BloodDensity_optional& BloodChemistrySystemData::
        BloodDensity () const
        {
          return this->BloodDensity_;
        }

        BloodChemistrySystemData::BloodDensity_optional& BloodChemistrySystemData::
        BloodDensity ()
        {
          return this->BloodDensity_;
        }

        void BloodChemistrySystemData::
        BloodDensity (const BloodDensity_type& x)
        {
          this->BloodDensity_.set (x);
        }

        void BloodChemistrySystemData::
        BloodDensity (const BloodDensity_optional& x)
        {
          this->BloodDensity_ = x;
        }

        void BloodChemistrySystemData::
        BloodDensity (::std::unique_ptr< BloodDensity_type > x)
        {
          this->BloodDensity_.set (std::move (x));
        }

        const BloodChemistrySystemData::BloodPH_optional& BloodChemistrySystemData::
        BloodPH () const
        {
          return this->BloodPH_;
        }

        BloodChemistrySystemData::BloodPH_optional& BloodChemistrySystemData::
        BloodPH ()
        {
          return this->BloodPH_;
        }

        void BloodChemistrySystemData::
        BloodPH (const BloodPH_type& x)
        {
          this->BloodPH_.set (x);
        }

        void BloodChemistrySystemData::
        BloodPH (const BloodPH_optional& x)
        {
          this->BloodPH_ = x;
        }

        void BloodChemistrySystemData::
        BloodPH (::std::unique_ptr< BloodPH_type > x)
        {
          this->BloodPH_.set (std::move (x));
        }

        const BloodChemistrySystemData::BloodSpecificHeat_optional& BloodChemistrySystemData::
        BloodSpecificHeat () const
        {
          return this->BloodSpecificHeat_;
        }

        BloodChemistrySystemData::BloodSpecificHeat_optional& BloodChemistrySystemData::
        BloodSpecificHeat ()
        {
          return this->BloodSpecificHeat_;
        }

        void BloodChemistrySystemData::
        BloodSpecificHeat (const BloodSpecificHeat_type& x)
        {
          this->BloodSpecificHeat_.set (x);
        }

        void BloodChemistrySystemData::
        BloodSpecificHeat (const BloodSpecificHeat_optional& x)
        {
          this->BloodSpecificHeat_ = x;
        }

        void BloodChemistrySystemData::
        BloodSpecificHeat (::std::unique_ptr< BloodSpecificHeat_type > x)
        {
          this->BloodSpecificHeat_.set (std::move (x));
        }

        const BloodChemistrySystemData::BloodUreaNitrogenConcentration_optional& BloodChemistrySystemData::
        BloodUreaNitrogenConcentration () const
        {
          return this->BloodUreaNitrogenConcentration_;
        }

        BloodChemistrySystemData::BloodUreaNitrogenConcentration_optional& BloodChemistrySystemData::
        BloodUreaNitrogenConcentration ()
        {
          return this->BloodUreaNitrogenConcentration_;
        }

        void BloodChemistrySystemData::
        BloodUreaNitrogenConcentration (const BloodUreaNitrogenConcentration_type& x)
        {
          this->BloodUreaNitrogenConcentration_.set (x);
        }

        void BloodChemistrySystemData::
        BloodUreaNitrogenConcentration (const BloodUreaNitrogenConcentration_optional& x)
        {
          this->BloodUreaNitrogenConcentration_ = x;
        }

        void BloodChemistrySystemData::
        BloodUreaNitrogenConcentration (::std::unique_ptr< BloodUreaNitrogenConcentration_type > x)
        {
          this->BloodUreaNitrogenConcentration_.set (std::move (x));
        }

        const BloodChemistrySystemData::CarbonDioxideSaturation_optional& BloodChemistrySystemData::
        CarbonDioxideSaturation () const
        {
          return this->CarbonDioxideSaturation_;
        }

        BloodChemistrySystemData::CarbonDioxideSaturation_optional& BloodChemistrySystemData::
        CarbonDioxideSaturation ()
        {
          return this->CarbonDioxideSaturation_;
        }

        void BloodChemistrySystemData::
        CarbonDioxideSaturation (const CarbonDioxideSaturation_type& x)
        {
          this->CarbonDioxideSaturation_.set (x);
        }

        void BloodChemistrySystemData::
        CarbonDioxideSaturation (const CarbonDioxideSaturation_optional& x)
        {
          this->CarbonDioxideSaturation_ = x;
        }

        void BloodChemistrySystemData::
        CarbonDioxideSaturation (::std::unique_ptr< CarbonDioxideSaturation_type > x)
        {
          this->CarbonDioxideSaturation_.set (std::move (x));
        }

        const BloodChemistrySystemData::CarbonMonoxideSaturation_optional& BloodChemistrySystemData::
        CarbonMonoxideSaturation () const
        {
          return this->CarbonMonoxideSaturation_;
        }

        BloodChemistrySystemData::CarbonMonoxideSaturation_optional& BloodChemistrySystemData::
        CarbonMonoxideSaturation ()
        {
          return this->CarbonMonoxideSaturation_;
        }

        void BloodChemistrySystemData::
        CarbonMonoxideSaturation (const CarbonMonoxideSaturation_type& x)
        {
          this->CarbonMonoxideSaturation_.set (x);
        }

        void BloodChemistrySystemData::
        CarbonMonoxideSaturation (const CarbonMonoxideSaturation_optional& x)
        {
          this->CarbonMonoxideSaturation_ = x;
        }

        void BloodChemistrySystemData::
        CarbonMonoxideSaturation (::std::unique_ptr< CarbonMonoxideSaturation_type > x)
        {
          this->CarbonMonoxideSaturation_.set (std::move (x));
        }

        const BloodChemistrySystemData::Hematocrit_optional& BloodChemistrySystemData::
        Hematocrit () const
        {
          return this->Hematocrit_;
        }

        BloodChemistrySystemData::Hematocrit_optional& BloodChemistrySystemData::
        Hematocrit ()
        {
          return this->Hematocrit_;
        }

        void BloodChemistrySystemData::
        Hematocrit (const Hematocrit_type& x)
        {
          this->Hematocrit_.set (x);
        }

        void BloodChemistrySystemData::
        Hematocrit (const Hematocrit_optional& x)
        {
          this->Hematocrit_ = x;
        }

        void BloodChemistrySystemData::
        Hematocrit (::std::unique_ptr< Hematocrit_type > x)
        {
          this->Hematocrit_.set (std::move (x));
        }

        const BloodChemistrySystemData::HemoglobinContent_optional& BloodChemistrySystemData::
        HemoglobinContent () const
        {
          return this->HemoglobinContent_;
        }

        BloodChemistrySystemData::HemoglobinContent_optional& BloodChemistrySystemData::
        HemoglobinContent ()
        {
          return this->HemoglobinContent_;
        }

        void BloodChemistrySystemData::
        HemoglobinContent (const HemoglobinContent_type& x)
        {
          this->HemoglobinContent_.set (x);
        }

        void BloodChemistrySystemData::
        HemoglobinContent (const HemoglobinContent_optional& x)
        {
          this->HemoglobinContent_ = x;
        }

        void BloodChemistrySystemData::
        HemoglobinContent (::std::unique_ptr< HemoglobinContent_type > x)
        {
          this->HemoglobinContent_.set (std::move (x));
        }

        const BloodChemistrySystemData::OxygenSaturation_optional& BloodChemistrySystemData::
        OxygenSaturation () const
        {
          return this->OxygenSaturation_;
        }

        BloodChemistrySystemData::OxygenSaturation_optional& BloodChemistrySystemData::
        OxygenSaturation ()
        {
          return this->OxygenSaturation_;
        }

        void BloodChemistrySystemData::
        OxygenSaturation (const OxygenSaturation_type& x)
        {
          this->OxygenSaturation_.set (x);
        }

        void BloodChemistrySystemData::
        OxygenSaturation (const OxygenSaturation_optional& x)
        {
          this->OxygenSaturation_ = x;
        }

        void BloodChemistrySystemData::
        OxygenSaturation (::std::unique_ptr< OxygenSaturation_type > x)
        {
          this->OxygenSaturation_.set (std::move (x));
        }

        const BloodChemistrySystemData::Phosphate_optional& BloodChemistrySystemData::
        Phosphate () const
        {
          return this->Phosphate_;
        }

        BloodChemistrySystemData::Phosphate_optional& BloodChemistrySystemData::
        Phosphate ()
        {
          return this->Phosphate_;
        }

        void BloodChemistrySystemData::
        Phosphate (const Phosphate_type& x)
        {
          this->Phosphate_.set (x);
        }

        void BloodChemistrySystemData::
        Phosphate (const Phosphate_optional& x)
        {
          this->Phosphate_ = x;
        }

        void BloodChemistrySystemData::
        Phosphate (::std::unique_ptr< Phosphate_type > x)
        {
          this->Phosphate_.set (std::move (x));
        }

        const BloodChemistrySystemData::PlasmaVolume_optional& BloodChemistrySystemData::
        PlasmaVolume () const
        {
          return this->PlasmaVolume_;
        }

        BloodChemistrySystemData::PlasmaVolume_optional& BloodChemistrySystemData::
        PlasmaVolume ()
        {
          return this->PlasmaVolume_;
        }

        void BloodChemistrySystemData::
        PlasmaVolume (const PlasmaVolume_type& x)
        {
          this->PlasmaVolume_.set (x);
        }

        void BloodChemistrySystemData::
        PlasmaVolume (const PlasmaVolume_optional& x)
        {
          this->PlasmaVolume_ = x;
        }

        void BloodChemistrySystemData::
        PlasmaVolume (::std::unique_ptr< PlasmaVolume_type > x)
        {
          this->PlasmaVolume_.set (std::move (x));
        }

        const BloodChemistrySystemData::PulseOximetry_optional& BloodChemistrySystemData::
        PulseOximetry () const
        {
          return this->PulseOximetry_;
        }

        BloodChemistrySystemData::PulseOximetry_optional& BloodChemistrySystemData::
        PulseOximetry ()
        {
          return this->PulseOximetry_;
        }

        void BloodChemistrySystemData::
        PulseOximetry (const PulseOximetry_type& x)
        {
          this->PulseOximetry_.set (x);
        }

        void BloodChemistrySystemData::
        PulseOximetry (const PulseOximetry_optional& x)
        {
          this->PulseOximetry_ = x;
        }

        void BloodChemistrySystemData::
        PulseOximetry (::std::unique_ptr< PulseOximetry_type > x)
        {
          this->PulseOximetry_.set (std::move (x));
        }

        const BloodChemistrySystemData::RedBloodCellCount_optional& BloodChemistrySystemData::
        RedBloodCellCount () const
        {
          return this->RedBloodCellCount_;
        }

        BloodChemistrySystemData::RedBloodCellCount_optional& BloodChemistrySystemData::
        RedBloodCellCount ()
        {
          return this->RedBloodCellCount_;
        }

        void BloodChemistrySystemData::
        RedBloodCellCount (const RedBloodCellCount_type& x)
        {
          this->RedBloodCellCount_.set (x);
        }

        void BloodChemistrySystemData::
        RedBloodCellCount (const RedBloodCellCount_optional& x)
        {
          this->RedBloodCellCount_ = x;
        }

        void BloodChemistrySystemData::
        RedBloodCellCount (::std::unique_ptr< RedBloodCellCount_type > x)
        {
          this->RedBloodCellCount_.set (std::move (x));
        }

        const BloodChemistrySystemData::ShuntFraction_optional& BloodChemistrySystemData::
        ShuntFraction () const
        {
          return this->ShuntFraction_;
        }

        BloodChemistrySystemData::ShuntFraction_optional& BloodChemistrySystemData::
        ShuntFraction ()
        {
          return this->ShuntFraction_;
        }

        void BloodChemistrySystemData::
        ShuntFraction (const ShuntFraction_type& x)
        {
          this->ShuntFraction_.set (x);
        }

        void BloodChemistrySystemData::
        ShuntFraction (const ShuntFraction_optional& x)
        {
          this->ShuntFraction_ = x;
        }

        void BloodChemistrySystemData::
        ShuntFraction (::std::unique_ptr< ShuntFraction_type > x)
        {
          this->ShuntFraction_.set (std::move (x));
        }

        const BloodChemistrySystemData::StrongIonDifference_optional& BloodChemistrySystemData::
        StrongIonDifference () const
        {
          return this->StrongIonDifference_;
        }

        BloodChemistrySystemData::StrongIonDifference_optional& BloodChemistrySystemData::
        StrongIonDifference ()
        {
          return this->StrongIonDifference_;
        }

        void BloodChemistrySystemData::
        StrongIonDifference (const StrongIonDifference_type& x)
        {
          this->StrongIonDifference_.set (x);
        }

        void BloodChemistrySystemData::
        StrongIonDifference (const StrongIonDifference_optional& x)
        {
          this->StrongIonDifference_ = x;
        }

        void BloodChemistrySystemData::
        StrongIonDifference (::std::unique_ptr< StrongIonDifference_type > x)
        {
          this->StrongIonDifference_.set (std::move (x));
        }

        const BloodChemistrySystemData::TotalProteinConcentration_optional& BloodChemistrySystemData::
        TotalProteinConcentration () const
        {
          return this->TotalProteinConcentration_;
        }

        BloodChemistrySystemData::TotalProteinConcentration_optional& BloodChemistrySystemData::
        TotalProteinConcentration ()
        {
          return this->TotalProteinConcentration_;
        }

        void BloodChemistrySystemData::
        TotalProteinConcentration (const TotalProteinConcentration_type& x)
        {
          this->TotalProteinConcentration_.set (x);
        }

        void BloodChemistrySystemData::
        TotalProteinConcentration (const TotalProteinConcentration_optional& x)
        {
          this->TotalProteinConcentration_ = x;
        }

        void BloodChemistrySystemData::
        TotalProteinConcentration (::std::unique_ptr< TotalProteinConcentration_type > x)
        {
          this->TotalProteinConcentration_.set (std::move (x));
        }

        const BloodChemistrySystemData::VolumeFractionNeutralLipidInPlasma_optional& BloodChemistrySystemData::
        VolumeFractionNeutralLipidInPlasma () const
        {
          return this->VolumeFractionNeutralLipidInPlasma_;
        }

        BloodChemistrySystemData::VolumeFractionNeutralLipidInPlasma_optional& BloodChemistrySystemData::
        VolumeFractionNeutralLipidInPlasma ()
        {
          return this->VolumeFractionNeutralLipidInPlasma_;
        }

        void BloodChemistrySystemData::
        VolumeFractionNeutralLipidInPlasma (const VolumeFractionNeutralLipidInPlasma_type& x)
        {
          this->VolumeFractionNeutralLipidInPlasma_.set (x);
        }

        void BloodChemistrySystemData::
        VolumeFractionNeutralLipidInPlasma (const VolumeFractionNeutralLipidInPlasma_optional& x)
        {
          this->VolumeFractionNeutralLipidInPlasma_ = x;
        }

        void BloodChemistrySystemData::
        VolumeFractionNeutralLipidInPlasma (::std::unique_ptr< VolumeFractionNeutralLipidInPlasma_type > x)
        {
          this->VolumeFractionNeutralLipidInPlasma_.set (std::move (x));
        }

        const BloodChemistrySystemData::VolumeFractionNeutralPhospholipidInPlasma_optional& BloodChemistrySystemData::
        VolumeFractionNeutralPhospholipidInPlasma () const
        {
          return this->VolumeFractionNeutralPhospholipidInPlasma_;
        }

        BloodChemistrySystemData::VolumeFractionNeutralPhospholipidInPlasma_optional& BloodChemistrySystemData::
        VolumeFractionNeutralPhospholipidInPlasma ()
        {
          return this->VolumeFractionNeutralPhospholipidInPlasma_;
        }

        void BloodChemistrySystemData::
        VolumeFractionNeutralPhospholipidInPlasma (const VolumeFractionNeutralPhospholipidInPlasma_type& x)
        {
          this->VolumeFractionNeutralPhospholipidInPlasma_.set (x);
        }

        void BloodChemistrySystemData::
        VolumeFractionNeutralPhospholipidInPlasma (const VolumeFractionNeutralPhospholipidInPlasma_optional& x)
        {
          this->VolumeFractionNeutralPhospholipidInPlasma_ = x;
        }

        void BloodChemistrySystemData::
        VolumeFractionNeutralPhospholipidInPlasma (::std::unique_ptr< VolumeFractionNeutralPhospholipidInPlasma_type > x)
        {
          this->VolumeFractionNeutralPhospholipidInPlasma_.set (std::move (x));
        }

        const BloodChemistrySystemData::WhiteBloodCellCount_optional& BloodChemistrySystemData::
        WhiteBloodCellCount () const
        {
          return this->WhiteBloodCellCount_;
        }

        BloodChemistrySystemData::WhiteBloodCellCount_optional& BloodChemistrySystemData::
        WhiteBloodCellCount ()
        {
          return this->WhiteBloodCellCount_;
        }

        void BloodChemistrySystemData::
        WhiteBloodCellCount (const WhiteBloodCellCount_type& x)
        {
          this->WhiteBloodCellCount_.set (x);
        }

        void BloodChemistrySystemData::
        WhiteBloodCellCount (const WhiteBloodCellCount_optional& x)
        {
          this->WhiteBloodCellCount_ = x;
        }

        void BloodChemistrySystemData::
        WhiteBloodCellCount (::std::unique_ptr< WhiteBloodCellCount_type > x)
        {
          this->WhiteBloodCellCount_.set (std::move (x));
        }

        const BloodChemistrySystemData::RedBloodCellAcetylcholinesterase_optional& BloodChemistrySystemData::
        RedBloodCellAcetylcholinesterase () const
        {
          return this->RedBloodCellAcetylcholinesterase_;
        }

        BloodChemistrySystemData::RedBloodCellAcetylcholinesterase_optional& BloodChemistrySystemData::
        RedBloodCellAcetylcholinesterase ()
        {
          return this->RedBloodCellAcetylcholinesterase_;
        }

        void BloodChemistrySystemData::
        RedBloodCellAcetylcholinesterase (const RedBloodCellAcetylcholinesterase_type& x)
        {
          this->RedBloodCellAcetylcholinesterase_.set (x);
        }

        void BloodChemistrySystemData::
        RedBloodCellAcetylcholinesterase (const RedBloodCellAcetylcholinesterase_optional& x)
        {
          this->RedBloodCellAcetylcholinesterase_ = x;
        }

        void BloodChemistrySystemData::
        RedBloodCellAcetylcholinesterase (::std::unique_ptr< RedBloodCellAcetylcholinesterase_type > x)
        {
          this->RedBloodCellAcetylcholinesterase_.set (std::move (x));
        }

        const BloodChemistrySystemData::TotalBilirubin_optional& BloodChemistrySystemData::
        TotalBilirubin () const
        {
          return this->TotalBilirubin_;
        }

        BloodChemistrySystemData::TotalBilirubin_optional& BloodChemistrySystemData::
        TotalBilirubin ()
        {
          return this->TotalBilirubin_;
        }

        void BloodChemistrySystemData::
        TotalBilirubin (const TotalBilirubin_type& x)
        {
          this->TotalBilirubin_.set (x);
        }

        void BloodChemistrySystemData::
        TotalBilirubin (const TotalBilirubin_optional& x)
        {
          this->TotalBilirubin_ = x;
        }

        void BloodChemistrySystemData::
        TotalBilirubin (::std::unique_ptr< TotalBilirubin_type > x)
        {
          this->TotalBilirubin_.set (std::move (x));
        }

        const BloodChemistrySystemData::ArterialCarbonDioxidePressure_optional& BloodChemistrySystemData::
        ArterialCarbonDioxidePressure () const
        {
          return this->ArterialCarbonDioxidePressure_;
        }

        BloodChemistrySystemData::ArterialCarbonDioxidePressure_optional& BloodChemistrySystemData::
        ArterialCarbonDioxidePressure ()
        {
          return this->ArterialCarbonDioxidePressure_;
        }

        void BloodChemistrySystemData::
        ArterialCarbonDioxidePressure (const ArterialCarbonDioxidePressure_type& x)
        {
          this->ArterialCarbonDioxidePressure_.set (x);
        }

        void BloodChemistrySystemData::
        ArterialCarbonDioxidePressure (const ArterialCarbonDioxidePressure_optional& x)
        {
          this->ArterialCarbonDioxidePressure_ = x;
        }

        void BloodChemistrySystemData::
        ArterialCarbonDioxidePressure (::std::unique_ptr< ArterialCarbonDioxidePressure_type > x)
        {
          this->ArterialCarbonDioxidePressure_.set (std::move (x));
        }

        const BloodChemistrySystemData::ArterialOxygenPressure_optional& BloodChemistrySystemData::
        ArterialOxygenPressure () const
        {
          return this->ArterialOxygenPressure_;
        }

        BloodChemistrySystemData::ArterialOxygenPressure_optional& BloodChemistrySystemData::
        ArterialOxygenPressure ()
        {
          return this->ArterialOxygenPressure_;
        }

        void BloodChemistrySystemData::
        ArterialOxygenPressure (const ArterialOxygenPressure_type& x)
        {
          this->ArterialOxygenPressure_.set (x);
        }

        void BloodChemistrySystemData::
        ArterialOxygenPressure (const ArterialOxygenPressure_optional& x)
        {
          this->ArterialOxygenPressure_ = x;
        }

        void BloodChemistrySystemData::
        ArterialOxygenPressure (::std::unique_ptr< ArterialOxygenPressure_type > x)
        {
          this->ArterialOxygenPressure_.set (std::move (x));
        }

        const BloodChemistrySystemData::PulmonaryArterialCarbonDioxidePressure_optional& BloodChemistrySystemData::
        PulmonaryArterialCarbonDioxidePressure () const
        {
          return this->PulmonaryArterialCarbonDioxidePressure_;
        }

        BloodChemistrySystemData::PulmonaryArterialCarbonDioxidePressure_optional& BloodChemistrySystemData::
        PulmonaryArterialCarbonDioxidePressure ()
        {
          return this->PulmonaryArterialCarbonDioxidePressure_;
        }

        void BloodChemistrySystemData::
        PulmonaryArterialCarbonDioxidePressure (const PulmonaryArterialCarbonDioxidePressure_type& x)
        {
          this->PulmonaryArterialCarbonDioxidePressure_.set (x);
        }

        void BloodChemistrySystemData::
        PulmonaryArterialCarbonDioxidePressure (const PulmonaryArterialCarbonDioxidePressure_optional& x)
        {
          this->PulmonaryArterialCarbonDioxidePressure_ = x;
        }

        void BloodChemistrySystemData::
        PulmonaryArterialCarbonDioxidePressure (::std::unique_ptr< PulmonaryArterialCarbonDioxidePressure_type > x)
        {
          this->PulmonaryArterialCarbonDioxidePressure_.set (std::move (x));
        }

        const BloodChemistrySystemData::PulmonaryArterialOxygenPressure_optional& BloodChemistrySystemData::
        PulmonaryArterialOxygenPressure () const
        {
          return this->PulmonaryArterialOxygenPressure_;
        }

        BloodChemistrySystemData::PulmonaryArterialOxygenPressure_optional& BloodChemistrySystemData::
        PulmonaryArterialOxygenPressure ()
        {
          return this->PulmonaryArterialOxygenPressure_;
        }

        void BloodChemistrySystemData::
        PulmonaryArterialOxygenPressure (const PulmonaryArterialOxygenPressure_type& x)
        {
          this->PulmonaryArterialOxygenPressure_.set (x);
        }

        void BloodChemistrySystemData::
        PulmonaryArterialOxygenPressure (const PulmonaryArterialOxygenPressure_optional& x)
        {
          this->PulmonaryArterialOxygenPressure_ = x;
        }

        void BloodChemistrySystemData::
        PulmonaryArterialOxygenPressure (::std::unique_ptr< PulmonaryArterialOxygenPressure_type > x)
        {
          this->PulmonaryArterialOxygenPressure_.set (std::move (x));
        }

        const BloodChemistrySystemData::PulmonaryVenousCarbonDioxidePressure_optional& BloodChemistrySystemData::
        PulmonaryVenousCarbonDioxidePressure () const
        {
          return this->PulmonaryVenousCarbonDioxidePressure_;
        }

        BloodChemistrySystemData::PulmonaryVenousCarbonDioxidePressure_optional& BloodChemistrySystemData::
        PulmonaryVenousCarbonDioxidePressure ()
        {
          return this->PulmonaryVenousCarbonDioxidePressure_;
        }

        void BloodChemistrySystemData::
        PulmonaryVenousCarbonDioxidePressure (const PulmonaryVenousCarbonDioxidePressure_type& x)
        {
          this->PulmonaryVenousCarbonDioxidePressure_.set (x);
        }

        void BloodChemistrySystemData::
        PulmonaryVenousCarbonDioxidePressure (const PulmonaryVenousCarbonDioxidePressure_optional& x)
        {
          this->PulmonaryVenousCarbonDioxidePressure_ = x;
        }

        void BloodChemistrySystemData::
        PulmonaryVenousCarbonDioxidePressure (::std::unique_ptr< PulmonaryVenousCarbonDioxidePressure_type > x)
        {
          this->PulmonaryVenousCarbonDioxidePressure_.set (std::move (x));
        }

        const BloodChemistrySystemData::PulmonaryVenousOxygenPressure_optional& BloodChemistrySystemData::
        PulmonaryVenousOxygenPressure () const
        {
          return this->PulmonaryVenousOxygenPressure_;
        }

        BloodChemistrySystemData::PulmonaryVenousOxygenPressure_optional& BloodChemistrySystemData::
        PulmonaryVenousOxygenPressure ()
        {
          return this->PulmonaryVenousOxygenPressure_;
        }

        void BloodChemistrySystemData::
        PulmonaryVenousOxygenPressure (const PulmonaryVenousOxygenPressure_type& x)
        {
          this->PulmonaryVenousOxygenPressure_.set (x);
        }

        void BloodChemistrySystemData::
        PulmonaryVenousOxygenPressure (const PulmonaryVenousOxygenPressure_optional& x)
        {
          this->PulmonaryVenousOxygenPressure_ = x;
        }

        void BloodChemistrySystemData::
        PulmonaryVenousOxygenPressure (::std::unique_ptr< PulmonaryVenousOxygenPressure_type > x)
        {
          this->PulmonaryVenousOxygenPressure_.set (std::move (x));
        }

        const BloodChemistrySystemData::VenousCarbonDioxidePressure_optional& BloodChemistrySystemData::
        VenousCarbonDioxidePressure () const
        {
          return this->VenousCarbonDioxidePressure_;
        }

        BloodChemistrySystemData::VenousCarbonDioxidePressure_optional& BloodChemistrySystemData::
        VenousCarbonDioxidePressure ()
        {
          return this->VenousCarbonDioxidePressure_;
        }

        void BloodChemistrySystemData::
        VenousCarbonDioxidePressure (const VenousCarbonDioxidePressure_type& x)
        {
          this->VenousCarbonDioxidePressure_.set (x);
        }

        void BloodChemistrySystemData::
        VenousCarbonDioxidePressure (const VenousCarbonDioxidePressure_optional& x)
        {
          this->VenousCarbonDioxidePressure_ = x;
        }

        void BloodChemistrySystemData::
        VenousCarbonDioxidePressure (::std::unique_ptr< VenousCarbonDioxidePressure_type > x)
        {
          this->VenousCarbonDioxidePressure_.set (std::move (x));
        }

        const BloodChemistrySystemData::VenousOxygenPressure_optional& BloodChemistrySystemData::
        VenousOxygenPressure () const
        {
          return this->VenousOxygenPressure_;
        }

        BloodChemistrySystemData::VenousOxygenPressure_optional& BloodChemistrySystemData::
        VenousOxygenPressure ()
        {
          return this->VenousOxygenPressure_;
        }

        void BloodChemistrySystemData::
        VenousOxygenPressure (const VenousOxygenPressure_type& x)
        {
          this->VenousOxygenPressure_.set (x);
        }

        void BloodChemistrySystemData::
        VenousOxygenPressure (const VenousOxygenPressure_optional& x)
        {
          this->VenousOxygenPressure_ = x;
        }

        void BloodChemistrySystemData::
        VenousOxygenPressure (::std::unique_ptr< VenousOxygenPressure_type > x)
        {
          this->VenousOxygenPressure_.set (std::move (x));
        }
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        // BloodChemistrySystemData
        //

        BloodChemistrySystemData::
        BloodChemistrySystemData ()
        : ::mil::tatrc::physiology::datamodel::SystemData (),
          BloodDensity_ (this),
          BloodPH_ (this),
          BloodSpecificHeat_ (this),
          BloodUreaNitrogenConcentration_ (this),
          CarbonDioxideSaturation_ (this),
          CarbonMonoxideSaturation_ (this),
          Hematocrit_ (this),
          HemoglobinContent_ (this),
          OxygenSaturation_ (this),
          Phosphate_ (this),
          PlasmaVolume_ (this),
          PulseOximetry_ (this),
          RedBloodCellCount_ (this),
          ShuntFraction_ (this),
          StrongIonDifference_ (this),
          TotalProteinConcentration_ (this),
          VolumeFractionNeutralLipidInPlasma_ (this),
          VolumeFractionNeutralPhospholipidInPlasma_ (this),
          WhiteBloodCellCount_ (this),
          RedBloodCellAcetylcholinesterase_ (this),
          TotalBilirubin_ (this),
          ArterialCarbonDioxidePressure_ (this),
          ArterialOxygenPressure_ (this),
          PulmonaryArterialCarbonDioxidePressure_ (this),
          PulmonaryArterialOxygenPressure_ (this),
          PulmonaryVenousCarbonDioxidePressure_ (this),
          PulmonaryVenousOxygenPressure_ (this),
          VenousCarbonDioxidePressure_ (this),
          VenousOxygenPressure_ (this)
        {
        }

        BloodChemistrySystemData::
        BloodChemistrySystemData (const BloodChemistrySystemData& x,
                                  ::xml_schema::flags f,
                                  ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::SystemData (x, f, c),
          BloodDensity_ (x.BloodDensity_, f, this),
          BloodPH_ (x.BloodPH_, f, this),
          BloodSpecificHeat_ (x.BloodSpecificHeat_, f, this),
          BloodUreaNitrogenConcentration_ (x.BloodUreaNitrogenConcentration_, f, this),
          CarbonDioxideSaturation_ (x.CarbonDioxideSaturation_, f, this),
          CarbonMonoxideSaturation_ (x.CarbonMonoxideSaturation_, f, this),
          Hematocrit_ (x.Hematocrit_, f, this),
          HemoglobinContent_ (x.HemoglobinContent_, f, this),
          OxygenSaturation_ (x.OxygenSaturation_, f, this),
          Phosphate_ (x.Phosphate_, f, this),
          PlasmaVolume_ (x.PlasmaVolume_, f, this),
          PulseOximetry_ (x.PulseOximetry_, f, this),
          RedBloodCellCount_ (x.RedBloodCellCount_, f, this),
          ShuntFraction_ (x.ShuntFraction_, f, this),
          StrongIonDifference_ (x.StrongIonDifference_, f, this),
          TotalProteinConcentration_ (x.TotalProteinConcentration_, f, this),
          VolumeFractionNeutralLipidInPlasma_ (x.VolumeFractionNeutralLipidInPlasma_, f, this),
          VolumeFractionNeutralPhospholipidInPlasma_ (x.VolumeFractionNeutralPhospholipidInPlasma_, f, this),
          WhiteBloodCellCount_ (x.WhiteBloodCellCount_, f, this),
          RedBloodCellAcetylcholinesterase_ (x.RedBloodCellAcetylcholinesterase_, f, this),
          TotalBilirubin_ (x.TotalBilirubin_, f, this),
          ArterialCarbonDioxidePressure_ (x.ArterialCarbonDioxidePressure_, f, this),
          ArterialOxygenPressure_ (x.ArterialOxygenPressure_, f, this),
          PulmonaryArterialCarbonDioxidePressure_ (x.PulmonaryArterialCarbonDioxidePressure_, f, this),
          PulmonaryArterialOxygenPressure_ (x.PulmonaryArterialOxygenPressure_, f, this),
          PulmonaryVenousCarbonDioxidePressure_ (x.PulmonaryVenousCarbonDioxidePressure_, f, this),
          PulmonaryVenousOxygenPressure_ (x.PulmonaryVenousOxygenPressure_, f, this),
          VenousCarbonDioxidePressure_ (x.VenousCarbonDioxidePressure_, f, this),
          VenousOxygenPressure_ (x.VenousOxygenPressure_, f, this)
        {
        }

        BloodChemistrySystemData::
        BloodChemistrySystemData (const ::xercesc::DOMElement& e,
                                  ::xml_schema::flags f,
                                  ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::SystemData (e, f | ::xml_schema::flags::base, c),
          BloodDensity_ (this),
          BloodPH_ (this),
          BloodSpecificHeat_ (this),
          BloodUreaNitrogenConcentration_ (this),
          CarbonDioxideSaturation_ (this),
          CarbonMonoxideSaturation_ (this),
          Hematocrit_ (this),
          HemoglobinContent_ (this),
          OxygenSaturation_ (this),
          Phosphate_ (this),
          PlasmaVolume_ (this),
          PulseOximetry_ (this),
          RedBloodCellCount_ (this),
          ShuntFraction_ (this),
          StrongIonDifference_ (this),
          TotalProteinConcentration_ (this),
          VolumeFractionNeutralLipidInPlasma_ (this),
          VolumeFractionNeutralPhospholipidInPlasma_ (this),
          WhiteBloodCellCount_ (this),
          RedBloodCellAcetylcholinesterase_ (this),
          TotalBilirubin_ (this),
          ArterialCarbonDioxidePressure_ (this),
          ArterialOxygenPressure_ (this),
          PulmonaryArterialCarbonDioxidePressure_ (this),
          PulmonaryArterialOxygenPressure_ (this),
          PulmonaryVenousCarbonDioxidePressure_ (this),
          PulmonaryVenousOxygenPressure_ (this),
          VenousCarbonDioxidePressure_ (this),
          VenousOxygenPressure_ (this)
        {
          if ((f & ::xml_schema::flags::base) == 0)
          {
            ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
            this->parse (p, f);
          }
        }

        void BloodChemistrySystemData::
        parse (::xsd::cxx::xml::dom::parser< char >& p,
               ::xml_schema::flags f)
        {
          this->::mil::tatrc::physiology::datamodel::SystemData::parse (p, f);

          for (; p.more_content (); p.next_content (false))
          {
            const ::xercesc::DOMElement& i (p.cur_element ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            // BloodDensity
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "BloodDensity",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< BloodDensity_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->BloodDensity_)
                {
                  ::std::unique_ptr< BloodDensity_type > r (
                    dynamic_cast< BloodDensity_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->BloodDensity_.set (::std::move (r));
                  continue;
                }
              }
            }

            // BloodPH
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "BloodPH",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< BloodPH_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->BloodPH_)
                {
                  ::std::unique_ptr< BloodPH_type > r (
                    dynamic_cast< BloodPH_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->BloodPH_.set (::std::move (r));
                  continue;
                }
              }
            }

            // BloodSpecificHeat
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "BloodSpecificHeat",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< BloodSpecificHeat_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->BloodSpecificHeat_)
                {
                  ::std::unique_ptr< BloodSpecificHeat_type > r (
                    dynamic_cast< BloodSpecificHeat_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->BloodSpecificHeat_.set (::std::move (r));
                  continue;
                }
              }
            }

            // BloodUreaNitrogenConcentration
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "BloodUreaNitrogenConcentration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< BloodUreaNitrogenConcentration_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->BloodUreaNitrogenConcentration_)
                {
                  ::std::unique_ptr< BloodUreaNitrogenConcentration_type > r (
                    dynamic_cast< BloodUreaNitrogenConcentration_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->BloodUreaNitrogenConcentration_.set (::std::move (r));
                  continue;
                }
              }
            }

            // CarbonDioxideSaturation
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "CarbonDioxideSaturation",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< CarbonDioxideSaturation_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->CarbonDioxideSaturation_)
                {
                  ::std::unique_ptr< CarbonDioxideSaturation_type > r (
                    dynamic_cast< CarbonDioxideSaturation_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->CarbonDioxideSaturation_.set (::std::move (r));
                  continue;
                }
              }
            }

            // CarbonMonoxideSaturation
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "CarbonMonoxideSaturation",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< CarbonMonoxideSaturation_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->CarbonMonoxideSaturation_)
                {
                  ::std::unique_ptr< CarbonMonoxideSaturation_type > r (
                    dynamic_cast< CarbonMonoxideSaturation_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->CarbonMonoxideSaturation_.set (::std::move (r));
                  continue;
                }
              }
            }

            // Hematocrit
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "Hematocrit",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< Hematocrit_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->Hematocrit_)
                {
                  ::std::unique_ptr< Hematocrit_type > r (
                    dynamic_cast< Hematocrit_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->Hematocrit_.set (::std::move (r));
                  continue;
                }
              }
            }

            // HemoglobinContent
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "HemoglobinContent",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< HemoglobinContent_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->HemoglobinContent_)
                {
                  ::std::unique_ptr< HemoglobinContent_type > r (
                    dynamic_cast< HemoglobinContent_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->HemoglobinContent_.set (::std::move (r));
                  continue;
                }
              }
            }

            // OxygenSaturation
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "OxygenSaturation",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< OxygenSaturation_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->OxygenSaturation_)
                {
                  ::std::unique_ptr< OxygenSaturation_type > r (
                    dynamic_cast< OxygenSaturation_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->OxygenSaturation_.set (::std::move (r));
                  continue;
                }
              }
            }

            // Phosphate
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "Phosphate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< Phosphate_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->Phosphate_)
                {
                  ::std::unique_ptr< Phosphate_type > r (
                    dynamic_cast< Phosphate_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->Phosphate_.set (::std::move (r));
                  continue;
                }
              }
            }

            // PlasmaVolume
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "PlasmaVolume",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< PlasmaVolume_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->PlasmaVolume_)
                {
                  ::std::unique_ptr< PlasmaVolume_type > r (
                    dynamic_cast< PlasmaVolume_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->PlasmaVolume_.set (::std::move (r));
                  continue;
                }
              }
            }

            // PulseOximetry
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "PulseOximetry",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< PulseOximetry_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->PulseOximetry_)
                {
                  ::std::unique_ptr< PulseOximetry_type > r (
                    dynamic_cast< PulseOximetry_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->PulseOximetry_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RedBloodCellCount
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RedBloodCellCount",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RedBloodCellCount_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RedBloodCellCount_)
                {
                  ::std::unique_ptr< RedBloodCellCount_type > r (
                    dynamic_cast< RedBloodCellCount_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RedBloodCellCount_.set (::std::move (r));
                  continue;
                }
              }
            }

            // ShuntFraction
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "ShuntFraction",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< ShuntFraction_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->ShuntFraction_)
                {
                  ::std::unique_ptr< ShuntFraction_type > r (
                    dynamic_cast< ShuntFraction_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->ShuntFraction_.set (::std::move (r));
                  continue;
                }
              }
            }

            // StrongIonDifference
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "StrongIonDifference",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< StrongIonDifference_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->StrongIonDifference_)
                {
                  ::std::unique_ptr< StrongIonDifference_type > r (
                    dynamic_cast< StrongIonDifference_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->StrongIonDifference_.set (::std::move (r));
                  continue;
                }
              }
            }

            // TotalProteinConcentration
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "TotalProteinConcentration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< TotalProteinConcentration_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->TotalProteinConcentration_)
                {
                  ::std::unique_ptr< TotalProteinConcentration_type > r (
                    dynamic_cast< TotalProteinConcentration_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->TotalProteinConcentration_.set (::std::move (r));
                  continue;
                }
              }
            }

            // VolumeFractionNeutralLipidInPlasma
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "VolumeFractionNeutralLipidInPlasma",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< VolumeFractionNeutralLipidInPlasma_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->VolumeFractionNeutralLipidInPlasma_)
                {
                  ::std::unique_ptr< VolumeFractionNeutralLipidInPlasma_type > r (
                    dynamic_cast< VolumeFractionNeutralLipidInPlasma_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->VolumeFractionNeutralLipidInPlasma_.set (::std::move (r));
                  continue;
                }
              }
            }

            // VolumeFractionNeutralPhospholipidInPlasma
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "VolumeFractionNeutralPhospholipidInPlasma",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< VolumeFractionNeutralPhospholipidInPlasma_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->VolumeFractionNeutralPhospholipidInPlasma_)
                {
                  ::std::unique_ptr< VolumeFractionNeutralPhospholipidInPlasma_type > r (
                    dynamic_cast< VolumeFractionNeutralPhospholipidInPlasma_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->VolumeFractionNeutralPhospholipidInPlasma_.set (::std::move (r));
                  continue;
                }
              }
            }

            // WhiteBloodCellCount
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "WhiteBloodCellCount",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< WhiteBloodCellCount_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->WhiteBloodCellCount_)
                {
                  ::std::unique_ptr< WhiteBloodCellCount_type > r (
                    dynamic_cast< WhiteBloodCellCount_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->WhiteBloodCellCount_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RedBloodCellAcetylcholinesterase
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RedBloodCellAcetylcholinesterase",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RedBloodCellAcetylcholinesterase_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RedBloodCellAcetylcholinesterase_)
                {
                  ::std::unique_ptr< RedBloodCellAcetylcholinesterase_type > r (
                    dynamic_cast< RedBloodCellAcetylcholinesterase_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RedBloodCellAcetylcholinesterase_.set (::std::move (r));
                  continue;
                }
              }
            }

            // TotalBilirubin
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "TotalBilirubin",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< TotalBilirubin_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->TotalBilirubin_)
                {
                  ::std::unique_ptr< TotalBilirubin_type > r (
                    dynamic_cast< TotalBilirubin_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->TotalBilirubin_.set (::std::move (r));
                  continue;
                }
              }
            }

            // ArterialCarbonDioxidePressure
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "ArterialCarbonDioxidePressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< ArterialCarbonDioxidePressure_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->ArterialCarbonDioxidePressure_)
                {
                  ::std::unique_ptr< ArterialCarbonDioxidePressure_type > r (
                    dynamic_cast< ArterialCarbonDioxidePressure_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->ArterialCarbonDioxidePressure_.set (::std::move (r));
                  continue;
                }
              }
            }

            // ArterialOxygenPressure
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "ArterialOxygenPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< ArterialOxygenPressure_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->ArterialOxygenPressure_)
                {
                  ::std::unique_ptr< ArterialOxygenPressure_type > r (
                    dynamic_cast< ArterialOxygenPressure_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->ArterialOxygenPressure_.set (::std::move (r));
                  continue;
                }
              }
            }

            // PulmonaryArterialCarbonDioxidePressure
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "PulmonaryArterialCarbonDioxidePressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< PulmonaryArterialCarbonDioxidePressure_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->PulmonaryArterialCarbonDioxidePressure_)
                {
                  ::std::unique_ptr< PulmonaryArterialCarbonDioxidePressure_type > r (
                    dynamic_cast< PulmonaryArterialCarbonDioxidePressure_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->PulmonaryArterialCarbonDioxidePressure_.set (::std::move (r));
                  continue;
                }
              }
            }

            // PulmonaryArterialOxygenPressure
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "PulmonaryArterialOxygenPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< PulmonaryArterialOxygenPressure_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->PulmonaryArterialOxygenPressure_)
                {
                  ::std::unique_ptr< PulmonaryArterialOxygenPressure_type > r (
                    dynamic_cast< PulmonaryArterialOxygenPressure_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->PulmonaryArterialOxygenPressure_.set (::std::move (r));
                  continue;
                }
              }
            }

            // PulmonaryVenousCarbonDioxidePressure
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "PulmonaryVenousCarbonDioxidePressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< PulmonaryVenousCarbonDioxidePressure_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->PulmonaryVenousCarbonDioxidePressure_)
                {
                  ::std::unique_ptr< PulmonaryVenousCarbonDioxidePressure_type > r (
                    dynamic_cast< PulmonaryVenousCarbonDioxidePressure_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->PulmonaryVenousCarbonDioxidePressure_.set (::std::move (r));
                  continue;
                }
              }
            }

            // PulmonaryVenousOxygenPressure
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "PulmonaryVenousOxygenPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< PulmonaryVenousOxygenPressure_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->PulmonaryVenousOxygenPressure_)
                {
                  ::std::unique_ptr< PulmonaryVenousOxygenPressure_type > r (
                    dynamic_cast< PulmonaryVenousOxygenPressure_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->PulmonaryVenousOxygenPressure_.set (::std::move (r));
                  continue;
                }
              }
            }

            // VenousCarbonDioxidePressure
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "VenousCarbonDioxidePressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< VenousCarbonDioxidePressure_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->VenousCarbonDioxidePressure_)
                {
                  ::std::unique_ptr< VenousCarbonDioxidePressure_type > r (
                    dynamic_cast< VenousCarbonDioxidePressure_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->VenousCarbonDioxidePressure_.set (::std::move (r));
                  continue;
                }
              }
            }

            // VenousOxygenPressure
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "VenousOxygenPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< VenousOxygenPressure_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->VenousOxygenPressure_)
                {
                  ::std::unique_ptr< VenousOxygenPressure_type > r (
                    dynamic_cast< VenousOxygenPressure_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->VenousOxygenPressure_.set (::std::move (r));
                  continue;
                }
              }
            }

            break;
          }
        }

        BloodChemistrySystemData* BloodChemistrySystemData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class BloodChemistrySystemData (*this, f, c);
        }

        BloodChemistrySystemData& BloodChemistrySystemData::
        operator= (const BloodChemistrySystemData& x)
        {
          if (this != &x)
          {
            static_cast< ::mil::tatrc::physiology::datamodel::SystemData& > (*this) = x;
            this->BloodDensity_ = x.BloodDensity_;
            this->BloodPH_ = x.BloodPH_;
            this->BloodSpecificHeat_ = x.BloodSpecificHeat_;
            this->BloodUreaNitrogenConcentration_ = x.BloodUreaNitrogenConcentration_;
            this->CarbonDioxideSaturation_ = x.CarbonDioxideSaturation_;
            this->CarbonMonoxideSaturation_ = x.CarbonMonoxideSaturation_;
            this->Hematocrit_ = x.Hematocrit_;
            this->HemoglobinContent_ = x.HemoglobinContent_;
            this->OxygenSaturation_ = x.OxygenSaturation_;
            this->Phosphate_ = x.Phosphate_;
            this->PlasmaVolume_ = x.PlasmaVolume_;
            this->PulseOximetry_ = x.PulseOximetry_;
            this->RedBloodCellCount_ = x.RedBloodCellCount_;
            this->ShuntFraction_ = x.ShuntFraction_;
            this->StrongIonDifference_ = x.StrongIonDifference_;
            this->TotalProteinConcentration_ = x.TotalProteinConcentration_;
            this->VolumeFractionNeutralLipidInPlasma_ = x.VolumeFractionNeutralLipidInPlasma_;
            this->VolumeFractionNeutralPhospholipidInPlasma_ = x.VolumeFractionNeutralPhospholipidInPlasma_;
            this->WhiteBloodCellCount_ = x.WhiteBloodCellCount_;
            this->RedBloodCellAcetylcholinesterase_ = x.RedBloodCellAcetylcholinesterase_;
            this->TotalBilirubin_ = x.TotalBilirubin_;
            this->ArterialCarbonDioxidePressure_ = x.ArterialCarbonDioxidePressure_;
            this->ArterialOxygenPressure_ = x.ArterialOxygenPressure_;
            this->PulmonaryArterialCarbonDioxidePressure_ = x.PulmonaryArterialCarbonDioxidePressure_;
            this->PulmonaryArterialOxygenPressure_ = x.PulmonaryArterialOxygenPressure_;
            this->PulmonaryVenousCarbonDioxidePressure_ = x.PulmonaryVenousCarbonDioxidePressure_;
            this->PulmonaryVenousOxygenPressure_ = x.PulmonaryVenousOxygenPressure_;
            this->VenousCarbonDioxidePressure_ = x.VenousCarbonDioxidePressure_;
            this->VenousOxygenPressure_ = x.VenousOxygenPressure_;
          }

          return *this;
        }

        BloodChemistrySystemData::
        ~BloodChemistrySystemData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, BloodChemistrySystemData >
        _xsd_BloodChemistrySystemData_type_factory_init (
          "BloodChemistrySystemData",
          "uri:/mil/tatrc/physiology/datamodel");
      }
    }
  }
}

#include <ostream>

#include <xsd/cxx/tree/std-ostream-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::std_ostream_plate< 0, char >
  std_ostream_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        ::std::ostream&
        operator<< (::std::ostream& o, const BloodChemistrySystemData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::SystemData& > (i);

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.BloodDensity ())
            {
              o << ::std::endl << "BloodDensity: ";
              om.insert (o, *i.BloodDensity ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.BloodPH ())
            {
              o << ::std::endl << "BloodPH: ";
              om.insert (o, *i.BloodPH ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.BloodSpecificHeat ())
            {
              o << ::std::endl << "BloodSpecificHeat: ";
              om.insert (o, *i.BloodSpecificHeat ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.BloodUreaNitrogenConcentration ())
            {
              o << ::std::endl << "BloodUreaNitrogenConcentration: ";
              om.insert (o, *i.BloodUreaNitrogenConcentration ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.CarbonDioxideSaturation ())
            {
              o << ::std::endl << "CarbonDioxideSaturation: ";
              om.insert (o, *i.CarbonDioxideSaturation ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.CarbonMonoxideSaturation ())
            {
              o << ::std::endl << "CarbonMonoxideSaturation: ";
              om.insert (o, *i.CarbonMonoxideSaturation ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.Hematocrit ())
            {
              o << ::std::endl << "Hematocrit: ";
              om.insert (o, *i.Hematocrit ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.HemoglobinContent ())
            {
              o << ::std::endl << "HemoglobinContent: ";
              om.insert (o, *i.HemoglobinContent ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.OxygenSaturation ())
            {
              o << ::std::endl << "OxygenSaturation: ";
              om.insert (o, *i.OxygenSaturation ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.Phosphate ())
            {
              o << ::std::endl << "Phosphate: ";
              om.insert (o, *i.Phosphate ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.PlasmaVolume ())
            {
              o << ::std::endl << "PlasmaVolume: ";
              om.insert (o, *i.PlasmaVolume ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.PulseOximetry ())
            {
              o << ::std::endl << "PulseOximetry: ";
              om.insert (o, *i.PulseOximetry ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RedBloodCellCount ())
            {
              o << ::std::endl << "RedBloodCellCount: ";
              om.insert (o, *i.RedBloodCellCount ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.ShuntFraction ())
            {
              o << ::std::endl << "ShuntFraction: ";
              om.insert (o, *i.ShuntFraction ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.StrongIonDifference ())
            {
              o << ::std::endl << "StrongIonDifference: ";
              om.insert (o, *i.StrongIonDifference ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.TotalProteinConcentration ())
            {
              o << ::std::endl << "TotalProteinConcentration: ";
              om.insert (o, *i.TotalProteinConcentration ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.VolumeFractionNeutralLipidInPlasma ())
            {
              o << ::std::endl << "VolumeFractionNeutralLipidInPlasma: ";
              om.insert (o, *i.VolumeFractionNeutralLipidInPlasma ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.VolumeFractionNeutralPhospholipidInPlasma ())
            {
              o << ::std::endl << "VolumeFractionNeutralPhospholipidInPlasma: ";
              om.insert (o, *i.VolumeFractionNeutralPhospholipidInPlasma ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.WhiteBloodCellCount ())
            {
              o << ::std::endl << "WhiteBloodCellCount: ";
              om.insert (o, *i.WhiteBloodCellCount ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RedBloodCellAcetylcholinesterase ())
            {
              o << ::std::endl << "RedBloodCellAcetylcholinesterase: ";
              om.insert (o, *i.RedBloodCellAcetylcholinesterase ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.TotalBilirubin ())
            {
              o << ::std::endl << "TotalBilirubin: ";
              om.insert (o, *i.TotalBilirubin ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.ArterialCarbonDioxidePressure ())
            {
              o << ::std::endl << "ArterialCarbonDioxidePressure: ";
              om.insert (o, *i.ArterialCarbonDioxidePressure ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.ArterialOxygenPressure ())
            {
              o << ::std::endl << "ArterialOxygenPressure: ";
              om.insert (o, *i.ArterialOxygenPressure ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.PulmonaryArterialCarbonDioxidePressure ())
            {
              o << ::std::endl << "PulmonaryArterialCarbonDioxidePressure: ";
              om.insert (o, *i.PulmonaryArterialCarbonDioxidePressure ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.PulmonaryArterialOxygenPressure ())
            {
              o << ::std::endl << "PulmonaryArterialOxygenPressure: ";
              om.insert (o, *i.PulmonaryArterialOxygenPressure ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.PulmonaryVenousCarbonDioxidePressure ())
            {
              o << ::std::endl << "PulmonaryVenousCarbonDioxidePressure: ";
              om.insert (o, *i.PulmonaryVenousCarbonDioxidePressure ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.PulmonaryVenousOxygenPressure ())
            {
              o << ::std::endl << "PulmonaryVenousOxygenPressure: ";
              om.insert (o, *i.PulmonaryVenousOxygenPressure ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.VenousCarbonDioxidePressure ())
            {
              o << ::std::endl << "VenousCarbonDioxidePressure: ";
              om.insert (o, *i.VenousCarbonDioxidePressure ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.VenousOxygenPressure ())
            {
              o << ::std::endl << "VenousOxygenPressure: ";
              om.insert (o, *i.VenousOxygenPressure ());
            }
          }

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, BloodChemistrySystemData >
        _xsd_BloodChemistrySystemData_std_ostream_init;
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
      }
    }
  }
}

#include <ostream>
#include <xsd/cxx/tree/error-handler.hxx>
#include <xsd/cxx/xml/dom/serialization-source.hxx>

#include <xsd/cxx/tree/type-serializer-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_serializer_plate< 0, char >
  type_serializer_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        void
        operator<< (::xercesc::DOMElement& e, const BloodChemistrySystemData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::SystemData& > (i);

          // BloodDensity
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.BloodDensity ())
            {
              const BloodChemistrySystemData::BloodDensity_type& x (*i.BloodDensity ());
              if (typeid (BloodChemistrySystemData::BloodDensity_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "BloodDensity",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "BloodDensity",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // BloodPH
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.BloodPH ())
            {
              const BloodChemistrySystemData::BloodPH_type& x (*i.BloodPH ());
              if (typeid (BloodChemistrySystemData::BloodPH_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "BloodPH",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "BloodPH",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // BloodSpecificHeat
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.BloodSpecificHeat ())
            {
              const BloodChemistrySystemData::BloodSpecificHeat_type& x (*i.BloodSpecificHeat ());
              if (typeid (BloodChemistrySystemData::BloodSpecificHeat_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "BloodSpecificHeat",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "BloodSpecificHeat",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // BloodUreaNitrogenConcentration
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.BloodUreaNitrogenConcentration ())
            {
              const BloodChemistrySystemData::BloodUreaNitrogenConcentration_type& x (*i.BloodUreaNitrogenConcentration ());
              if (typeid (BloodChemistrySystemData::BloodUreaNitrogenConcentration_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "BloodUreaNitrogenConcentration",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "BloodUreaNitrogenConcentration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // CarbonDioxideSaturation
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.CarbonDioxideSaturation ())
            {
              const BloodChemistrySystemData::CarbonDioxideSaturation_type& x (*i.CarbonDioxideSaturation ());
              if (typeid (BloodChemistrySystemData::CarbonDioxideSaturation_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "CarbonDioxideSaturation",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "CarbonDioxideSaturation",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // CarbonMonoxideSaturation
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.CarbonMonoxideSaturation ())
            {
              const BloodChemistrySystemData::CarbonMonoxideSaturation_type& x (*i.CarbonMonoxideSaturation ());
              if (typeid (BloodChemistrySystemData::CarbonMonoxideSaturation_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "CarbonMonoxideSaturation",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "CarbonMonoxideSaturation",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // Hematocrit
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.Hematocrit ())
            {
              const BloodChemistrySystemData::Hematocrit_type& x (*i.Hematocrit ());
              if (typeid (BloodChemistrySystemData::Hematocrit_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "Hematocrit",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "Hematocrit",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // HemoglobinContent
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.HemoglobinContent ())
            {
              const BloodChemistrySystemData::HemoglobinContent_type& x (*i.HemoglobinContent ());
              if (typeid (BloodChemistrySystemData::HemoglobinContent_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "HemoglobinContent",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "HemoglobinContent",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // OxygenSaturation
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.OxygenSaturation ())
            {
              const BloodChemistrySystemData::OxygenSaturation_type& x (*i.OxygenSaturation ());
              if (typeid (BloodChemistrySystemData::OxygenSaturation_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "OxygenSaturation",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "OxygenSaturation",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // Phosphate
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.Phosphate ())
            {
              const BloodChemistrySystemData::Phosphate_type& x (*i.Phosphate ());
              if (typeid (BloodChemistrySystemData::Phosphate_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "Phosphate",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "Phosphate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // PlasmaVolume
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.PlasmaVolume ())
            {
              const BloodChemistrySystemData::PlasmaVolume_type& x (*i.PlasmaVolume ());
              if (typeid (BloodChemistrySystemData::PlasmaVolume_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "PlasmaVolume",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "PlasmaVolume",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // PulseOximetry
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.PulseOximetry ())
            {
              const BloodChemistrySystemData::PulseOximetry_type& x (*i.PulseOximetry ());
              if (typeid (BloodChemistrySystemData::PulseOximetry_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "PulseOximetry",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "PulseOximetry",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RedBloodCellCount
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RedBloodCellCount ())
            {
              const BloodChemistrySystemData::RedBloodCellCount_type& x (*i.RedBloodCellCount ());
              if (typeid (BloodChemistrySystemData::RedBloodCellCount_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RedBloodCellCount",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RedBloodCellCount",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // ShuntFraction
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.ShuntFraction ())
            {
              const BloodChemistrySystemData::ShuntFraction_type& x (*i.ShuntFraction ());
              if (typeid (BloodChemistrySystemData::ShuntFraction_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "ShuntFraction",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "ShuntFraction",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // StrongIonDifference
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.StrongIonDifference ())
            {
              const BloodChemistrySystemData::StrongIonDifference_type& x (*i.StrongIonDifference ());
              if (typeid (BloodChemistrySystemData::StrongIonDifference_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "StrongIonDifference",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "StrongIonDifference",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // TotalProteinConcentration
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.TotalProteinConcentration ())
            {
              const BloodChemistrySystemData::TotalProteinConcentration_type& x (*i.TotalProteinConcentration ());
              if (typeid (BloodChemistrySystemData::TotalProteinConcentration_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "TotalProteinConcentration",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "TotalProteinConcentration",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // VolumeFractionNeutralLipidInPlasma
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.VolumeFractionNeutralLipidInPlasma ())
            {
              const BloodChemistrySystemData::VolumeFractionNeutralLipidInPlasma_type& x (*i.VolumeFractionNeutralLipidInPlasma ());
              if (typeid (BloodChemistrySystemData::VolumeFractionNeutralLipidInPlasma_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "VolumeFractionNeutralLipidInPlasma",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "VolumeFractionNeutralLipidInPlasma",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // VolumeFractionNeutralPhospholipidInPlasma
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.VolumeFractionNeutralPhospholipidInPlasma ())
            {
              const BloodChemistrySystemData::VolumeFractionNeutralPhospholipidInPlasma_type& x (*i.VolumeFractionNeutralPhospholipidInPlasma ());
              if (typeid (BloodChemistrySystemData::VolumeFractionNeutralPhospholipidInPlasma_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "VolumeFractionNeutralPhospholipidInPlasma",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "VolumeFractionNeutralPhospholipidInPlasma",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // WhiteBloodCellCount
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.WhiteBloodCellCount ())
            {
              const BloodChemistrySystemData::WhiteBloodCellCount_type& x (*i.WhiteBloodCellCount ());
              if (typeid (BloodChemistrySystemData::WhiteBloodCellCount_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "WhiteBloodCellCount",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "WhiteBloodCellCount",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RedBloodCellAcetylcholinesterase
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RedBloodCellAcetylcholinesterase ())
            {
              const BloodChemistrySystemData::RedBloodCellAcetylcholinesterase_type& x (*i.RedBloodCellAcetylcholinesterase ());
              if (typeid (BloodChemistrySystemData::RedBloodCellAcetylcholinesterase_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RedBloodCellAcetylcholinesterase",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RedBloodCellAcetylcholinesterase",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // TotalBilirubin
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.TotalBilirubin ())
            {
              const BloodChemistrySystemData::TotalBilirubin_type& x (*i.TotalBilirubin ());
              if (typeid (BloodChemistrySystemData::TotalBilirubin_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "TotalBilirubin",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "TotalBilirubin",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // ArterialCarbonDioxidePressure
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.ArterialCarbonDioxidePressure ())
            {
              const BloodChemistrySystemData::ArterialCarbonDioxidePressure_type& x (*i.ArterialCarbonDioxidePressure ());
              if (typeid (BloodChemistrySystemData::ArterialCarbonDioxidePressure_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "ArterialCarbonDioxidePressure",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "ArterialCarbonDioxidePressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // ArterialOxygenPressure
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.ArterialOxygenPressure ())
            {
              const BloodChemistrySystemData::ArterialOxygenPressure_type& x (*i.ArterialOxygenPressure ());
              if (typeid (BloodChemistrySystemData::ArterialOxygenPressure_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "ArterialOxygenPressure",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "ArterialOxygenPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // PulmonaryArterialCarbonDioxidePressure
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.PulmonaryArterialCarbonDioxidePressure ())
            {
              const BloodChemistrySystemData::PulmonaryArterialCarbonDioxidePressure_type& x (*i.PulmonaryArterialCarbonDioxidePressure ());
              if (typeid (BloodChemistrySystemData::PulmonaryArterialCarbonDioxidePressure_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "PulmonaryArterialCarbonDioxidePressure",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "PulmonaryArterialCarbonDioxidePressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // PulmonaryArterialOxygenPressure
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.PulmonaryArterialOxygenPressure ())
            {
              const BloodChemistrySystemData::PulmonaryArterialOxygenPressure_type& x (*i.PulmonaryArterialOxygenPressure ());
              if (typeid (BloodChemistrySystemData::PulmonaryArterialOxygenPressure_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "PulmonaryArterialOxygenPressure",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "PulmonaryArterialOxygenPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // PulmonaryVenousCarbonDioxidePressure
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.PulmonaryVenousCarbonDioxidePressure ())
            {
              const BloodChemistrySystemData::PulmonaryVenousCarbonDioxidePressure_type& x (*i.PulmonaryVenousCarbonDioxidePressure ());
              if (typeid (BloodChemistrySystemData::PulmonaryVenousCarbonDioxidePressure_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "PulmonaryVenousCarbonDioxidePressure",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "PulmonaryVenousCarbonDioxidePressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // PulmonaryVenousOxygenPressure
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.PulmonaryVenousOxygenPressure ())
            {
              const BloodChemistrySystemData::PulmonaryVenousOxygenPressure_type& x (*i.PulmonaryVenousOxygenPressure ());
              if (typeid (BloodChemistrySystemData::PulmonaryVenousOxygenPressure_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "PulmonaryVenousOxygenPressure",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "PulmonaryVenousOxygenPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // VenousCarbonDioxidePressure
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.VenousCarbonDioxidePressure ())
            {
              const BloodChemistrySystemData::VenousCarbonDioxidePressure_type& x (*i.VenousCarbonDioxidePressure ());
              if (typeid (BloodChemistrySystemData::VenousCarbonDioxidePressure_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "VenousCarbonDioxidePressure",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "VenousCarbonDioxidePressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // VenousOxygenPressure
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.VenousOxygenPressure ())
            {
              const BloodChemistrySystemData::VenousOxygenPressure_type& x (*i.VenousOxygenPressure ());
              if (typeid (BloodChemistrySystemData::VenousOxygenPressure_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "VenousOxygenPressure",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "VenousOxygenPressure",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, BloodChemistrySystemData >
        _xsd_BloodChemistrySystemData_type_serializer_init (
          "BloodChemistrySystemData",
          "uri:/mil/tatrc/physiology/datamodel");
      }
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

