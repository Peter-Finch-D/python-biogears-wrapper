// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
#include "Properties.hxx"

//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "TissueSystemData.hxx"

#include "ScalarVolumePerTimeData.hxx"

#include "Scalar0To1Data.hxx"

#include "ScalarVolumeData.hxx"

#include "ScalarData.hxx"

#include "ScalarAmountPerVolumeData.hxx"

#include "ScalarMassPerVolumeData.hxx"

#include "ScalarMassData.hxx"

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        // TissueSystemData
        // 

        const TissueSystemData::CarbonDioxideProductionRate_optional& TissueSystemData::
        CarbonDioxideProductionRate () const
        {
          return this->CarbonDioxideProductionRate_;
        }

        TissueSystemData::CarbonDioxideProductionRate_optional& TissueSystemData::
        CarbonDioxideProductionRate ()
        {
          return this->CarbonDioxideProductionRate_;
        }

        void TissueSystemData::
        CarbonDioxideProductionRate (const CarbonDioxideProductionRate_type& x)
        {
          this->CarbonDioxideProductionRate_.set (x);
        }

        void TissueSystemData::
        CarbonDioxideProductionRate (const CarbonDioxideProductionRate_optional& x)
        {
          this->CarbonDioxideProductionRate_ = x;
        }

        void TissueSystemData::
        CarbonDioxideProductionRate (::std::unique_ptr< CarbonDioxideProductionRate_type > x)
        {
          this->CarbonDioxideProductionRate_.set (std::move (x));
        }

        const TissueSystemData::DehydrationFraction_optional& TissueSystemData::
        DehydrationFraction () const
        {
          return this->DehydrationFraction_;
        }

        TissueSystemData::DehydrationFraction_optional& TissueSystemData::
        DehydrationFraction ()
        {
          return this->DehydrationFraction_;
        }

        void TissueSystemData::
        DehydrationFraction (const DehydrationFraction_type& x)
        {
          this->DehydrationFraction_.set (x);
        }

        void TissueSystemData::
        DehydrationFraction (const DehydrationFraction_optional& x)
        {
          this->DehydrationFraction_ = x;
        }

        void TissueSystemData::
        DehydrationFraction (::std::unique_ptr< DehydrationFraction_type > x)
        {
          this->DehydrationFraction_.set (std::move (x));
        }

        const TissueSystemData::ExtracellularFluidVolume_optional& TissueSystemData::
        ExtracellularFluidVolume () const
        {
          return this->ExtracellularFluidVolume_;
        }

        TissueSystemData::ExtracellularFluidVolume_optional& TissueSystemData::
        ExtracellularFluidVolume ()
        {
          return this->ExtracellularFluidVolume_;
        }

        void TissueSystemData::
        ExtracellularFluidVolume (const ExtracellularFluidVolume_type& x)
        {
          this->ExtracellularFluidVolume_.set (x);
        }

        void TissueSystemData::
        ExtracellularFluidVolume (const ExtracellularFluidVolume_optional& x)
        {
          this->ExtracellularFluidVolume_ = x;
        }

        void TissueSystemData::
        ExtracellularFluidVolume (::std::unique_ptr< ExtracellularFluidVolume_type > x)
        {
          this->ExtracellularFluidVolume_.set (std::move (x));
        }

        const TissueSystemData::ExtravascularFluidVolume_optional& TissueSystemData::
        ExtravascularFluidVolume () const
        {
          return this->ExtravascularFluidVolume_;
        }

        TissueSystemData::ExtravascularFluidVolume_optional& TissueSystemData::
        ExtravascularFluidVolume ()
        {
          return this->ExtravascularFluidVolume_;
        }

        void TissueSystemData::
        ExtravascularFluidVolume (const ExtravascularFluidVolume_type& x)
        {
          this->ExtravascularFluidVolume_.set (x);
        }

        void TissueSystemData::
        ExtravascularFluidVolume (const ExtravascularFluidVolume_optional& x)
        {
          this->ExtravascularFluidVolume_ = x;
        }

        void TissueSystemData::
        ExtravascularFluidVolume (::std::unique_ptr< ExtravascularFluidVolume_type > x)
        {
          this->ExtravascularFluidVolume_.set (std::move (x));
        }

        const TissueSystemData::IntracellularFluidPH_optional& TissueSystemData::
        IntracellularFluidPH () const
        {
          return this->IntracellularFluidPH_;
        }

        TissueSystemData::IntracellularFluidPH_optional& TissueSystemData::
        IntracellularFluidPH ()
        {
          return this->IntracellularFluidPH_;
        }

        void TissueSystemData::
        IntracellularFluidPH (const IntracellularFluidPH_type& x)
        {
          this->IntracellularFluidPH_.set (x);
        }

        void TissueSystemData::
        IntracellularFluidPH (const IntracellularFluidPH_optional& x)
        {
          this->IntracellularFluidPH_ = x;
        }

        void TissueSystemData::
        IntracellularFluidPH (::std::unique_ptr< IntracellularFluidPH_type > x)
        {
          this->IntracellularFluidPH_.set (std::move (x));
        }

        const TissueSystemData::IntracellularFluidVolume_optional& TissueSystemData::
        IntracellularFluidVolume () const
        {
          return this->IntracellularFluidVolume_;
        }

        TissueSystemData::IntracellularFluidVolume_optional& TissueSystemData::
        IntracellularFluidVolume ()
        {
          return this->IntracellularFluidVolume_;
        }

        void TissueSystemData::
        IntracellularFluidVolume (const IntracellularFluidVolume_type& x)
        {
          this->IntracellularFluidVolume_.set (x);
        }

        void TissueSystemData::
        IntracellularFluidVolume (const IntracellularFluidVolume_optional& x)
        {
          this->IntracellularFluidVolume_ = x;
        }

        void TissueSystemData::
        IntracellularFluidVolume (::std::unique_ptr< IntracellularFluidVolume_type > x)
        {
          this->IntracellularFluidVolume_.set (std::move (x));
        }

        const TissueSystemData::TotalBodyFluidVolume_optional& TissueSystemData::
        TotalBodyFluidVolume () const
        {
          return this->TotalBodyFluidVolume_;
        }

        TissueSystemData::TotalBodyFluidVolume_optional& TissueSystemData::
        TotalBodyFluidVolume ()
        {
          return this->TotalBodyFluidVolume_;
        }

        void TissueSystemData::
        TotalBodyFluidVolume (const TotalBodyFluidVolume_type& x)
        {
          this->TotalBodyFluidVolume_.set (x);
        }

        void TissueSystemData::
        TotalBodyFluidVolume (const TotalBodyFluidVolume_optional& x)
        {
          this->TotalBodyFluidVolume_ = x;
        }

        void TissueSystemData::
        TotalBodyFluidVolume (::std::unique_ptr< TotalBodyFluidVolume_type > x)
        {
          this->TotalBodyFluidVolume_.set (std::move (x));
        }

        const TissueSystemData::OxygenConsumptionRate_optional& TissueSystemData::
        OxygenConsumptionRate () const
        {
          return this->OxygenConsumptionRate_;
        }

        TissueSystemData::OxygenConsumptionRate_optional& TissueSystemData::
        OxygenConsumptionRate ()
        {
          return this->OxygenConsumptionRate_;
        }

        void TissueSystemData::
        OxygenConsumptionRate (const OxygenConsumptionRate_type& x)
        {
          this->OxygenConsumptionRate_.set (x);
        }

        void TissueSystemData::
        OxygenConsumptionRate (const OxygenConsumptionRate_optional& x)
        {
          this->OxygenConsumptionRate_ = x;
        }

        void TissueSystemData::
        OxygenConsumptionRate (::std::unique_ptr< OxygenConsumptionRate_type > x)
        {
          this->OxygenConsumptionRate_.set (std::move (x));
        }

        const TissueSystemData::RespiratoryExchangeRatio_optional& TissueSystemData::
        RespiratoryExchangeRatio () const
        {
          return this->RespiratoryExchangeRatio_;
        }

        TissueSystemData::RespiratoryExchangeRatio_optional& TissueSystemData::
        RespiratoryExchangeRatio ()
        {
          return this->RespiratoryExchangeRatio_;
        }

        void TissueSystemData::
        RespiratoryExchangeRatio (const RespiratoryExchangeRatio_type& x)
        {
          this->RespiratoryExchangeRatio_.set (x);
        }

        void TissueSystemData::
        RespiratoryExchangeRatio (const RespiratoryExchangeRatio_optional& x)
        {
          this->RespiratoryExchangeRatio_ = x;
        }

        void TissueSystemData::
        RespiratoryExchangeRatio (::std::unique_ptr< RespiratoryExchangeRatio_type > x)
        {
          this->RespiratoryExchangeRatio_.set (std::move (x));
        }

        const TissueSystemData::LiverInsulinSetPoint_optional& TissueSystemData::
        LiverInsulinSetPoint () const
        {
          return this->LiverInsulinSetPoint_;
        }

        TissueSystemData::LiverInsulinSetPoint_optional& TissueSystemData::
        LiverInsulinSetPoint ()
        {
          return this->LiverInsulinSetPoint_;
        }

        void TissueSystemData::
        LiverInsulinSetPoint (const LiverInsulinSetPoint_type& x)
        {
          this->LiverInsulinSetPoint_.set (x);
        }

        void TissueSystemData::
        LiverInsulinSetPoint (const LiverInsulinSetPoint_optional& x)
        {
          this->LiverInsulinSetPoint_ = x;
        }

        void TissueSystemData::
        LiverInsulinSetPoint (::std::unique_ptr< LiverInsulinSetPoint_type > x)
        {
          this->LiverInsulinSetPoint_.set (std::move (x));
        }

        const TissueSystemData::LiverGlucagonSetPoint_optional& TissueSystemData::
        LiverGlucagonSetPoint () const
        {
          return this->LiverGlucagonSetPoint_;
        }

        TissueSystemData::LiverGlucagonSetPoint_optional& TissueSystemData::
        LiverGlucagonSetPoint ()
        {
          return this->LiverGlucagonSetPoint_;
        }

        void TissueSystemData::
        LiverGlucagonSetPoint (const LiverGlucagonSetPoint_type& x)
        {
          this->LiverGlucagonSetPoint_.set (x);
        }

        void TissueSystemData::
        LiverGlucagonSetPoint (const LiverGlucagonSetPoint_optional& x)
        {
          this->LiverGlucagonSetPoint_ = x;
        }

        void TissueSystemData::
        LiverGlucagonSetPoint (::std::unique_ptr< LiverGlucagonSetPoint_type > x)
        {
          this->LiverGlucagonSetPoint_.set (std::move (x));
        }

        const TissueSystemData::MuscleInsulinSetPoint_optional& TissueSystemData::
        MuscleInsulinSetPoint () const
        {
          return this->MuscleInsulinSetPoint_;
        }

        TissueSystemData::MuscleInsulinSetPoint_optional& TissueSystemData::
        MuscleInsulinSetPoint ()
        {
          return this->MuscleInsulinSetPoint_;
        }

        void TissueSystemData::
        MuscleInsulinSetPoint (const MuscleInsulinSetPoint_type& x)
        {
          this->MuscleInsulinSetPoint_.set (x);
        }

        void TissueSystemData::
        MuscleInsulinSetPoint (const MuscleInsulinSetPoint_optional& x)
        {
          this->MuscleInsulinSetPoint_ = x;
        }

        void TissueSystemData::
        MuscleInsulinSetPoint (::std::unique_ptr< MuscleInsulinSetPoint_type > x)
        {
          this->MuscleInsulinSetPoint_.set (std::move (x));
        }

        const TissueSystemData::MuscleGlucagonSetPoint_optional& TissueSystemData::
        MuscleGlucagonSetPoint () const
        {
          return this->MuscleGlucagonSetPoint_;
        }

        TissueSystemData::MuscleGlucagonSetPoint_optional& TissueSystemData::
        MuscleGlucagonSetPoint ()
        {
          return this->MuscleGlucagonSetPoint_;
        }

        void TissueSystemData::
        MuscleGlucagonSetPoint (const MuscleGlucagonSetPoint_type& x)
        {
          this->MuscleGlucagonSetPoint_.set (x);
        }

        void TissueSystemData::
        MuscleGlucagonSetPoint (const MuscleGlucagonSetPoint_optional& x)
        {
          this->MuscleGlucagonSetPoint_ = x;
        }

        void TissueSystemData::
        MuscleGlucagonSetPoint (::std::unique_ptr< MuscleGlucagonSetPoint_type > x)
        {
          this->MuscleGlucagonSetPoint_.set (std::move (x));
        }

        const TissueSystemData::FatInsulinSetPoint_optional& TissueSystemData::
        FatInsulinSetPoint () const
        {
          return this->FatInsulinSetPoint_;
        }

        TissueSystemData::FatInsulinSetPoint_optional& TissueSystemData::
        FatInsulinSetPoint ()
        {
          return this->FatInsulinSetPoint_;
        }

        void TissueSystemData::
        FatInsulinSetPoint (const FatInsulinSetPoint_type& x)
        {
          this->FatInsulinSetPoint_.set (x);
        }

        void TissueSystemData::
        FatInsulinSetPoint (const FatInsulinSetPoint_optional& x)
        {
          this->FatInsulinSetPoint_ = x;
        }

        void TissueSystemData::
        FatInsulinSetPoint (::std::unique_ptr< FatInsulinSetPoint_type > x)
        {
          this->FatInsulinSetPoint_.set (std::move (x));
        }

        const TissueSystemData::FatGlucagonSetPoint_optional& TissueSystemData::
        FatGlucagonSetPoint () const
        {
          return this->FatGlucagonSetPoint_;
        }

        TissueSystemData::FatGlucagonSetPoint_optional& TissueSystemData::
        FatGlucagonSetPoint ()
        {
          return this->FatGlucagonSetPoint_;
        }

        void TissueSystemData::
        FatGlucagonSetPoint (const FatGlucagonSetPoint_type& x)
        {
          this->FatGlucagonSetPoint_.set (x);
        }

        void TissueSystemData::
        FatGlucagonSetPoint (const FatGlucagonSetPoint_optional& x)
        {
          this->FatGlucagonSetPoint_ = x;
        }

        void TissueSystemData::
        FatGlucagonSetPoint (::std::unique_ptr< FatGlucagonSetPoint_type > x)
        {
          this->FatGlucagonSetPoint_.set (std::move (x));
        }

        const TissueSystemData::LiverGlycogen_optional& TissueSystemData::
        LiverGlycogen () const
        {
          return this->LiverGlycogen_;
        }

        TissueSystemData::LiverGlycogen_optional& TissueSystemData::
        LiverGlycogen ()
        {
          return this->LiverGlycogen_;
        }

        void TissueSystemData::
        LiverGlycogen (const LiverGlycogen_type& x)
        {
          this->LiverGlycogen_.set (x);
        }

        void TissueSystemData::
        LiverGlycogen (const LiverGlycogen_optional& x)
        {
          this->LiverGlycogen_ = x;
        }

        void TissueSystemData::
        LiverGlycogen (::std::unique_ptr< LiverGlycogen_type > x)
        {
          this->LiverGlycogen_.set (std::move (x));
        }

        const TissueSystemData::MuscleGlycogen_optional& TissueSystemData::
        MuscleGlycogen () const
        {
          return this->MuscleGlycogen_;
        }

        TissueSystemData::MuscleGlycogen_optional& TissueSystemData::
        MuscleGlycogen ()
        {
          return this->MuscleGlycogen_;
        }

        void TissueSystemData::
        MuscleGlycogen (const MuscleGlycogen_type& x)
        {
          this->MuscleGlycogen_.set (x);
        }

        void TissueSystemData::
        MuscleGlycogen (const MuscleGlycogen_optional& x)
        {
          this->MuscleGlycogen_ = x;
        }

        void TissueSystemData::
        MuscleGlycogen (::std::unique_ptr< MuscleGlycogen_type > x)
        {
          this->MuscleGlycogen_.set (std::move (x));
        }

        const TissueSystemData::StoredProtein_optional& TissueSystemData::
        StoredProtein () const
        {
          return this->StoredProtein_;
        }

        TissueSystemData::StoredProtein_optional& TissueSystemData::
        StoredProtein ()
        {
          return this->StoredProtein_;
        }

        void TissueSystemData::
        StoredProtein (const StoredProtein_type& x)
        {
          this->StoredProtein_.set (x);
        }

        void TissueSystemData::
        StoredProtein (const StoredProtein_optional& x)
        {
          this->StoredProtein_ = x;
        }

        void TissueSystemData::
        StoredProtein (::std::unique_ptr< StoredProtein_type > x)
        {
          this->StoredProtein_.set (std::move (x));
        }

        const TissueSystemData::StoredFat_optional& TissueSystemData::
        StoredFat () const
        {
          return this->StoredFat_;
        }

        TissueSystemData::StoredFat_optional& TissueSystemData::
        StoredFat ()
        {
          return this->StoredFat_;
        }

        void TissueSystemData::
        StoredFat (const StoredFat_type& x)
        {
          this->StoredFat_.set (x);
        }

        void TissueSystemData::
        StoredFat (const StoredFat_optional& x)
        {
          this->StoredFat_ = x;
        }

        void TissueSystemData::
        StoredFat (::std::unique_ptr< StoredFat_type > x)
        {
          this->StoredFat_.set (std::move (x));
        }
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        // TissueSystemData
        //

        TissueSystemData::
        TissueSystemData ()
        : ::mil::tatrc::physiology::datamodel::SystemData (),
          CarbonDioxideProductionRate_ (this),
          DehydrationFraction_ (this),
          ExtracellularFluidVolume_ (this),
          ExtravascularFluidVolume_ (this),
          IntracellularFluidPH_ (this),
          IntracellularFluidVolume_ (this),
          TotalBodyFluidVolume_ (this),
          OxygenConsumptionRate_ (this),
          RespiratoryExchangeRatio_ (this),
          LiverInsulinSetPoint_ (this),
          LiverGlucagonSetPoint_ (this),
          MuscleInsulinSetPoint_ (this),
          MuscleGlucagonSetPoint_ (this),
          FatInsulinSetPoint_ (this),
          FatGlucagonSetPoint_ (this),
          LiverGlycogen_ (this),
          MuscleGlycogen_ (this),
          StoredProtein_ (this),
          StoredFat_ (this)
        {
        }

        TissueSystemData::
        TissueSystemData (const TissueSystemData& x,
                          ::xml_schema::flags f,
                          ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::SystemData (x, f, c),
          CarbonDioxideProductionRate_ (x.CarbonDioxideProductionRate_, f, this),
          DehydrationFraction_ (x.DehydrationFraction_, f, this),
          ExtracellularFluidVolume_ (x.ExtracellularFluidVolume_, f, this),
          ExtravascularFluidVolume_ (x.ExtravascularFluidVolume_, f, this),
          IntracellularFluidPH_ (x.IntracellularFluidPH_, f, this),
          IntracellularFluidVolume_ (x.IntracellularFluidVolume_, f, this),
          TotalBodyFluidVolume_ (x.TotalBodyFluidVolume_, f, this),
          OxygenConsumptionRate_ (x.OxygenConsumptionRate_, f, this),
          RespiratoryExchangeRatio_ (x.RespiratoryExchangeRatio_, f, this),
          LiverInsulinSetPoint_ (x.LiverInsulinSetPoint_, f, this),
          LiverGlucagonSetPoint_ (x.LiverGlucagonSetPoint_, f, this),
          MuscleInsulinSetPoint_ (x.MuscleInsulinSetPoint_, f, this),
          MuscleGlucagonSetPoint_ (x.MuscleGlucagonSetPoint_, f, this),
          FatInsulinSetPoint_ (x.FatInsulinSetPoint_, f, this),
          FatGlucagonSetPoint_ (x.FatGlucagonSetPoint_, f, this),
          LiverGlycogen_ (x.LiverGlycogen_, f, this),
          MuscleGlycogen_ (x.MuscleGlycogen_, f, this),
          StoredProtein_ (x.StoredProtein_, f, this),
          StoredFat_ (x.StoredFat_, f, this)
        {
        }

        TissueSystemData::
        TissueSystemData (const ::xercesc::DOMElement& e,
                          ::xml_schema::flags f,
                          ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::SystemData (e, f | ::xml_schema::flags::base, c),
          CarbonDioxideProductionRate_ (this),
          DehydrationFraction_ (this),
          ExtracellularFluidVolume_ (this),
          ExtravascularFluidVolume_ (this),
          IntracellularFluidPH_ (this),
          IntracellularFluidVolume_ (this),
          TotalBodyFluidVolume_ (this),
          OxygenConsumptionRate_ (this),
          RespiratoryExchangeRatio_ (this),
          LiverInsulinSetPoint_ (this),
          LiverGlucagonSetPoint_ (this),
          MuscleInsulinSetPoint_ (this),
          MuscleGlucagonSetPoint_ (this),
          FatInsulinSetPoint_ (this),
          FatGlucagonSetPoint_ (this),
          LiverGlycogen_ (this),
          MuscleGlycogen_ (this),
          StoredProtein_ (this),
          StoredFat_ (this)
        {
          if ((f & ::xml_schema::flags::base) == 0)
          {
            ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
            this->parse (p, f);
          }
        }

        void TissueSystemData::
        parse (::xsd::cxx::xml::dom::parser< char >& p,
               ::xml_schema::flags f)
        {
          this->::mil::tatrc::physiology::datamodel::SystemData::parse (p, f);

          for (; p.more_content (); p.next_content (false))
          {
            const ::xercesc::DOMElement& i (p.cur_element ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            // CarbonDioxideProductionRate
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "CarbonDioxideProductionRate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< CarbonDioxideProductionRate_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->CarbonDioxideProductionRate_)
                {
                  ::std::unique_ptr< CarbonDioxideProductionRate_type > r (
                    dynamic_cast< CarbonDioxideProductionRate_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->CarbonDioxideProductionRate_.set (::std::move (r));
                  continue;
                }
              }
            }

            // DehydrationFraction
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "DehydrationFraction",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< DehydrationFraction_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->DehydrationFraction_)
                {
                  ::std::unique_ptr< DehydrationFraction_type > r (
                    dynamic_cast< DehydrationFraction_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->DehydrationFraction_.set (::std::move (r));
                  continue;
                }
              }
            }

            // ExtracellularFluidVolume
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "ExtracellularFluidVolume",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< ExtracellularFluidVolume_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->ExtracellularFluidVolume_)
                {
                  ::std::unique_ptr< ExtracellularFluidVolume_type > r (
                    dynamic_cast< ExtracellularFluidVolume_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->ExtracellularFluidVolume_.set (::std::move (r));
                  continue;
                }
              }
            }

            // ExtravascularFluidVolume
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "ExtravascularFluidVolume",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< ExtravascularFluidVolume_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->ExtravascularFluidVolume_)
                {
                  ::std::unique_ptr< ExtravascularFluidVolume_type > r (
                    dynamic_cast< ExtravascularFluidVolume_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->ExtravascularFluidVolume_.set (::std::move (r));
                  continue;
                }
              }
            }

            // IntracellularFluidPH
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "IntracellularFluidPH",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< IntracellularFluidPH_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->IntracellularFluidPH_)
                {
                  ::std::unique_ptr< IntracellularFluidPH_type > r (
                    dynamic_cast< IntracellularFluidPH_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->IntracellularFluidPH_.set (::std::move (r));
                  continue;
                }
              }
            }

            // IntracellularFluidVolume
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "IntracellularFluidVolume",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< IntracellularFluidVolume_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->IntracellularFluidVolume_)
                {
                  ::std::unique_ptr< IntracellularFluidVolume_type > r (
                    dynamic_cast< IntracellularFluidVolume_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->IntracellularFluidVolume_.set (::std::move (r));
                  continue;
                }
              }
            }

            // TotalBodyFluidVolume
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "TotalBodyFluidVolume",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< TotalBodyFluidVolume_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->TotalBodyFluidVolume_)
                {
                  ::std::unique_ptr< TotalBodyFluidVolume_type > r (
                    dynamic_cast< TotalBodyFluidVolume_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->TotalBodyFluidVolume_.set (::std::move (r));
                  continue;
                }
              }
            }

            // OxygenConsumptionRate
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "OxygenConsumptionRate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< OxygenConsumptionRate_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->OxygenConsumptionRate_)
                {
                  ::std::unique_ptr< OxygenConsumptionRate_type > r (
                    dynamic_cast< OxygenConsumptionRate_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->OxygenConsumptionRate_.set (::std::move (r));
                  continue;
                }
              }
            }

            // RespiratoryExchangeRatio
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "RespiratoryExchangeRatio",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< RespiratoryExchangeRatio_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->RespiratoryExchangeRatio_)
                {
                  ::std::unique_ptr< RespiratoryExchangeRatio_type > r (
                    dynamic_cast< RespiratoryExchangeRatio_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->RespiratoryExchangeRatio_.set (::std::move (r));
                  continue;
                }
              }
            }

            // LiverInsulinSetPoint
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "LiverInsulinSetPoint",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< LiverInsulinSetPoint_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->LiverInsulinSetPoint_)
                {
                  ::std::unique_ptr< LiverInsulinSetPoint_type > r (
                    dynamic_cast< LiverInsulinSetPoint_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->LiverInsulinSetPoint_.set (::std::move (r));
                  continue;
                }
              }
            }

            // LiverGlucagonSetPoint
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "LiverGlucagonSetPoint",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< LiverGlucagonSetPoint_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->LiverGlucagonSetPoint_)
                {
                  ::std::unique_ptr< LiverGlucagonSetPoint_type > r (
                    dynamic_cast< LiverGlucagonSetPoint_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->LiverGlucagonSetPoint_.set (::std::move (r));
                  continue;
                }
              }
            }

            // MuscleInsulinSetPoint
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "MuscleInsulinSetPoint",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< MuscleInsulinSetPoint_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->MuscleInsulinSetPoint_)
                {
                  ::std::unique_ptr< MuscleInsulinSetPoint_type > r (
                    dynamic_cast< MuscleInsulinSetPoint_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->MuscleInsulinSetPoint_.set (::std::move (r));
                  continue;
                }
              }
            }

            // MuscleGlucagonSetPoint
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "MuscleGlucagonSetPoint",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< MuscleGlucagonSetPoint_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->MuscleGlucagonSetPoint_)
                {
                  ::std::unique_ptr< MuscleGlucagonSetPoint_type > r (
                    dynamic_cast< MuscleGlucagonSetPoint_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->MuscleGlucagonSetPoint_.set (::std::move (r));
                  continue;
                }
              }
            }

            // FatInsulinSetPoint
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "FatInsulinSetPoint",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< FatInsulinSetPoint_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->FatInsulinSetPoint_)
                {
                  ::std::unique_ptr< FatInsulinSetPoint_type > r (
                    dynamic_cast< FatInsulinSetPoint_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->FatInsulinSetPoint_.set (::std::move (r));
                  continue;
                }
              }
            }

            // FatGlucagonSetPoint
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "FatGlucagonSetPoint",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< FatGlucagonSetPoint_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->FatGlucagonSetPoint_)
                {
                  ::std::unique_ptr< FatGlucagonSetPoint_type > r (
                    dynamic_cast< FatGlucagonSetPoint_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->FatGlucagonSetPoint_.set (::std::move (r));
                  continue;
                }
              }
            }

            // LiverGlycogen
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "LiverGlycogen",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< LiverGlycogen_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->LiverGlycogen_)
                {
                  ::std::unique_ptr< LiverGlycogen_type > r (
                    dynamic_cast< LiverGlycogen_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->LiverGlycogen_.set (::std::move (r));
                  continue;
                }
              }
            }

            // MuscleGlycogen
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "MuscleGlycogen",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< MuscleGlycogen_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->MuscleGlycogen_)
                {
                  ::std::unique_ptr< MuscleGlycogen_type > r (
                    dynamic_cast< MuscleGlycogen_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->MuscleGlycogen_.set (::std::move (r));
                  continue;
                }
              }
            }

            // StoredProtein
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "StoredProtein",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< StoredProtein_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->StoredProtein_)
                {
                  ::std::unique_ptr< StoredProtein_type > r (
                    dynamic_cast< StoredProtein_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->StoredProtein_.set (::std::move (r));
                  continue;
                }
              }
            }

            // StoredFat
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "StoredFat",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< StoredFat_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->StoredFat_)
                {
                  ::std::unique_ptr< StoredFat_type > r (
                    dynamic_cast< StoredFat_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->StoredFat_.set (::std::move (r));
                  continue;
                }
              }
            }

            break;
          }
        }

        TissueSystemData* TissueSystemData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class TissueSystemData (*this, f, c);
        }

        TissueSystemData& TissueSystemData::
        operator= (const TissueSystemData& x)
        {
          if (this != &x)
          {
            static_cast< ::mil::tatrc::physiology::datamodel::SystemData& > (*this) = x;
            this->CarbonDioxideProductionRate_ = x.CarbonDioxideProductionRate_;
            this->DehydrationFraction_ = x.DehydrationFraction_;
            this->ExtracellularFluidVolume_ = x.ExtracellularFluidVolume_;
            this->ExtravascularFluidVolume_ = x.ExtravascularFluidVolume_;
            this->IntracellularFluidPH_ = x.IntracellularFluidPH_;
            this->IntracellularFluidVolume_ = x.IntracellularFluidVolume_;
            this->TotalBodyFluidVolume_ = x.TotalBodyFluidVolume_;
            this->OxygenConsumptionRate_ = x.OxygenConsumptionRate_;
            this->RespiratoryExchangeRatio_ = x.RespiratoryExchangeRatio_;
            this->LiverInsulinSetPoint_ = x.LiverInsulinSetPoint_;
            this->LiverGlucagonSetPoint_ = x.LiverGlucagonSetPoint_;
            this->MuscleInsulinSetPoint_ = x.MuscleInsulinSetPoint_;
            this->MuscleGlucagonSetPoint_ = x.MuscleGlucagonSetPoint_;
            this->FatInsulinSetPoint_ = x.FatInsulinSetPoint_;
            this->FatGlucagonSetPoint_ = x.FatGlucagonSetPoint_;
            this->LiverGlycogen_ = x.LiverGlycogen_;
            this->MuscleGlycogen_ = x.MuscleGlycogen_;
            this->StoredProtein_ = x.StoredProtein_;
            this->StoredFat_ = x.StoredFat_;
          }

          return *this;
        }

        TissueSystemData::
        ~TissueSystemData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, TissueSystemData >
        _xsd_TissueSystemData_type_factory_init (
          "TissueSystemData",
          "uri:/mil/tatrc/physiology/datamodel");
      }
    }
  }
}

#include <ostream>

#include <xsd/cxx/tree/std-ostream-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::std_ostream_plate< 0, char >
  std_ostream_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        ::std::ostream&
        operator<< (::std::ostream& o, const TissueSystemData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::SystemData& > (i);

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.CarbonDioxideProductionRate ())
            {
              o << ::std::endl << "CarbonDioxideProductionRate: ";
              om.insert (o, *i.CarbonDioxideProductionRate ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.DehydrationFraction ())
            {
              o << ::std::endl << "DehydrationFraction: ";
              om.insert (o, *i.DehydrationFraction ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.ExtracellularFluidVolume ())
            {
              o << ::std::endl << "ExtracellularFluidVolume: ";
              om.insert (o, *i.ExtracellularFluidVolume ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.ExtravascularFluidVolume ())
            {
              o << ::std::endl << "ExtravascularFluidVolume: ";
              om.insert (o, *i.ExtravascularFluidVolume ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.IntracellularFluidPH ())
            {
              o << ::std::endl << "IntracellularFluidPH: ";
              om.insert (o, *i.IntracellularFluidPH ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.IntracellularFluidVolume ())
            {
              o << ::std::endl << "IntracellularFluidVolume: ";
              om.insert (o, *i.IntracellularFluidVolume ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.TotalBodyFluidVolume ())
            {
              o << ::std::endl << "TotalBodyFluidVolume: ";
              om.insert (o, *i.TotalBodyFluidVolume ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.OxygenConsumptionRate ())
            {
              o << ::std::endl << "OxygenConsumptionRate: ";
              om.insert (o, *i.OxygenConsumptionRate ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.RespiratoryExchangeRatio ())
            {
              o << ::std::endl << "RespiratoryExchangeRatio: ";
              om.insert (o, *i.RespiratoryExchangeRatio ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.LiverInsulinSetPoint ())
            {
              o << ::std::endl << "LiverInsulinSetPoint: ";
              om.insert (o, *i.LiverInsulinSetPoint ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.LiverGlucagonSetPoint ())
            {
              o << ::std::endl << "LiverGlucagonSetPoint: ";
              om.insert (o, *i.LiverGlucagonSetPoint ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.MuscleInsulinSetPoint ())
            {
              o << ::std::endl << "MuscleInsulinSetPoint: ";
              om.insert (o, *i.MuscleInsulinSetPoint ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.MuscleGlucagonSetPoint ())
            {
              o << ::std::endl << "MuscleGlucagonSetPoint: ";
              om.insert (o, *i.MuscleGlucagonSetPoint ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.FatInsulinSetPoint ())
            {
              o << ::std::endl << "FatInsulinSetPoint: ";
              om.insert (o, *i.FatInsulinSetPoint ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.FatGlucagonSetPoint ())
            {
              o << ::std::endl << "FatGlucagonSetPoint: ";
              om.insert (o, *i.FatGlucagonSetPoint ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.LiverGlycogen ())
            {
              o << ::std::endl << "LiverGlycogen: ";
              om.insert (o, *i.LiverGlycogen ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.MuscleGlycogen ())
            {
              o << ::std::endl << "MuscleGlycogen: ";
              om.insert (o, *i.MuscleGlycogen ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.StoredProtein ())
            {
              o << ::std::endl << "StoredProtein: ";
              om.insert (o, *i.StoredProtein ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.StoredFat ())
            {
              o << ::std::endl << "StoredFat: ";
              om.insert (o, *i.StoredFat ());
            }
          }

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, TissueSystemData >
        _xsd_TissueSystemData_std_ostream_init;
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
      }
    }
  }
}

#include <ostream>
#include <xsd/cxx/tree/error-handler.hxx>
#include <xsd/cxx/xml/dom/serialization-source.hxx>

#include <xsd/cxx/tree/type-serializer-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_serializer_plate< 0, char >
  type_serializer_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        void
        operator<< (::xercesc::DOMElement& e, const TissueSystemData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::SystemData& > (i);

          // CarbonDioxideProductionRate
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.CarbonDioxideProductionRate ())
            {
              const TissueSystemData::CarbonDioxideProductionRate_type& x (*i.CarbonDioxideProductionRate ());
              if (typeid (TissueSystemData::CarbonDioxideProductionRate_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "CarbonDioxideProductionRate",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "CarbonDioxideProductionRate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // DehydrationFraction
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.DehydrationFraction ())
            {
              const TissueSystemData::DehydrationFraction_type& x (*i.DehydrationFraction ());
              if (typeid (TissueSystemData::DehydrationFraction_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "DehydrationFraction",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "DehydrationFraction",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // ExtracellularFluidVolume
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.ExtracellularFluidVolume ())
            {
              const TissueSystemData::ExtracellularFluidVolume_type& x (*i.ExtracellularFluidVolume ());
              if (typeid (TissueSystemData::ExtracellularFluidVolume_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "ExtracellularFluidVolume",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "ExtracellularFluidVolume",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // ExtravascularFluidVolume
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.ExtravascularFluidVolume ())
            {
              const TissueSystemData::ExtravascularFluidVolume_type& x (*i.ExtravascularFluidVolume ());
              if (typeid (TissueSystemData::ExtravascularFluidVolume_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "ExtravascularFluidVolume",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "ExtravascularFluidVolume",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // IntracellularFluidPH
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.IntracellularFluidPH ())
            {
              const TissueSystemData::IntracellularFluidPH_type& x (*i.IntracellularFluidPH ());
              if (typeid (TissueSystemData::IntracellularFluidPH_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "IntracellularFluidPH",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "IntracellularFluidPH",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // IntracellularFluidVolume
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.IntracellularFluidVolume ())
            {
              const TissueSystemData::IntracellularFluidVolume_type& x (*i.IntracellularFluidVolume ());
              if (typeid (TissueSystemData::IntracellularFluidVolume_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "IntracellularFluidVolume",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "IntracellularFluidVolume",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // TotalBodyFluidVolume
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.TotalBodyFluidVolume ())
            {
              const TissueSystemData::TotalBodyFluidVolume_type& x (*i.TotalBodyFluidVolume ());
              if (typeid (TissueSystemData::TotalBodyFluidVolume_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "TotalBodyFluidVolume",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "TotalBodyFluidVolume",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // OxygenConsumptionRate
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.OxygenConsumptionRate ())
            {
              const TissueSystemData::OxygenConsumptionRate_type& x (*i.OxygenConsumptionRate ());
              if (typeid (TissueSystemData::OxygenConsumptionRate_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "OxygenConsumptionRate",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "OxygenConsumptionRate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // RespiratoryExchangeRatio
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.RespiratoryExchangeRatio ())
            {
              const TissueSystemData::RespiratoryExchangeRatio_type& x (*i.RespiratoryExchangeRatio ());
              if (typeid (TissueSystemData::RespiratoryExchangeRatio_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "RespiratoryExchangeRatio",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "RespiratoryExchangeRatio",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // LiverInsulinSetPoint
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.LiverInsulinSetPoint ())
            {
              const TissueSystemData::LiverInsulinSetPoint_type& x (*i.LiverInsulinSetPoint ());
              if (typeid (TissueSystemData::LiverInsulinSetPoint_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "LiverInsulinSetPoint",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "LiverInsulinSetPoint",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // LiverGlucagonSetPoint
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.LiverGlucagonSetPoint ())
            {
              const TissueSystemData::LiverGlucagonSetPoint_type& x (*i.LiverGlucagonSetPoint ());
              if (typeid (TissueSystemData::LiverGlucagonSetPoint_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "LiverGlucagonSetPoint",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "LiverGlucagonSetPoint",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // MuscleInsulinSetPoint
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.MuscleInsulinSetPoint ())
            {
              const TissueSystemData::MuscleInsulinSetPoint_type& x (*i.MuscleInsulinSetPoint ());
              if (typeid (TissueSystemData::MuscleInsulinSetPoint_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "MuscleInsulinSetPoint",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "MuscleInsulinSetPoint",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // MuscleGlucagonSetPoint
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.MuscleGlucagonSetPoint ())
            {
              const TissueSystemData::MuscleGlucagonSetPoint_type& x (*i.MuscleGlucagonSetPoint ());
              if (typeid (TissueSystemData::MuscleGlucagonSetPoint_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "MuscleGlucagonSetPoint",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "MuscleGlucagonSetPoint",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // FatInsulinSetPoint
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.FatInsulinSetPoint ())
            {
              const TissueSystemData::FatInsulinSetPoint_type& x (*i.FatInsulinSetPoint ());
              if (typeid (TissueSystemData::FatInsulinSetPoint_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "FatInsulinSetPoint",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "FatInsulinSetPoint",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // FatGlucagonSetPoint
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.FatGlucagonSetPoint ())
            {
              const TissueSystemData::FatGlucagonSetPoint_type& x (*i.FatGlucagonSetPoint ());
              if (typeid (TissueSystemData::FatGlucagonSetPoint_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "FatGlucagonSetPoint",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "FatGlucagonSetPoint",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // LiverGlycogen
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.LiverGlycogen ())
            {
              const TissueSystemData::LiverGlycogen_type& x (*i.LiverGlycogen ());
              if (typeid (TissueSystemData::LiverGlycogen_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "LiverGlycogen",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "LiverGlycogen",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // MuscleGlycogen
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.MuscleGlycogen ())
            {
              const TissueSystemData::MuscleGlycogen_type& x (*i.MuscleGlycogen ());
              if (typeid (TissueSystemData::MuscleGlycogen_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "MuscleGlycogen",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "MuscleGlycogen",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // StoredProtein
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.StoredProtein ())
            {
              const TissueSystemData::StoredProtein_type& x (*i.StoredProtein ());
              if (typeid (TissueSystemData::StoredProtein_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "StoredProtein",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "StoredProtein",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // StoredFat
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.StoredFat ())
            {
              const TissueSystemData::StoredFat_type& x (*i.StoredFat ());
              if (typeid (TissueSystemData::StoredFat_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "StoredFat",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "StoredFat",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, TissueSystemData >
        _xsd_TissueSystemData_type_serializer_init (
          "TissueSystemData",
          "uri:/mil/tatrc/physiology/datamodel");
      }
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

