// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
#include "Properties.hxx"

//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "GastrointestinalConfigurationData.hxx"

#include "ScalarFractionData.hxx"

#include "ScalarMassPerTimeData.hxx"

#include "NutritionData.hxx"

#include "ScalarVolumePerTimeData.hxx"

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        // GastrointestinalConfigurationData
        // 

        const GastrointestinalConfigurationData::CalciumAbsorptionFraction_optional& GastrointestinalConfigurationData::
        CalciumAbsorptionFraction () const
        {
          return this->CalciumAbsorptionFraction_;
        }

        GastrointestinalConfigurationData::CalciumAbsorptionFraction_optional& GastrointestinalConfigurationData::
        CalciumAbsorptionFraction ()
        {
          return this->CalciumAbsorptionFraction_;
        }

        void GastrointestinalConfigurationData::
        CalciumAbsorptionFraction (const CalciumAbsorptionFraction_type& x)
        {
          this->CalciumAbsorptionFraction_.set (x);
        }

        void GastrointestinalConfigurationData::
        CalciumAbsorptionFraction (const CalciumAbsorptionFraction_optional& x)
        {
          this->CalciumAbsorptionFraction_ = x;
        }

        void GastrointestinalConfigurationData::
        CalciumAbsorptionFraction (::std::unique_ptr< CalciumAbsorptionFraction_type > x)
        {
          this->CalciumAbsorptionFraction_.set (std::move (x));
        }

        const GastrointestinalConfigurationData::CalciumDigestionRate_optional& GastrointestinalConfigurationData::
        CalciumDigestionRate () const
        {
          return this->CalciumDigestionRate_;
        }

        GastrointestinalConfigurationData::CalciumDigestionRate_optional& GastrointestinalConfigurationData::
        CalciumDigestionRate ()
        {
          return this->CalciumDigestionRate_;
        }

        void GastrointestinalConfigurationData::
        CalciumDigestionRate (const CalciumDigestionRate_type& x)
        {
          this->CalciumDigestionRate_.set (x);
        }

        void GastrointestinalConfigurationData::
        CalciumDigestionRate (const CalciumDigestionRate_optional& x)
        {
          this->CalciumDigestionRate_ = x;
        }

        void GastrointestinalConfigurationData::
        CalciumDigestionRate (::std::unique_ptr< CalciumDigestionRate_type > x)
        {
          this->CalciumDigestionRate_.set (std::move (x));
        }

        const GastrointestinalConfigurationData::CarbohydrateAbsorptionFraction_optional& GastrointestinalConfigurationData::
        CarbohydrateAbsorptionFraction () const
        {
          return this->CarbohydrateAbsorptionFraction_;
        }

        GastrointestinalConfigurationData::CarbohydrateAbsorptionFraction_optional& GastrointestinalConfigurationData::
        CarbohydrateAbsorptionFraction ()
        {
          return this->CarbohydrateAbsorptionFraction_;
        }

        void GastrointestinalConfigurationData::
        CarbohydrateAbsorptionFraction (const CarbohydrateAbsorptionFraction_type& x)
        {
          this->CarbohydrateAbsorptionFraction_.set (x);
        }

        void GastrointestinalConfigurationData::
        CarbohydrateAbsorptionFraction (const CarbohydrateAbsorptionFraction_optional& x)
        {
          this->CarbohydrateAbsorptionFraction_ = x;
        }

        void GastrointestinalConfigurationData::
        CarbohydrateAbsorptionFraction (::std::unique_ptr< CarbohydrateAbsorptionFraction_type > x)
        {
          this->CarbohydrateAbsorptionFraction_.set (std::move (x));
        }

        const GastrointestinalConfigurationData::DefaultCarbohydrateDigestionRate_optional& GastrointestinalConfigurationData::
        DefaultCarbohydrateDigestionRate () const
        {
          return this->DefaultCarbohydrateDigestionRate_;
        }

        GastrointestinalConfigurationData::DefaultCarbohydrateDigestionRate_optional& GastrointestinalConfigurationData::
        DefaultCarbohydrateDigestionRate ()
        {
          return this->DefaultCarbohydrateDigestionRate_;
        }

        void GastrointestinalConfigurationData::
        DefaultCarbohydrateDigestionRate (const DefaultCarbohydrateDigestionRate_type& x)
        {
          this->DefaultCarbohydrateDigestionRate_.set (x);
        }

        void GastrointestinalConfigurationData::
        DefaultCarbohydrateDigestionRate (const DefaultCarbohydrateDigestionRate_optional& x)
        {
          this->DefaultCarbohydrateDigestionRate_ = x;
        }

        void GastrointestinalConfigurationData::
        DefaultCarbohydrateDigestionRate (::std::unique_ptr< DefaultCarbohydrateDigestionRate_type > x)
        {
          this->DefaultCarbohydrateDigestionRate_.set (std::move (x));
        }

        const GastrointestinalConfigurationData::DefaultFatDigestionRate_optional& GastrointestinalConfigurationData::
        DefaultFatDigestionRate () const
        {
          return this->DefaultFatDigestionRate_;
        }

        GastrointestinalConfigurationData::DefaultFatDigestionRate_optional& GastrointestinalConfigurationData::
        DefaultFatDigestionRate ()
        {
          return this->DefaultFatDigestionRate_;
        }

        void GastrointestinalConfigurationData::
        DefaultFatDigestionRate (const DefaultFatDigestionRate_type& x)
        {
          this->DefaultFatDigestionRate_.set (x);
        }

        void GastrointestinalConfigurationData::
        DefaultFatDigestionRate (const DefaultFatDigestionRate_optional& x)
        {
          this->DefaultFatDigestionRate_ = x;
        }

        void GastrointestinalConfigurationData::
        DefaultFatDigestionRate (::std::unique_ptr< DefaultFatDigestionRate_type > x)
        {
          this->DefaultFatDigestionRate_.set (std::move (x));
        }

        const GastrointestinalConfigurationData::DefaultProteinDigestionRate_optional& GastrointestinalConfigurationData::
        DefaultProteinDigestionRate () const
        {
          return this->DefaultProteinDigestionRate_;
        }

        GastrointestinalConfigurationData::DefaultProteinDigestionRate_optional& GastrointestinalConfigurationData::
        DefaultProteinDigestionRate ()
        {
          return this->DefaultProteinDigestionRate_;
        }

        void GastrointestinalConfigurationData::
        DefaultProteinDigestionRate (const DefaultProteinDigestionRate_type& x)
        {
          this->DefaultProteinDigestionRate_.set (x);
        }

        void GastrointestinalConfigurationData::
        DefaultProteinDigestionRate (const DefaultProteinDigestionRate_optional& x)
        {
          this->DefaultProteinDigestionRate_ = x;
        }

        void GastrointestinalConfigurationData::
        DefaultProteinDigestionRate (::std::unique_ptr< DefaultProteinDigestionRate_type > x)
        {
          this->DefaultProteinDigestionRate_.set (std::move (x));
        }

        const GastrointestinalConfigurationData::DefaultStomachContents_optional& GastrointestinalConfigurationData::
        DefaultStomachContents () const
        {
          return this->DefaultStomachContents_;
        }

        GastrointestinalConfigurationData::DefaultStomachContents_optional& GastrointestinalConfigurationData::
        DefaultStomachContents ()
        {
          return this->DefaultStomachContents_;
        }

        void GastrointestinalConfigurationData::
        DefaultStomachContents (const DefaultStomachContents_type& x)
        {
          this->DefaultStomachContents_.set (x);
        }

        void GastrointestinalConfigurationData::
        DefaultStomachContents (const DefaultStomachContents_optional& x)
        {
          this->DefaultStomachContents_ = x;
        }

        void GastrointestinalConfigurationData::
        DefaultStomachContents (::std::unique_ptr< DefaultStomachContents_type > x)
        {
          this->DefaultStomachContents_.set (std::move (x));
        }

        const GastrointestinalConfigurationData::DefaultStomachContentsFile_optional& GastrointestinalConfigurationData::
        DefaultStomachContentsFile () const
        {
          return this->DefaultStomachContentsFile_;
        }

        GastrointestinalConfigurationData::DefaultStomachContentsFile_optional& GastrointestinalConfigurationData::
        DefaultStomachContentsFile ()
        {
          return this->DefaultStomachContentsFile_;
        }

        void GastrointestinalConfigurationData::
        DefaultStomachContentsFile (const DefaultStomachContentsFile_type& x)
        {
          this->DefaultStomachContentsFile_.set (x);
        }

        void GastrointestinalConfigurationData::
        DefaultStomachContentsFile (const DefaultStomachContentsFile_optional& x)
        {
          this->DefaultStomachContentsFile_ = x;
        }

        void GastrointestinalConfigurationData::
        DefaultStomachContentsFile (::std::unique_ptr< DefaultStomachContentsFile_type > x)
        {
          this->DefaultStomachContentsFile_.set (std::move (x));
        }

        const GastrointestinalConfigurationData::FatAbsorptionFraction_optional& GastrointestinalConfigurationData::
        FatAbsorptionFraction () const
        {
          return this->FatAbsorptionFraction_;
        }

        GastrointestinalConfigurationData::FatAbsorptionFraction_optional& GastrointestinalConfigurationData::
        FatAbsorptionFraction ()
        {
          return this->FatAbsorptionFraction_;
        }

        void GastrointestinalConfigurationData::
        FatAbsorptionFraction (const FatAbsorptionFraction_type& x)
        {
          this->FatAbsorptionFraction_.set (x);
        }

        void GastrointestinalConfigurationData::
        FatAbsorptionFraction (const FatAbsorptionFraction_optional& x)
        {
          this->FatAbsorptionFraction_ = x;
        }

        void GastrointestinalConfigurationData::
        FatAbsorptionFraction (::std::unique_ptr< FatAbsorptionFraction_type > x)
        {
          this->FatAbsorptionFraction_.set (std::move (x));
        }

        const GastrointestinalConfigurationData::ProteinToUreaFraction_optional& GastrointestinalConfigurationData::
        ProteinToUreaFraction () const
        {
          return this->ProteinToUreaFraction_;
        }

        GastrointestinalConfigurationData::ProteinToUreaFraction_optional& GastrointestinalConfigurationData::
        ProteinToUreaFraction ()
        {
          return this->ProteinToUreaFraction_;
        }

        void GastrointestinalConfigurationData::
        ProteinToUreaFraction (const ProteinToUreaFraction_type& x)
        {
          this->ProteinToUreaFraction_.set (x);
        }

        void GastrointestinalConfigurationData::
        ProteinToUreaFraction (const ProteinToUreaFraction_optional& x)
        {
          this->ProteinToUreaFraction_ = x;
        }

        void GastrointestinalConfigurationData::
        ProteinToUreaFraction (::std::unique_ptr< ProteinToUreaFraction_type > x)
        {
          this->ProteinToUreaFraction_.set (std::move (x));
        }

        const GastrointestinalConfigurationData::WaterDigestionRate_optional& GastrointestinalConfigurationData::
        WaterDigestionRate () const
        {
          return this->WaterDigestionRate_;
        }

        GastrointestinalConfigurationData::WaterDigestionRate_optional& GastrointestinalConfigurationData::
        WaterDigestionRate ()
        {
          return this->WaterDigestionRate_;
        }

        void GastrointestinalConfigurationData::
        WaterDigestionRate (const WaterDigestionRate_type& x)
        {
          this->WaterDigestionRate_.set (x);
        }

        void GastrointestinalConfigurationData::
        WaterDigestionRate (const WaterDigestionRate_optional& x)
        {
          this->WaterDigestionRate_ = x;
        }

        void GastrointestinalConfigurationData::
        WaterDigestionRate (::std::unique_ptr< WaterDigestionRate_type > x)
        {
          this->WaterDigestionRate_.set (std::move (x));
        }
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        // GastrointestinalConfigurationData
        //

        GastrointestinalConfigurationData::
        GastrointestinalConfigurationData ()
        : ::mil::tatrc::physiology::datamodel::ObjectData (),
          CalciumAbsorptionFraction_ (this),
          CalciumDigestionRate_ (this),
          CarbohydrateAbsorptionFraction_ (this),
          DefaultCarbohydrateDigestionRate_ (this),
          DefaultFatDigestionRate_ (this),
          DefaultProteinDigestionRate_ (this),
          DefaultStomachContents_ (this),
          DefaultStomachContentsFile_ (this),
          FatAbsorptionFraction_ (this),
          ProteinToUreaFraction_ (this),
          WaterDigestionRate_ (this)
        {
        }

        GastrointestinalConfigurationData::
        GastrointestinalConfigurationData (const GastrointestinalConfigurationData& x,
                                           ::xml_schema::flags f,
                                           ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ObjectData (x, f, c),
          CalciumAbsorptionFraction_ (x.CalciumAbsorptionFraction_, f, this),
          CalciumDigestionRate_ (x.CalciumDigestionRate_, f, this),
          CarbohydrateAbsorptionFraction_ (x.CarbohydrateAbsorptionFraction_, f, this),
          DefaultCarbohydrateDigestionRate_ (x.DefaultCarbohydrateDigestionRate_, f, this),
          DefaultFatDigestionRate_ (x.DefaultFatDigestionRate_, f, this),
          DefaultProteinDigestionRate_ (x.DefaultProteinDigestionRate_, f, this),
          DefaultStomachContents_ (x.DefaultStomachContents_, f, this),
          DefaultStomachContentsFile_ (x.DefaultStomachContentsFile_, f, this),
          FatAbsorptionFraction_ (x.FatAbsorptionFraction_, f, this),
          ProteinToUreaFraction_ (x.ProteinToUreaFraction_, f, this),
          WaterDigestionRate_ (x.WaterDigestionRate_, f, this)
        {
        }

        GastrointestinalConfigurationData::
        GastrointestinalConfigurationData (const ::xercesc::DOMElement& e,
                                           ::xml_schema::flags f,
                                           ::xml_schema::container* c)
        : ::mil::tatrc::physiology::datamodel::ObjectData (e, f | ::xml_schema::flags::base, c),
          CalciumAbsorptionFraction_ (this),
          CalciumDigestionRate_ (this),
          CarbohydrateAbsorptionFraction_ (this),
          DefaultCarbohydrateDigestionRate_ (this),
          DefaultFatDigestionRate_ (this),
          DefaultProteinDigestionRate_ (this),
          DefaultStomachContents_ (this),
          DefaultStomachContentsFile_ (this),
          FatAbsorptionFraction_ (this),
          ProteinToUreaFraction_ (this),
          WaterDigestionRate_ (this)
        {
          if ((f & ::xml_schema::flags::base) == 0)
          {
            ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
            this->parse (p, f);
          }
        }

        void GastrointestinalConfigurationData::
        parse (::xsd::cxx::xml::dom::parser< char >& p,
               ::xml_schema::flags f)
        {
          this->::mil::tatrc::physiology::datamodel::ObjectData::parse (p, f);

          for (; p.more_content (); p.next_content (false))
          {
            const ::xercesc::DOMElement& i (p.cur_element ());
            const ::xsd::cxx::xml::qualified_name< char > n (
              ::xsd::cxx::xml::dom::name< char > (i));

            // CalciumAbsorptionFraction
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "CalciumAbsorptionFraction",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< CalciumAbsorptionFraction_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->CalciumAbsorptionFraction_)
                {
                  ::std::unique_ptr< CalciumAbsorptionFraction_type > r (
                    dynamic_cast< CalciumAbsorptionFraction_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->CalciumAbsorptionFraction_.set (::std::move (r));
                  continue;
                }
              }
            }

            // CalciumDigestionRate
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "CalciumDigestionRate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< CalciumDigestionRate_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->CalciumDigestionRate_)
                {
                  ::std::unique_ptr< CalciumDigestionRate_type > r (
                    dynamic_cast< CalciumDigestionRate_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->CalciumDigestionRate_.set (::std::move (r));
                  continue;
                }
              }
            }

            // CarbohydrateAbsorptionFraction
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "CarbohydrateAbsorptionFraction",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< CarbohydrateAbsorptionFraction_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->CarbohydrateAbsorptionFraction_)
                {
                  ::std::unique_ptr< CarbohydrateAbsorptionFraction_type > r (
                    dynamic_cast< CarbohydrateAbsorptionFraction_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->CarbohydrateAbsorptionFraction_.set (::std::move (r));
                  continue;
                }
              }
            }

            // DefaultCarbohydrateDigestionRate
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "DefaultCarbohydrateDigestionRate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< DefaultCarbohydrateDigestionRate_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->DefaultCarbohydrateDigestionRate_)
                {
                  ::std::unique_ptr< DefaultCarbohydrateDigestionRate_type > r (
                    dynamic_cast< DefaultCarbohydrateDigestionRate_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->DefaultCarbohydrateDigestionRate_.set (::std::move (r));
                  continue;
                }
              }
            }

            // DefaultFatDigestionRate
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "DefaultFatDigestionRate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< DefaultFatDigestionRate_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->DefaultFatDigestionRate_)
                {
                  ::std::unique_ptr< DefaultFatDigestionRate_type > r (
                    dynamic_cast< DefaultFatDigestionRate_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->DefaultFatDigestionRate_.set (::std::move (r));
                  continue;
                }
              }
            }

            // DefaultProteinDigestionRate
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "DefaultProteinDigestionRate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< DefaultProteinDigestionRate_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->DefaultProteinDigestionRate_)
                {
                  ::std::unique_ptr< DefaultProteinDigestionRate_type > r (
                    dynamic_cast< DefaultProteinDigestionRate_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->DefaultProteinDigestionRate_.set (::std::move (r));
                  continue;
                }
              }
            }

            // DefaultStomachContents
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "DefaultStomachContents",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< DefaultStomachContents_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->DefaultStomachContents_)
                {
                  ::std::unique_ptr< DefaultStomachContents_type > r (
                    dynamic_cast< DefaultStomachContents_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->DefaultStomachContents_.set (::std::move (r));
                  continue;
                }
              }
            }

            // DefaultStomachContentsFile
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "DefaultStomachContentsFile",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< DefaultStomachContentsFile_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->DefaultStomachContentsFile_)
                {
                  ::std::unique_ptr< DefaultStomachContentsFile_type > r (
                    dynamic_cast< DefaultStomachContentsFile_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->DefaultStomachContentsFile_.set (::std::move (r));
                  continue;
                }
              }
            }

            // FatAbsorptionFraction
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "FatAbsorptionFraction",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< FatAbsorptionFraction_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->FatAbsorptionFraction_)
                {
                  ::std::unique_ptr< FatAbsorptionFraction_type > r (
                    dynamic_cast< FatAbsorptionFraction_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->FatAbsorptionFraction_.set (::std::move (r));
                  continue;
                }
              }
            }

            // ProteinToUreaFraction
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "ProteinToUreaFraction",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< ProteinToUreaFraction_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->ProteinToUreaFraction_)
                {
                  ::std::unique_ptr< ProteinToUreaFraction_type > r (
                    dynamic_cast< ProteinToUreaFraction_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->ProteinToUreaFraction_.set (::std::move (r));
                  continue;
                }
              }
            }

            // WaterDigestionRate
            //
            {
              ::std::unique_ptr< ::xsd::cxx::tree::type > tmp (
                ::xsd::cxx::tree::type_factory_map_instance< 0, char > ().create (
                  "WaterDigestionRate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  &::xsd::cxx::tree::factory_impl< WaterDigestionRate_type >,
                  false, true, i, n, f, this));

              if (tmp.get () != 0)
              {
                if (!this->WaterDigestionRate_)
                {
                  ::std::unique_ptr< WaterDigestionRate_type > r (
                    dynamic_cast< WaterDigestionRate_type* > (tmp.get ()));

                  if (r.get ())
                    tmp.release ();
                  else
                    throw ::xsd::cxx::tree::not_derived< char > ();

                  this->WaterDigestionRate_.set (::std::move (r));
                  continue;
                }
              }
            }

            break;
          }
        }

        GastrointestinalConfigurationData* GastrointestinalConfigurationData::
        _clone (::xml_schema::flags f,
                ::xml_schema::container* c) const
        {
          return new class GastrointestinalConfigurationData (*this, f, c);
        }

        GastrointestinalConfigurationData& GastrointestinalConfigurationData::
        operator= (const GastrointestinalConfigurationData& x)
        {
          if (this != &x)
          {
            static_cast< ::mil::tatrc::physiology::datamodel::ObjectData& > (*this) = x;
            this->CalciumAbsorptionFraction_ = x.CalciumAbsorptionFraction_;
            this->CalciumDigestionRate_ = x.CalciumDigestionRate_;
            this->CarbohydrateAbsorptionFraction_ = x.CarbohydrateAbsorptionFraction_;
            this->DefaultCarbohydrateDigestionRate_ = x.DefaultCarbohydrateDigestionRate_;
            this->DefaultFatDigestionRate_ = x.DefaultFatDigestionRate_;
            this->DefaultProteinDigestionRate_ = x.DefaultProteinDigestionRate_;
            this->DefaultStomachContents_ = x.DefaultStomachContents_;
            this->DefaultStomachContentsFile_ = x.DefaultStomachContentsFile_;
            this->FatAbsorptionFraction_ = x.FatAbsorptionFraction_;
            this->ProteinToUreaFraction_ = x.ProteinToUreaFraction_;
            this->WaterDigestionRate_ = x.WaterDigestionRate_;
          }

          return *this;
        }

        GastrointestinalConfigurationData::
        ~GastrointestinalConfigurationData ()
        {
        }

        static
        const ::xsd::cxx::tree::type_factory_initializer< 0, char, GastrointestinalConfigurationData >
        _xsd_GastrointestinalConfigurationData_type_factory_init (
          "GastrointestinalConfigurationData",
          "uri:/mil/tatrc/physiology/datamodel");
      }
    }
  }
}

#include <ostream>

#include <xsd/cxx/tree/std-ostream-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::std_ostream_plate< 0, char >
  std_ostream_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        ::std::ostream&
        operator<< (::std::ostream& o, const GastrointestinalConfigurationData& i)
        {
          o << static_cast< const ::mil::tatrc::physiology::datamodel::ObjectData& > (i);

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.CalciumAbsorptionFraction ())
            {
              o << ::std::endl << "CalciumAbsorptionFraction: ";
              om.insert (o, *i.CalciumAbsorptionFraction ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.CalciumDigestionRate ())
            {
              o << ::std::endl << "CalciumDigestionRate: ";
              om.insert (o, *i.CalciumDigestionRate ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.CarbohydrateAbsorptionFraction ())
            {
              o << ::std::endl << "CarbohydrateAbsorptionFraction: ";
              om.insert (o, *i.CarbohydrateAbsorptionFraction ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.DefaultCarbohydrateDigestionRate ())
            {
              o << ::std::endl << "DefaultCarbohydrateDigestionRate: ";
              om.insert (o, *i.DefaultCarbohydrateDigestionRate ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.DefaultFatDigestionRate ())
            {
              o << ::std::endl << "DefaultFatDigestionRate: ";
              om.insert (o, *i.DefaultFatDigestionRate ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.DefaultProteinDigestionRate ())
            {
              o << ::std::endl << "DefaultProteinDigestionRate: ";
              om.insert (o, *i.DefaultProteinDigestionRate ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.DefaultStomachContents ())
            {
              o << ::std::endl << "DefaultStomachContents: ";
              om.insert (o, *i.DefaultStomachContents ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.DefaultStomachContentsFile ())
            {
              o << ::std::endl << "DefaultStomachContentsFile: ";
              om.insert (o, *i.DefaultStomachContentsFile ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.FatAbsorptionFraction ())
            {
              o << ::std::endl << "FatAbsorptionFraction: ";
              om.insert (o, *i.FatAbsorptionFraction ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.ProteinToUreaFraction ())
            {
              o << ::std::endl << "ProteinToUreaFraction: ";
              om.insert (o, *i.ProteinToUreaFraction ());
            }
          }

          {
            ::xsd::cxx::tree::std_ostream_map< char >& om (
              ::xsd::cxx::tree::std_ostream_map_instance< 0, char > ());

            if (i.WaterDigestionRate ())
            {
              o << ::std::endl << "WaterDigestionRate: ";
              om.insert (o, *i.WaterDigestionRate ());
            }
          }

          return o;
        }

        static
        const ::xsd::cxx::tree::std_ostream_initializer< 0, char, GastrointestinalConfigurationData >
        _xsd_GastrointestinalConfigurationData_std_ostream_init;
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
      }
    }
  }
}

#include <ostream>
#include <xsd/cxx/tree/error-handler.hxx>
#include <xsd/cxx/xml/dom/serialization-source.hxx>

#include <xsd/cxx/tree/type-serializer-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_serializer_plate< 0, char >
  type_serializer_plate_init;
}

namespace mil
{
  namespace tatrc
  {
    namespace physiology
    {
      namespace datamodel
      {
        void
        operator<< (::xercesc::DOMElement& e, const GastrointestinalConfigurationData& i)
        {
          e << static_cast< const ::mil::tatrc::physiology::datamodel::ObjectData& > (i);

          // CalciumAbsorptionFraction
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.CalciumAbsorptionFraction ())
            {
              const GastrointestinalConfigurationData::CalciumAbsorptionFraction_type& x (*i.CalciumAbsorptionFraction ());
              if (typeid (GastrointestinalConfigurationData::CalciumAbsorptionFraction_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "CalciumAbsorptionFraction",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "CalciumAbsorptionFraction",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // CalciumDigestionRate
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.CalciumDigestionRate ())
            {
              const GastrointestinalConfigurationData::CalciumDigestionRate_type& x (*i.CalciumDigestionRate ());
              if (typeid (GastrointestinalConfigurationData::CalciumDigestionRate_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "CalciumDigestionRate",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "CalciumDigestionRate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // CarbohydrateAbsorptionFraction
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.CarbohydrateAbsorptionFraction ())
            {
              const GastrointestinalConfigurationData::CarbohydrateAbsorptionFraction_type& x (*i.CarbohydrateAbsorptionFraction ());
              if (typeid (GastrointestinalConfigurationData::CarbohydrateAbsorptionFraction_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "CarbohydrateAbsorptionFraction",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "CarbohydrateAbsorptionFraction",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // DefaultCarbohydrateDigestionRate
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.DefaultCarbohydrateDigestionRate ())
            {
              const GastrointestinalConfigurationData::DefaultCarbohydrateDigestionRate_type& x (*i.DefaultCarbohydrateDigestionRate ());
              if (typeid (GastrointestinalConfigurationData::DefaultCarbohydrateDigestionRate_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "DefaultCarbohydrateDigestionRate",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "DefaultCarbohydrateDigestionRate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // DefaultFatDigestionRate
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.DefaultFatDigestionRate ())
            {
              const GastrointestinalConfigurationData::DefaultFatDigestionRate_type& x (*i.DefaultFatDigestionRate ());
              if (typeid (GastrointestinalConfigurationData::DefaultFatDigestionRate_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "DefaultFatDigestionRate",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "DefaultFatDigestionRate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // DefaultProteinDigestionRate
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.DefaultProteinDigestionRate ())
            {
              const GastrointestinalConfigurationData::DefaultProteinDigestionRate_type& x (*i.DefaultProteinDigestionRate ());
              if (typeid (GastrointestinalConfigurationData::DefaultProteinDigestionRate_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "DefaultProteinDigestionRate",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "DefaultProteinDigestionRate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // DefaultStomachContents
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.DefaultStomachContents ())
            {
              const GastrointestinalConfigurationData::DefaultStomachContents_type& x (*i.DefaultStomachContents ());
              if (typeid (GastrointestinalConfigurationData::DefaultStomachContents_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "DefaultStomachContents",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "DefaultStomachContents",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // DefaultStomachContentsFile
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.DefaultStomachContentsFile ())
            {
              const GastrointestinalConfigurationData::DefaultStomachContentsFile_type& x (*i.DefaultStomachContentsFile ());
              if (typeid (GastrointestinalConfigurationData::DefaultStomachContentsFile_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "DefaultStomachContentsFile",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "DefaultStomachContentsFile",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // FatAbsorptionFraction
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.FatAbsorptionFraction ())
            {
              const GastrointestinalConfigurationData::FatAbsorptionFraction_type& x (*i.FatAbsorptionFraction ());
              if (typeid (GastrointestinalConfigurationData::FatAbsorptionFraction_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "FatAbsorptionFraction",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "FatAbsorptionFraction",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // ProteinToUreaFraction
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.ProteinToUreaFraction ())
            {
              const GastrointestinalConfigurationData::ProteinToUreaFraction_type& x (*i.ProteinToUreaFraction ());
              if (typeid (GastrointestinalConfigurationData::ProteinToUreaFraction_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "ProteinToUreaFraction",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "ProteinToUreaFraction",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }

          // WaterDigestionRate
          //
          {
            ::xsd::cxx::tree::type_serializer_map< char >& tsm (
              ::xsd::cxx::tree::type_serializer_map_instance< 0, char > ());

            if (i.WaterDigestionRate ())
            {
              const GastrointestinalConfigurationData::WaterDigestionRate_type& x (*i.WaterDigestionRate ());
              if (typeid (GastrointestinalConfigurationData::WaterDigestionRate_type) == typeid (x))
              {
                ::xercesc::DOMElement& s (
                  ::xsd::cxx::xml::dom::create_element (
                    "WaterDigestionRate",
                    "uri:/mil/tatrc/physiology/datamodel",
                    e));

                s << x;
              }
              else
                tsm.serialize (
                  "WaterDigestionRate",
                  "uri:/mil/tatrc/physiology/datamodel",
                  false, true, e, x);
            }
          }
        }

        static
        const ::xsd::cxx::tree::type_serializer_initializer< 0, char, GastrointestinalConfigurationData >
        _xsd_GastrointestinalConfigurationData_type_serializer_init (
          "GastrointestinalConfigurationData",
          "uri:/mil/tatrc/physiology/datamodel");
      }
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

